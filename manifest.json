{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v11.json", "dbt_version": "1.7.15", "generated_at": "2024-06-22T13:23:50.948432Z", "invocation_id": "0dedb6e2-685a-4592-8549-5897d9c00540", "env": {}, "project_name": "bdh_dbt_models", "project_id": "d192aa5981d95bc221c42b6f529ca672", "user_id": null, "send_anonymous_usage_stats": true, "adapter_type": "snowflake"}, "nodes": {"model.bdh_dbt_models.int_ee_accounts": {"database": "bdh_ee", "schema": "test", "name": "int_ee_accounts", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_accounts.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_accounts.sql", "unique_id": "model.bdh_dbt_models.int_ee_accounts", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_accounts"], "alias": "int_ee_accounts", "checksum": {"name": "sha256", "checksum": "6c4ddcdc8d6ae85a43be564cdba5dbe5de74207aba0ae250cf4144ddd99a4a0f"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7586977, "relation_name": null, "raw_code": "WITH stg_accounts AS (\r\n    SELECT * FROM {{ ref(\"stg_ee_accounts\") }}\r\n    ),\r\n\r\n    stg_accounts_x AS (\r\n        SELECT * \r\n        FROM {{ ref(\"stg_ee_accounts_x\") }}\r\n        WHERE attrib_35 IN ('T2 Employee',\r\n                            'Intercompany',\r\n                            'Roaming Test'\r\n                            )\r\n    )\r\n\r\nSELECT a.row_id,\r\n       a.cust_id,\r\n       a.sub_bad_debt,\r\n       a.sub_type\r\nFROM stg_accounts a\r\nLEFT JOIN stg_accounts_x ax ON a.row_id = ax.row_id\r\nWHERE ax.row_id IS NULL", "language": "sql", "refs": [{"name": "stg_ee_accounts", "package": null, "version": null}, {"name": "stg_ee_accounts_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_assets": {"database": "bdh_ee", "schema": "test", "name": "int_ee_assets", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_assets.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_assets.sql", "unique_id": "model.bdh_dbt_models.int_ee_assets", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_assets"], "alias": "int_ee_assets", "checksum": {"name": "sha256", "checksum": "2f43fc7ca09240499d93cff51bffa827d456826a0b62751c8d4957287a36376e"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7606976, "relation_name": null, "raw_code": "WITH stg_assets AS (\r\n  SELECT row_id as sub_billing_id,\r\n  SUBSTRING(x_activation_dt, 1, 10) AS sub_acquisition_date,\r\n  SUBSTRING(end_dt, 1, 10) AS sub_deactivation_date,\r\n  integration_id,\r\n  status_cd AS sub_status_original,\r\n  x_price_plan_code,\r\n  x_primary_attr_value AS sub_msisdn_now,\r\n  prod_id,\r\n  owner_con_id,\r\n  bill_accnt_id,\r\n  ROW_NUMBER() OVER (PARTITION BY x_primary_attr_value, bill_accnt_id ORDER BY x_activation_dt DESC NULLS LAST, last_upd DESC NULLS LAST) AS rn,\r\n  LEAD(last_upd) OVER (PARTITION BY x_primary_attr_value ORDER BY last_upd NULLS FIRST) AS last_upd_lead,\r\n  last_upd\r\n  FROM {{ ref(\"stg_ee_assets\") }}\r\n  WHERE x_primary_attr_name = 'Postpaid TN'\r\n )\r\n\r\nSELECT\r\n  sub_billing_id,\r\n  sub_acquisition_date,\r\n  integration_id,\r\n  sub_status_original,\r\n  x_price_plan_code,\r\n  sub_msisdn_now,\r\n  prod_id,\r\n  owner_con_id,\r\n  bill_accnt_id,\r\n  CASE WHEN rn > 1\r\n       AND sub_status_original = 'Active'\r\n       AND sub_deactivation_date IS NULL\r\n       THEN SUBSTRING(last_upd_lead, 1, 10)\r\n       ELSE sub_deactivation_date\r\n    END AS sub_deactivation_date\r\nFROM stg_assets", "language": "sql", "refs": [{"name": "stg_ee_assets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_ee_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_assets_fiber": {"database": "bdh_ee", "schema": "test", "name": "int_ee_assets_fiber", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_assets_fiber.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_assets_fiber.sql", "unique_id": "model.bdh_dbt_models.int_ee_assets_fiber", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_assets_fiber"], "alias": "int_ee_assets_fiber", "checksum": {"name": "sha256", "checksum": "e6d8eae757724831b0f13b1628ebbdae3218c08c6ff010138b88ca1562fc2f35"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.762697, "relation_name": null, "raw_code": "WITH stg_assets AS (SELECT * FROM {{ ref(\"stg_ee_assets\") }}),\r\n\r\n     stg_accounts AS (SELECT * FROM {{ ref(\"stg_ee_accounts\") }}),\r\n\r\n     stg_accounts_x AS (SELECT * FROM {{ ref(\"stg_ee_accounts_x\") }}),\r\n\r\n     stg_product AS (SELECT * FROM {{ ref(\"stg_ee_product\") }})\r\n\r\nSELECT a.row_id AS sub_billing_id,\r\n       SUBSTRING(a.x_activation_dt, 1, 10) AS sub_acquisition_date,\r\n       SUBSTRING(a.end_dt, 1, 10) AS sub_deactivation_date,\r\n       a.integration_id,\r\n       a.status_cd AS sub_status_original,\r\n       a.x_price_plan_code,\r\n       a.x_primary_attr_value AS sub_msisdn_now,\r\n       a.prod_id,\r\n       a.owner_con_id,\r\n       a.bill_accnt_id\r\nFROM stg_assets a\r\n  INNER JOIN stg_accounts acc ON acc.account_id = a.bill_accnt_id\r\n  INNER JOIN stg_accounts_x ax ON acc.row_id = ax.par_row_id\r\n  INNER JOIN stg_assets a2 ON a2.par_asset_id = a.root_asset_id\r\n  INNER JOIN stg_product p ON p.row_id = a.prod_id\r\n  INNER JOIN stg_product p2 ON p2.row_id = a2.prod_id\r\nWHERE acc.accnt_type_cd = 'Billing'\r\n  AND p.type = 'Fiber Internet'\r\n  AND p2.type = 'Price Plan'\r\n  AND ax.attrib_35 NOT IN ('T2 Employee',\r\n                             'Intercompany',\r\n                             'Roaming Test',\r\n                             'T2 Internal',\r\n                             'MVNO'\r\n                            )\r\n  AND a2.status_cd in ('Active','Suspended')", "language": "sql", "refs": [{"name": "stg_ee_assets", "package": null, "version": null}, {"name": "stg_ee_accounts", "package": null, "version": null}, {"name": "stg_ee_accounts_x", "package": null, "version": null}, {"name": "stg_ee_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x", "model.bdh_dbt_models.stg_ee_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_assets_today": {"database": "bdh_ee", "schema": "test", "name": "int_ee_assets_today", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_assets_today.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_assets_today.sql", "unique_id": "model.bdh_dbt_models.int_ee_assets_today", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_assets_today"], "alias": "int_ee_assets_today", "checksum": {"name": "sha256", "checksum": "9a8e10de89c3d276a0ad35b608543d13ec428eed44b35864c4bfda15b2b05ef3"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7656953, "relation_name": null, "raw_code": "WITH int_assets AS (SELECT * FROM {{ ref(\"int_ee_assets\") }}),\r\n\r\n     int_assets_fiber AS (SELECT * FROM {{ ref(\"int_ee_assets_fiber\") }})\r\n\r\nSELECT sub_billing_id,\r\n       sub_acquisition_date,\r\n       integration_id,\r\n       sub_status_original,\r\n       x_price_plan_code,\r\n       sub_msisdn_now,\r\n       prod_id,\r\n       owner_con_id,\r\n       bill_accnt_id,\r\n       sub_deactivation_date\r\nFROM int_assets\r\nUNION ALL\r\nSELECT sub_billing_id,\r\n       sub_acquisition_date,\r\n       integration_id,\r\n       sub_status_original,\r\n       x_price_plan_code,\r\n       sub_msisdn_now,\r\n       prod_id,\r\n       owner_con_id,\r\n       bill_accnt_id,\r\n       sub_deactivation_date\r\nFROM int_assets_fiber", "language": "sql", "refs": [{"name": "int_ee_assets", "package": null, "version": null}, {"name": "int_ee_assets_fiber", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.int_ee_assets", "model.bdh_dbt_models.int_ee_assets_fiber"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_churn_snapshot_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_churn_snapshot_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_churn_snapshot_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_churn_snapshot_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_churn_snapshot_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_churn_snapshot_base"], "alias": "int_ee_churn_snapshot_base", "checksum": {"name": "sha256", "checksum": "6f3eccbbe6bdab90977b72fa04267746508adec8db8625c7efbda361e1133c4e"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7666988, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n\r\nWITH subscriber_snapshot AS (\r\n        SELECT sub_billing_id,\r\n            cust_id,\r\n            sub_msisdn,\r\n            sub_deactivation_reason,\r\n            sub_deactivation_date,\r\n            sub_status,\r\n            sub_port_out_carrier\r\n        FROM {{ ref(\"ee_subscriber_snapshot\") }}\r\n        WHERE dt = '{{ dt }}'\r\n    ),\r\n\r\n    stg_assets_x AS (SELECT * FROM {{ ref(\"stg_ee_assets_x\") }}),\r\n\r\n    stg_s12_priedai AS (SELECT * FROM {{ ref(\"stg_ee_s12_priedai\") }}),\r\n\r\n    stg_s12_msisdn AS (SELECT * FROM {{ ref(\"stg_ee_s12_msisdn\") }}),\r\n\r\n    stg_doc_status_description AS (SELECT * FROM {{ ref(\"stg_ee_doc_status_description\") }}),\r\n\r\n    churn_reasons_siebel AS (\r\n                SELECT\r\n                    row_id,\r\n                    CASE\r\n                        WHEN t1.attrib_03 = 'Owner deceased'\r\n                        THEN 'Omanik surnud'\r\n                        WHEN t1.attrib_03 = 'Restructuration of the company'\r\n                        THEN 'Firma \u00fcmberkorraldused'\r\n                        WHEN t1.attrib_03 = 'Conversion to prepaid'\r\n                        THEN 'Lepinguliselt k\u00f5nekaardile'\r\n                        WHEN t1.attrib_03 = 'Temporary usage'\r\n                        THEN 'Vajas ajutiselt'\r\n                        WHEN t1.attrib_03 = 'Data coverage is unsatisfying'\r\n                        THEN 'Internetilevi kvaliteet ei rahulda'\r\n                        WHEN t1.attrib_03 = 'Tele2 changed conditions'\r\n                        THEN 'Tele2 tingimuste muutmine'\r\n                        WHEN t1.attrib_03 = 'Competitor offer'\r\n                        THEN 'Konkurendi pakkumine'\r\n                        WHEN t1.attrib_03 = 'Coverage'\r\n                        THEN 'Levi'\r\n                        WHEN t1.attrib_03 = 'other'\r\n                        THEN 'muu p\u00f5hjus'\r\n                        WHEN t1.attrib_03 = 'User does not use the number'\r\n                        THEN 'Klient ei kasuta numbrit'\r\n                        WHEN t1.attrib_03 = 'Using internet on mob. device'\r\n                        THEN 'Kasutab internetti telefonis'\r\n                        WHEN t1.attrib_03 = 'Financial difficulties'\r\n                        THEN 'Materiaalsed raskused'\r\n                        WHEN t1.attrib_03 = 'Test (7 days return)'\r\n                        THEN 'Test (7 p\u00e4eva tagastus)'\r\n                        WHEN t1.attrib_03 = 'Personal reasons'\r\n                        THEN 'Isiklikud p\u00f5hjused'\r\n                        WHEN t1.attrib_03 = 'Voice coverage is unsatisfying'\r\n                        THEN 'K\u00f5nelevi kvaliteet ei rahulda'\r\n                        WHEN t1.attrib_03 = 'Treatment'\r\n                        THEN 'L\u00f5petamine v\u00f5lgnevuse t\u00f5ttu'\r\n                        WHEN t1.attrib_03 = 'Unsatisfied with the billing'\r\n                        THEN 'Arveldusega rahulolematu'\r\n                        WHEN t1.attrib_03 = 'Can\\'t get device to work' /* ' */\r\n                        THEN 'Ei saa seadet t\u00f6\u00f6le'\r\n                        WHEN t1.attrib_03 = 'Moving abroad'\r\n                        THEN 'Lahkub v\u00e4lisriiki'\r\n                        WHEN t1.attrib_03 = 'Port out'\r\n                        THEN 'P\u00f5hjus puudub'\r\n                        WHEN t1.attrib_03 = 'Subscribed for promotion'\r\n                        THEN 'Liitus sooduskampaania p\u00e4rast'\r\n                        WHEN t1.attrib_03 = 'Unsatisfied with the product'\r\n                        THEN 'Teenustega rahulolematu'\r\n                        WHEN t1.attrib_03 = 'Poor customer service'\r\n                        THEN 'Klienditeenindusega rahulolematu'\r\n                        ELSE NULL\r\n                END AS termination_reason_siebel,\r\n                t1.attrib_03 AS termination_reason_siebel_original\r\n                FROM stg_assets_x AS t1\r\n                WHERE t1.attrib_03 NOT IN ('Transfer of MSISDN') AND t1.attrib_03 IS NOT NULL\r\n    ),\r\n\r\n\r\n    reasons as (\r\n        SELECT\r\n            snap.sub_billing_id,\r\n            snap.cust_id,\r\n            snap.sub_msisdn,\r\n            snap.sub_deactivation_reason,\r\n            snap.sub_deactivation_date,\r\n            snap.sub_status,\r\n            snap.sub_port_out_carrier,\r\n            CASE\r\n                WHEN snap.sub_status = 'ACTIVE' THEN 'NOT APPLICABLE'\r\n                ELSE churn.termination_reason_siebel\r\n            END AS termination_reason_siebel,\r\n            CASE\r\n                WHEN snap.sub_status = 'ACTIVE' THEN 'NOT APPLICABLE'\r\n                ELSE churn.termination_reason_siebel_original\r\n            END AS termination_reason_siebel_original\r\n        FROM subscriber_snapshot snap\r\n        LEFT JOIN churn_reasons_siebel churn\r\n            ON snap.sub_billing_id = churn.row_id\r\n            AND churn.termination_reason_siebel IS NOT NULL\r\n    ),\r\n\r\n    churn_reason_4sale AS (\r\n        SELECT\r\n            priedai.account_no,\r\n            msisdn.msisdn AS msisdn,\r\n            msisdn.netesybu_priezastis AS termination_reason_4sale,\r\n            SUBSTRING(CAST(priedai.keitimo_data AS TEXT), 1, 10) AS keitimo_data\r\n        FROM stg_s12_priedai AS priedai\r\n        LEFT JOIN stg_s12_msisdn AS msisdn ON priedai.id = msisdn.priedo_id\r\n        LEFT JOIN stg_doc_status_description AS doc ON doc.doc_type = 4 \r\n          AND doc.status = priedai.dokumento_bukle\r\n        WHERE priedai.dokumento_bukle != 99 AND msisdn.netesybu_priezastis != ''\r\n    ),\r\n\r\n    reasons_with_4sale AS (\r\n        SELECT\r\n            r.sub_billing_id,\r\n            r.cust_id,\r\n            r.sub_msisdn,\r\n            r.sub_deactivation_date,\r\n            r.sub_status,\r\n            r.termination_reason_siebel,\r\n            r.termination_reason_siebel_original,\r\n            c.termination_reason_4sale,\r\n            CASE\r\n                WHEN c.termination_reason_4sale IS NOT NULL THEN c.termination_reason_4sale\r\n                WHEN r.termination_reason_siebel IS NOT NULL THEN r.termination_reason_siebel\r\n                WHEN r.sub_deactivation_reason = 'PORT OUT' THEN 'Port-Out'\r\n                WHEN r.sub_status = 'DEACTIVATED' THEN 'Suspended'\r\n                WHEN r.sub_deactivation_date <= '{{ dt }}' THEN 'Disconnect'\r\n                ELSE 'NOT APPLICABLE'\r\n            END AS churn_reason,\r\n            CASE\r\n                WHEN r.sub_deactivation_reason != 'PORT OUT' THEN 'DEACTIVATION'\r\n                ELSE 'PORT OUT'\r\n            END AS sub_deactivation_reason,\r\n            'MISSING' AS port_out_reason,\r\n            r.sub_port_out_carrier,\r\n            '{{ dt }}' AS dt\r\n        FROM reasons r\r\n        LEFT JOIN churn_reason_4sale c\r\n            ON CAST(c.account_no AS TEXT) = r.cust_id\r\n            AND c.msisdn = r.sub_msisdn\r\n            AND c.keitimo_data = CAST(r.sub_deactivation_date AS TEXT)\r\n    ),\r\n\r\n    churn_snapshot AS (\r\n        SELECT\r\n            sub_billing_id,\r\n            cust_id,\r\n            sub_msisdn,\r\n            sub_deactivation_date,\r\n            IFNULL(termination_reason_4sale, 'MISSING') AS termination_reason_4sale,\r\n            IFNULL(termination_reason_siebel, 'MISSING') AS termination_reason_siebel,\r\n            IFNULL(termination_reason_siebel_original, 'MISSING') AS termination_reason_siebel_original,\r\n            churn_reason,\r\n            sub_deactivation_reason,\r\n            port_out_reason,\r\n            sub_status,\r\n            dt\r\n        FROM reasons_with_4sale\r\n    )\r\n\r\n\r\nSELECT sub_billing_id,\r\n       cust_id AS customer_id,\r\n       sub_msisdn AS msisdn,\r\n       sub_deactivation_date,\r\n       termination_reason_4sale,\r\n       termination_reason_siebel,\r\n       termination_reason_siebel_original,\r\n       churn_reason,\r\n       sub_deactivation_reason AS deactivation_type,\r\n       port_out_reason,\r\n       sub_status,\r\n       dt\r\nFROM churn_snapshot", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}, {"name": "stg_ee_assets_x", "package": null, "version": null}, {"name": "stg_ee_s12_priedai", "package": null, "version": null}, {"name": "stg_ee_s12_msisdn", "package": null, "version": null}, {"name": "stg_ee_doc_status_description", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_s12_priedai", "model.bdh_dbt_models.stg_ee_s12_msisdn", "model.bdh_dbt_models.stg_ee_doc_status_description"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_custom_metrics_current_offers_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_custom_metrics_current_offers_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_custom_metrics_current_offers_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_custom_metrics_current_offers_base"], "alias": "int_ee_custom_metrics_current_offers_base", "checksum": {"name": "sha256", "checksum": "67ef7d2f1d95b9f12c34b2ead02dbda30f7f995470adda2649c346559ecb2f3f"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7742846, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n\r\n{% set vat_coeff = ee_get_vat_coeff(dt) %}\r\n\r\n\r\nWITH stg_assets AS (SELECT * FROM {{ ref(\"stg_ee_assets\") }}),\r\n\r\n     stg_assets_xa  AS (SELECT * FROM {{ ref(\"stg_ee_assets_xa\") }}),\r\n     \r\n     stg_assets_x AS (SELECT * FROM {{ ref(\"stg_ee_assets_x\") }}),\r\n\r\n     stg_accounts AS (SELECT * FROM {{ ref(\"stg_ee_accounts\") }}),\r\n\r\n     stg_accounts_x AS (SELECT * FROM {{ ref(\"stg_ee_accounts_x\") }}),\r\n    \r\n     stg_product AS (SELECT * FROM {{ ref(\"stg_ee_product\") }}),\r\n\r\n     stg_mokejimo_planai AS (SELECT * FROM {{ ref(\"stg_ee_mokejimo_planai\") }}),\r\n\r\n     stg_mokejimo_planai_tariff_all AS (SELECT * FROM {{ ref(\"stg_ee_mokejimo_planai_tariff_all\") }}),\r\n\r\n     stg_pp_prices AS (SELECT * FROM {{ ref(\"stg_ee_pp_prices\") }}),\r\n     \r\n     current_offers_base AS (\r\n        SELECT DISTINCT\r\n          an.bill_acc AS billing_account,\r\n          an.cust_acc AS customer_account,\r\n          an.x_primary_attr_value AS sub_msisdn,\r\n          A.root_asset_id AS user_id,\r\n          AP.name AS plan_name,\r\n          CASE\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            AND SAC.disc IS NULL\r\n            THEN ''\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            THEN SAC.disc\r\n            WHEN AP.disc = 'Variable Promotion' AND XA1.char_val = 'Percentage'\r\n            THEN CONCAT(AP.disc, ' ', XA1.char_val, ' ', xa2.char_val)\r\n            WHEN AP.disc = 'Variable Promotion' AND XA1.char_val = 'Amount'\r\n            THEN CONCAT(AP.disc, ' ', XA1.char_val, ' ', xa3.char_val)\r\n            ELSE AP.disc\r\n          END AS plan_discount_name,\r\n          SUBSTR(CAST(AP.pp_start AS TEXT), 1, 10) AS plan_start_date,\r\n          ROUND(\r\n            CASE\r\n              WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n              AND (\r\n                SAC.disc IS NULL OR SAC.disc = ''\r\n              )\r\n              THEN (\r\n                PP.pp_price_vat / NULLIF(SH.msisdns, 0)\r\n              )\r\n              WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n              AND SAC.disc LIKE 'Variable Promotion%'\r\n              THEN (\r\n                (\r\n                  PP.pp_price_vat - (\r\n                    CAST(REPLACE(NULLIF(SAC.disc_amount_vat, ''), ',', '.') AS DECIMAL(10, 2))\r\n                  )\r\n                ) / NULLIF(SH.msisdns, 0)\r\n              )\r\n              WHEN AP.disc = 'Variable Promotion' AND XA1.char_val = 'Amount'\r\n              THEN PP.pp_price_vat - (\r\n                CAST(REPLACE(NULLIF(xa3.char_val, ''), ',', '.') AS DECIMAL(10, 2))\r\n              )\r\n              WHEN AP.disc = 'Variable Promotion' AND XA1.char_val = 'Percentage'\r\n              THEN PP.pp_price_vat - (\r\n                PP.pp_price_vat * (\r\n                  CAST(REPLACE(NULLIF(xa2.char_val, ''), ',', '.') AS DECIMAL(10, 2))\r\n                ) / NULLIF(100, 0)\r\n              )\r\n              ELSE PP.total_vat\r\n            END,\r\n            2\r\n          ) AS plan_price,\r\n          CASE\r\n            WHEN AP.disc = ''\r\n            THEN NULL\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            THEN SAC.disc_amount_vat\r\n            WHEN XA1.char_val = 'Percentage'\r\n            THEN CAST((\r\n              PP.pp_price_vat * (\r\n                CAST(REPLACE(NULLIF(xa2.char_val, ''), ',', '.') AS DECIMAL(10, 2))\r\n              ) / NULLIF(100, 0)\r\n            ) AS TEXT)\r\n            WHEN NOT XA1.char_val IS NULL\r\n            THEN XA3.char_val\r\n            ELSE NULL\r\n          END AS plan_discount,\r\n          CASE\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            AND SAC.disc IS NULL\r\n            THEN NULL\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            THEN SAC.disc_end\r\n            ELSE AP.disc_end\r\n          END AS plan_discount_end_date,\r\n          pp.pp_price_vat AS plan_standard_price,\r\n          ROUND(\r\n            CASE\r\n              WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n              AND (\r\n                SAC.disc IS NULL OR SAC.disc = ''\r\n              )\r\n              THEN (\r\n                PP.pp_price_vat / NULLIF(SH.msisdns, 0)\r\n              )\r\n              WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n              AND SAC.disc LIKE 'Variable Promotion%'\r\n              THEN (\r\n                (\r\n                  PP.pp_price_vat - (\r\n                    CAST(REPLACE(NULLIF(SAC.disc_amount_vat, ''), ',', '.') AS DECIMAL(10, 2))\r\n                  )\r\n                ) / NULLIF(SH.msisdns, 0)\r\n              )\r\n              WHEN AP.disc = 'Variable Promotion' AND XA1.char_val = 'Amount'\r\n              THEN PP.pp_price_vat - (\r\n                CAST(REPLACE(NULLIF(xa3.char_val, ''), ',', '.') AS DECIMAL(10, 2))\r\n              )\r\n              WHEN AP.disc = 'Variable Promotion' AND XA1.char_val = 'Percentage'\r\n              THEN PP.pp_price_vat - (\r\n                PP.pp_price_vat * (\r\n                  CAST(REPLACE(NULLIF(xa2.char_val, ''), ',', '.') AS DECIMAL(10, 2))\r\n                ) / NULLIF(100, 0)\r\n              )\r\n              ELSE PP.total_vat\r\n            END,\r\n            2\r\n          ) / '{{ vat_coeff }}' AS plan_price_wo_vat,\r\n          CASE\r\n            WHEN AP.disc = ''\r\n            THEN NULL\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            THEN SAC.disc_amount\r\n            WHEN XA1.char_val = 'Percentage'\r\n            THEN CAST((\r\n              PP.pp_price_vat * (\r\n                CAST(REPLACE(NULLIF(xa2.char_val, ''), ',', '.') AS DECIMAL(10, 2))\r\n              ) / NULLIF(100, 0)\r\n            ) / '{{ vat_coeff }}' AS TEXT)\r\n            WHEN NOT XA1.char_val IS NULL\r\n            THEN XA2.char_val\r\n            ELSE NULL\r\n          END AS plan_discount_wo_vat,\r\n          pp.pp_price AS plan_standard_price_wo_vat,\r\n          xa4.num_val AS plan_data_mb,\r\n          xa5.num_val AS plan_voice_minutes,\r\n          xa6.num_val AS plan_sms,\r\n          AP.pp_code AS plan_siebel_id,\r\n          CASE\r\n            WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n            THEN SAC.disc_code\r\n            ELSE AP.disc_code\r\n          END AS plan_discount_siebel_id,\r\n          st_conversion_table.plan_st_id AS plan_st_id,\r\n          TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD') AS dt,\r\n          TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS') AS occured_at,\r\n        FROM stg_assets AS a\r\n        LEFT OUTER JOIN stg_assets_xa AS xa4\r\n          ON A.row_id = XA4.asset_id AND xa4.attr_name = 'Data Bucket'\r\n        LEFT OUTER JOIN stg_assets_xa AS xa5\r\n          ON A.row_id = XA5.asset_id AND xa5.attr_name = 'Minute Bucket'\r\n        LEFT OUTER JOIN stg_assets_xa AS xa6\r\n          ON A.row_id = XA6.asset_id AND xa6.attr_name = 'SMS Bucket'\r\n        LEFT OUTER JOIN stg_assets_x AS ax\r\n          ON AX.row_id = A.root_asset_id\r\n          AND NOT AX.attrib_26 IS NULL\r\n          AND AX.attrib_27 IS NULL\r\n          AND AX.attrib_03 = 'voluntary suspension'\r\n        LEFT OUTER JOIN stg_assets_xa AS xa1\r\n          ON A.row_id = XA1.asset_id\r\n          AND XA1.attr_name = 'Promotion Type'\r\n          AND XA1.char_val IN ('Amount', 'Percentage')\r\n        LEFT OUTER JOIN stg_assets_xa AS xa2\r\n          ON XA1.asset_id = XA2.asset_id AND XA2.attr_name = 'Promotion Value'\r\n        LEFT OUTER JOIN stg_assets_xa AS xa3\r\n          ON XA1.asset_id = XA3.asset_id AND XA3.attr_name = 'Promotion Value incl. VAT'\r\n        INNER JOIN (\r\n          SELECT\r\n            a1.row_id,\r\n            a1.x_primary_attr_value,\r\n            a1.x_activation_dt,\r\n            a1.end_dt,\r\n            a1.x_wsc_admin_flg,\r\n            p.name AS service_type,\r\n            b.cust_id AS bill_acc,\r\n            c.cust_id AS cust_acc,\r\n            b.x_soc_sec_num AS ssn,\r\n            b.name,\r\n            c.ou_type_cd AS customer_type,\r\n            c.cust_since_dt,\r\n            c.cust_stat_cd\r\n          FROM stg_assets AS a1\r\n          INNER JOIN stg_accounts AS c\r\n            ON c.row_id = a1.owner_accnt_id\r\n          INNER JOIN stg_accounts AS b\r\n            ON b.row_id = a1.bill_accnt_id\r\n          INNER JOIN stg_product AS p\r\n            ON p.row_id = a1.prod_id\r\n          WHERE\r\n            (\r\n              a1.x_primary_attr_name <> 'Prepaid TN' AND a1.x_primary_attr_name <> ''\r\n            )\r\n            AND a1.row_id = a1.root_asset_id\r\n          GROUP BY\r\n            a1.row_id,\r\n            x_primary_attr_value,\r\n            a1.x_activation_dt,\r\n            a1.end_dt,\r\n            a1.x_wsc_admin_flg,\r\n            p.name,\r\n            b.cust_id,\r\n            c.cust_id,\r\n            b.x_soc_sec_num,\r\n            b.name,\r\n            c.ou_type_cd,\r\n            c.cust_since_dt,\r\n            c.cust_stat_cd\r\n        ) AS an\r\n          ON AN.row_id = A.root_asset_id\r\n        INNER JOIN (\r\n          SELECT\r\n            f.row_id,\r\n            ax.attrib_35 AS customer_subtype\r\n          FROM stg_accounts_x AS ax\r\n          INNER JOIN stg_accounts AS f\r\n            ON f.row_id = ax.par_row_id\r\n          WHERE\r\n            f.accnt_type_cd = 'Customer'\r\n        ) AS ac\r\n          ON AC.row_id = A.owner_accnt_id\r\n        LEFT OUTER JOIN (\r\n          SELECT DISTINCT\r\n            aa.row_id,\r\n            aa.asset_num,\r\n            CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.x_activation_dt AS TIMESTAMP)) AS pp_start,\r\n            CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.end_dt AS TIMESTAMP)) AS end_dt,\r\n            p.row_id AS pp_code,\r\n            p.name,\r\n            CASE WHEN SPR3.row_id IS NULL THEN NULL ELSE SPR3.row_id END AS disc_code,\r\n            CASE WHEN spr3.name IS NULL THEN NULL ELSE spr3.name END AS disc,\r\n            CASE\r\n              WHEN spr3.name IS NULL\r\n              THEN NULL\r\n              ELSE CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.x_t2_product_end_date AS TIMESTAMP))\r\n            END AS disc_end,\r\n            aa.status_cd,\r\n            ROW_NUMBER() OVER (PARTITION BY aa.root_asset_id ORDER BY aa.last_upd DESC NULLS LAST) AS rn\r\n          FROM stg_assets AS aa\r\n          INNER JOIN stg_product AS p\r\n            ON p.row_id = aa.prod_id\r\n          LEFT OUTER JOIN stg_product AS spr3\r\n            ON aa.promotion_id = SPR3.row_id\r\n            AND (\r\n              (\r\n                CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.x_t2_product_end_date AS TIMESTAMP)) > TO_DATE(CURRENT_TIMESTAMP)\r\n              )\r\n              OR (\r\n                aa.x_t2_product_end_date IS NULL\r\n              )\r\n            )\r\n          WHERE\r\n            (aa.x_primary_attr_name = '' OR aa.x_primary_attr_name IS NULL)\r\n            AND p.type = 'Price Plan'\r\n            AND aa.status_cd IN ('Active', 'Suspended')\r\n        ) AS ap\r\n          ON AP.asset_num = A.asset_num AND ap.rn = 1\r\n        LEFT OUTER JOIN (\r\n          SELECT\r\n            MAX(planai.id) AS plan_st_id,\r\n            planai_all.macpoc_code AS siebel_code\r\n          FROM stg_mokejimo_planai AS planai\r\n          INNER JOIN stg_mokejimo_planai_tariff_all AS planai_all\r\n            ON planai_all.id = planai.tariff_id\r\n          GROUP BY\r\n            planai_all.macpoc_code\r\n        ) AS st_conversion_table\r\n          ON AP.pp_code = st_conversion_table.siebel_code\r\n        LEFT OUTER JOIN (\r\n          SELECT\r\n            BA.cust_id AS bill_acc,\r\n            CASE\r\n              WHEN PR.name = 'Ettev\u00f5tja Eri 5.0 kuutasu'\r\n              THEN 'Ettev\u00f5tja Eri 5.0'\r\n              WHEN PR.name = 'Ettev\u00f5tjapakett 4.0 kuutasu'\r\n              THEN 'Ettev\u00f5tjapakett 4.0'\r\n              WHEN PR.name = 'Meie Pere kuutasu'\r\n              THEN 'Meie Pere'\r\n            END AS acc_pp_name,\r\n            CASE WHEN PRS.name = 'Variable Promotion' THEN XA1.char_val ELSE '' END AS disc_type,\r\n            CASE\r\n              WHEN PRS.name = 'Variable Promotion' AND XA1.char_val = 'Percentage'\r\n              THEN CONCAT(PRS.name, ' ', XA1.char_val, ' ', xa2.char_val)\r\n              WHEN PRS.name = 'Variable Promotion' AND XA1.char_val = 'Amount'\r\n              THEN CONCAT(PRS.name, ' ', XA1.char_val, ' ', xa3.char_val)\r\n              ELSE PRS.name\r\n            END AS disc,\r\n            CASE\r\n              WHEN PRS.name = 'Variable Promotion' AND XA1.char_val = 'Amount'\r\n              THEN xa2.char_val\r\n              ELSE NULL\r\n            END AS disc_amount,\r\n            CASE\r\n              WHEN PRS.name = 'Variable Promotion' AND XA1.char_val = 'Amount'\r\n              THEN xa3.char_val\r\n              ELSE NULL\r\n            END AS disc_amount_vat,\r\n            CASE WHEN PRS.name = 'Variable Promotion' THEN xa2.row_id ELSE '' END AS disc_id,\r\n            CASE WHEN PRS.name = 'Variable Promotion' THEN xa3.row_id ELSE '' END AS disc_id_vat,\r\n            SA.row_id,\r\n            CASE WHEN PRS.row_id IS NULL THEN '' ELSE PRS.row_id END AS disc_code,\r\n            CASE\r\n              WHEN PRS.name IS NULL\r\n              THEN NULL\r\n              ELSE CONVERT_TIMEZONE('Europe/Tallinn', CAST(SA.x_t2_product_end_date AS TIMESTAMP))\r\n            END AS disc_end\r\n          FROM stg_assets AS sa\r\n          LEFT OUTER JOIN stg_assets_xa AS xa1\r\n            ON SA.row_id = XA1.asset_id\r\n            AND XA1.attr_name = 'Promotion Type'\r\n            AND XA1.char_val IN ('Amount', 'Percentage')\r\n          LEFT OUTER JOIN stg_assets_xa AS xa2\r\n            ON XA1.asset_id = XA2.asset_id AND XA2.attr_name = 'Promotion Value'\r\n          LEFT OUTER JOIN stg_assets_xa AS xa3\r\n            ON XA1.asset_id = XA3.asset_id AND XA3.attr_name = 'Promotion Value incl. VAT'\r\n          LEFT OUTER JOIN stg_product AS pr\r\n            ON PR.row_id = SA.prod_id\r\n          LEFT OUTER JOIN stg_product AS prs\r\n            ON SA.promotion_id = PRS.row_id\r\n            AND (\r\n              (\r\n                CONVERT_TIMEZONE('Europe/Tallinn', CAST(SA.x_t2_product_end_date AS TIMESTAMP)) > TO_DATE(CURRENT_TIMESTAMP)\r\n              )\r\n              OR (\r\n                SA.x_t2_product_end_date IS NULL\r\n              )\r\n            )\r\n          INNER JOIN stg_accounts AS ba\r\n            ON SA.BILL_ACCNT_ID = BA.ROW_ID\r\n          WHERE\r\n            PR.name IN ('Ettev\u00f5tja Eri 5.0 kuutasu', 'Ettev\u00f5tjapakett 4.0 kuutasu', 'Meie Pere kuutasu')\r\n            AND SA.status_cd = 'Active'\r\n        ) AS sac\r\n          ON AN.bill_acc = SAC.bill_acc AND SAC.acc_pp_name = AP.name\r\n        LEFT OUTER JOIN (\r\n          SELECT\r\n            BA.cust_id AS bill_acc,\r\n            SAS2.prod_id AS prod_id,\r\n            PROD.name,\r\n            COUNT(SAS.x_primary_attr_value) AS msisdns\r\n          FROM stg_assets AS sas2\r\n          INNER JOIN stg_assets AS sas\r\n            ON SAS2.par_asset_id = SAS.row_id\r\n            AND (\r\n              CONVERT_TIMEZONE('Europe/Tallinn', CAST(sas2.x_activation_dt AS TIMESTAMP)) <= TO_DATE(CURRENT_TIMESTAMP)\r\n            )\r\n            AND (\r\n              CONVERT_TIMEZONE('Europe/Tallinn', CAST(SAS2.end_dt AS TIMESTAMP)) > TO_DATE(CURRENT_TIMESTAMP)\r\n              OR SAS2.end_dt IS NULL\r\n            )\r\n          LEFT OUTER JOIN stg_product AS prod\r\n            ON PROD.row_id = SAS2.prod_id\r\n          LEFT OUTER JOIN stg_product AS prod2\r\n            ON prod2.row_id = SAS2.promotion_id\r\n            AND (\r\n              (\r\n                SAS2.x_t2_product_end_date > TO_DATE(CURRENT_TIMESTAMP)\r\n              )\r\n              OR (\r\n                SAS2.x_t2_product_end_date IS NULL\r\n              )\r\n            )\r\n          INNER JOIN stg_accounts AS ba\r\n            ON SAS.BILL_ACCNT_ID = BA.ROW_ID\r\n          WHERE\r\n            SAS2.prod_id IN ('1-8OS8WY', '1-10L5ZZ', '1-8OS964', '1-ATI4KK')\r\n          GROUP BY\r\n            BA.cust_id,\r\n            SAS2.prod_id,\r\n            PROD.name\r\n        ) AS sh\r\n          ON SH.bill_acc = AN.bill_acc AND SH.name = AP.name\r\n        LEFT OUTER JOIN (\r\n          SELECT\r\n            *\r\n          FROM stg_pp_prices\r\n          WHERE\r\n            nbo_status <> '4'\r\n        ) AS pp\r\n          ON PP.priceplan = AP.name\r\n          AND PP.discount_name = (\r\n            CASE\r\n              WHEN AP.name IN ('Ettev\u00f5tja Eri 5.0', 'Ettev\u00f5tjapakett 4.0', 'Meie Pere')\r\n              THEN '0'\r\n              ELSE (\r\n                CASE WHEN AP.disc = '' THEN '0' WHEN AP.disc IS NULL THEN '0' ELSE AP.disc END\r\n              )\r\n            END\r\n          )\r\n        WHERE\r\n          NOT AN.service_type LIKE '%root%'\r\n          AND NOT AP.name IS NULL\r\n          AND NOT AC.customer_subtype IN ('T2 Employee', 'Intercompany', 'Roaming Test', 'T2 Internal', 'MVNO')\r\n          AND NOT AP.name IN ('FIXPORT', 'SIP Trunk', 'Maxima 1.0')\r\n          AND NOT AP.name LIKE (\r\n            '% l\u00f5petatud'\r\n          )\r\n          AND NOT (\r\n            AP.name LIKE (\r\n              '% 0'\r\n            ) AND pp.pp_price = 0\r\n          ) /* skip only 'Starman 0', 'Partner \u00c4rinett 0' plans */\r\n          AND NOT AP.name LIKE (\r\n            '% Piirang'\r\n          )\r\n          AND NOT AP.name LIKE (\r\n            'Skylive%'\r\n          )\r\n          AND AP.status_cd IN ('Active', 'Suspended')\r\n          AND (\r\n            AX.attrib_03 IS NULL OR AX.attrib_03 = 'voluntary suspension'\r\n          )\r\n     )\r\n\r\nSELECT billing_account,\r\n       customer_account,\r\n       sub_msisdn,\r\n       user_id AS sub_billing_id,\r\n       plan_name,\r\n       plan_discount_name,\r\n       plan_start_date,\r\n       plan_price,\r\n       plan_discount,\r\n       CAST(plan_discount_end_date AS VARCHAR) AS plan_discount_end_date,\r\n       plan_standard_price,\r\n       plan_price_wo_vat,\r\n       plan_discount_wo_vat,\r\n       plan_standard_price_wo_vat,\r\n       CAST(IFNULL(CAST(NULLIF(plan_data_mb, '') AS BIGINT) / 1024, 999999) AS DOUBLE) AS plan_data_gb,\r\n       IFNULL(CAST(NULLIF(plan_data_mb, '') AS BIGINT), 999999) AS plan_data_mb,\r\n       IFNULL(CAST(NULLIF(plan_voice_minutes, '') AS BIGINT), 999999) AS plan_voice_minutes,\r\n       IFNULL(CAST(NULLIF(plan_sms, '') AS BIGINT), 999999) AS plan_sms,\r\n       plan_siebel_id,\r\n       plan_discount_siebel_id,\r\n       CAST(plan_st_id AS VARCHAR) AS plan_st_id,\r\n       dt\r\nFROM current_offers_base", "language": "sql", "refs": [{"name": "stg_ee_assets", "package": null, "version": null}, {"name": "stg_ee_assets_xa", "package": null, "version": null}, {"name": "stg_ee_assets_x", "package": null, "version": null}, {"name": "stg_ee_accounts", "package": null, "version": null}, {"name": "stg_ee_accounts_x", "package": null, "version": null}, {"name": "stg_ee_product", "package": null, "version": null}, {"name": "stg_ee_mokejimo_planai", "package": null, "version": null}, {"name": "stg_ee_mokejimo_planai_tariff_all", "package": null, "version": null}, {"name": "stg_ee_pp_prices", "package": null, "version": null}], "sources": [["bdh_ee_analysts_tables", "vat_rate"]], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.ee_get_vat_coeff"], "nodes": ["source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_assets_xa", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x", "model.bdh_dbt_models.stg_ee_product", "model.bdh_dbt_models.stg_ee_mokejimo_planai", "model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all", "model.bdh_dbt_models.stg_ee_pp_prices"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_payment_fact_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_payment_fact_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_payment_fact_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_payment_fact_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_payment_fact_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_payment_fact_base"], "alias": "int_ee_payment_fact_base", "checksum": {"name": "sha256", "checksum": "846704fa8e6678e09d87039606db8e5f95438f4155779017d61c33f72d324780"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7842865, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n\r\nWITH subscriber_snapshot AS (\r\n        SELECT *\r\n        FROM {{ ref(\"ee_subscriber_snapshot\") }}\r\n        WHERE dt = '{{ dt }}'\r\n        QUALIFY ROW_NUMBER() OVER (PARTITION BY cust_id ORDER BY sub_acquisition_date NULLS FIRST, sub_status NULLS FIRST) = 1\r\n    ),\r\n\r\n      stg_payments_history AS (\r\n        SELECT DISTINCT account_name,\r\n               substr_rc_abbreviation_4_,\r\n               payment_date,\r\n               amount,\r\n               dt\r\n        FROM {{ ref(\"stg_ee_payments_history\") }}\r\n        WHERE dt = '{{ dt }}'\r\n      ),\r\n\r\n      payements_fact AS (\r\n        SELECT DISTINCT\r\n                z.sub_billing_id AS sub_billing_id,\r\n                substr_rc_abbreviation_4_ AS payment_channel,\r\n                TRY_CAST(payment_date AS TEXT) AS payment_timestamp,\r\n                amount AS payment_amt,\r\n                'INVOICE' AS payment_type,\r\n                SUBSTRING(TRY_CAST(payment_date AS TEXT), 1, 10) AS dt,\r\n                0 AS payment_cost_amt\r\n        FROM stg_payments_history AS d\r\n        INNER JOIN subscriber_snapshot AS z ON d.account_name = z.cust_id\r\n        WHERE SUBSTRING(TRY_CAST(payment_date AS TEXT), 1, 10) = '{{ dt }}'\r\n      )\r\n\r\n\r\nSELECT DISTINCT \r\n        sub_billing_id,\r\n        payment_timestamp,\r\n        payment_type,\r\n        payment_channel,\r\n        payment_amt,\r\n        payment_cost_amt,\r\n        dt\r\nFROM payements_fact", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}, {"name": "stg_ee_payments_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_payments_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_price_plans": {"database": "bdh_ee", "schema": "test", "name": "int_ee_price_plans", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_price_plans.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_price_plans.sql", "unique_id": "model.bdh_dbt_models.int_ee_price_plans", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_price_plans"], "alias": "int_ee_price_plans", "checksum": {"name": "sha256", "checksum": "5afefff5d0c9c43224e3904c6ff2fac54bc602ba12de59765a6d70c3288926e0"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.789588, "relation_name": null, "raw_code": "WITH \r\n    stg_assets AS (\r\n        SELECT par_asset_id,\r\n               prod_id,\r\n               x_activation_dt,\r\n               end_dt,\r\n               last_upd\r\n        FROM {{ ref(\"stg_ee_assets\") }}\r\n        WHERE par_asset_id != ''\r\n    ),\r\n\r\n    stg_product AS (\r\n        SELECT DISTINCT row_id,\r\n               name\r\n        FROM {{ ref(\"stg_ee_product\") }}\r\n        WHERE type = 'Price Plan'\r\n    ),\r\n\r\n    stg_pp_prices AS (\r\n        SELECT DISTINCT pp_code,\r\n               pp_price,\r\n               priceplan\r\n        FROM {{ ref(\"stg_ee_pp_prices\") }}\r\n        WHERE nbo_status != '4'\r\n    ),\r\n\r\n    price_plans AS (\r\n        SELECT\r\n            assets.par_asset_id,\r\n            assets.prod_id,\r\n            assets.x_activation_dt,\r\n            assets.end_dt,\r\n            assets.last_upd,\r\n            pr.name,\r\n            COALESCE(assets.end_dt, '9999-01-01') AS end_dt_no_nulls\r\n        FROM stg_assets assets\r\n          INNER JOIN stg_product pr ON assets.prod_id = pr.row_id\r\n    ),\r\n\r\n    price_plans_base AS (\r\n        SELECT\r\n            par_asset_id,\r\n            prod_id,\r\n            x_activation_dt,\r\n            end_dt,\r\n            last_upd,\r\n            name,\r\n            end_dt_no_nulls\r\n        FROM price_plans\r\n        QUALIFY ROW_NUMBER() OVER (\r\n            PARTITION BY par_asset_id\r\n            ORDER BY x_activation_dt DESC, last_upd DESC, end_dt_no_nulls DESC\r\n        ) = 1)\r\n\r\nSELECT  pp.par_asset_id,\r\n        pp.prod_id,\r\n        pp.x_activation_dt,\r\n        pp.end_dt,\r\n        pp.last_upd,\r\n        pp.name,\r\n        pp.end_dt_no_nulls,\r\n        pp_prices.pp_price\r\nFROM price_plans_base pp\r\nLEFT JOIN stg_pp_prices pp_prices ON pp.prod_id = pp_prices.pp_code\r\n    AND pp.name = pp_prices.priceplan", "language": "sql", "refs": [{"name": "stg_ee_assets", "package": null, "version": null}, {"name": "stg_ee_product", "package": null, "version": null}, {"name": "stg_ee_pp_prices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_product", "model.bdh_dbt_models.stg_ee_pp_prices"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_sales_fact_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_sales_fact_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_sales_fact_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_sales_fact_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_sales_fact_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_sales_fact_base"], "alias": "int_ee_sales_fact_base", "checksum": {"name": "sha256", "checksum": "2b204e1cbc6299e3fa1f782974bcf2ff6ed22006a9c9944d21c419da9415a320"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.791936, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n{% set first_day_of_month = dt[:8] ~ '01' %}\r\n{% set last_day_of_month = dt[:8] ~ '31' %}\r\n\r\nWITH subscriber_snapshot AS (\r\n        SELECT sub_billing_id,\r\n               cust_id,\r\n               sub_acquisition_date\r\n        FROM {{ ref(\"ee_subscriber_snapshot\") }}\r\n        WHERE dt = '{{ dt }}'\r\n    ),\r\n\r\n    stg_assets AS (SELECT * FROM {{ ref(\"stg_ee_assets\") }}),\r\n\r\n    stg_accounts AS (SELECT * FROM {{ ref(\"stg_ee_accounts\") }}),\r\n\r\n    stg_contact AS (SELECT * FROM {{ ref(\"stg_ee_contact\") }}),\r\n\r\n    primary_contact AS (\r\n        SELECT\r\n        Assets.x_primary_attr_value,\r\n        Assets.row_id,\r\n        SCO.x_primary_phone_num,\r\n        Accounts.cust_id,\r\n        CASE\r\n            WHEN SCO.x_primary_phone_num = Assets.x_primary_attr_value\r\n            THEN '1'\r\n            ELSE '0'\r\n        END AS primary_contact\r\n        FROM stg_assets AS Assets\r\n        LEFT JOIN stg_accounts AS Accounts\r\n        ON Accounts.row_id = Assets.bill_accnt_id\r\n        LEFT JOIN stg_contact AS SCO\r\n        ON Accounts.pr_con_id = SCO.row_id\r\n    ),\r\n\r\n    sub_snap_primary_contact AS (\r\n        SELECT\r\n            hist.*,\r\n            z.primary_contact,\r\n            '{{ first_day_of_month }}' a,\r\n            '{{ last_day_of_month }}' b\r\n        FROM subscriber_snapshot AS hist\r\n        LEFT JOIN primary_contact AS z\r\n        ON z.row_id = hist.sub_billing_id\r\n        QUALIFY ROW_NUMBER() OVER (PARTITION BY hist.cust_id ORDER BY primary_contact DESC NULLS LAST, sub_acquisition_date NULLS FIRST) = 1\r\n    )\r\n\r\nSELECT *\r\nFROM sub_snap_primary_contact", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}, {"name": "stg_ee_assets", "package": null, "version": null}, {"name": "stg_ee_accounts", "package": null, "version": null}, {"name": "stg_ee_contact", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_sales_point_visits_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_sales_point_visits_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_sales_point_visits_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_sales_point_visits_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_sales_point_visits_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_sales_point_visits_base"], "alias": "int_ee_sales_point_visits_base", "checksum": {"name": "sha256", "checksum": "bda70b8f5fa65c5483664169b2e5b6f3678b777af2a7b795f6176d05e5b10cc7"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.7979357, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n{% set date_to = var('ee_execution_date') %}\r\n{% set dt_date_obj = modules.datetime.datetime.strptime(dt, '%Y-%m-%d') %}\r\n{% set date_from = (dt_date_obj - modules.datetime.timedelta(days=3)).strftime('%Y-%m-%d') %}\r\n\r\nWITH subscriber_snapshot AS (\r\n        SELECT DISTINCT sub_billing_id,\r\n               dt\r\n        FROM {{ ref(\"ee_subscriber_snapshot\") }}\r\n        WHERE dt BETWEEN '{{ date_from }}' AND '{{ date_to }}'\r\n    ),\r\n\r\n     spearsons AS (\r\n        SELECT DISTINCT id\r\n        FROM {{ ref('stg_ee_darbuotojai') }}\r\n        WHERE id IS NOT NULL\r\n     ),\r\n\r\n    subgrupese AS (\r\n        SELECT\r\n            user_id,\r\n            CAST(subgrupe_id AS INT) AS subgrupe_id\r\n        FROM {{ ref('stg_ee_darbuotojai_subgrupese') }}\r\n        WHERE default_ = 1 AND subgrupe_id IS NOT NULL\r\n    ),\r\n\r\n    subgrupes AS (\r\n        SELECT\r\n            id AS shop_id,\r\n            vietos_nr AS shop_code,\r\n            shop,\r\n            dileris AS dealer,\r\n            workplace_code,\r\n            centro_pavadinimas AS shop_name,\r\n            shop_address\r\n        FROM {{ ref('stg_ee_subgrupes') }}\r\n        WHERE id IS NOT NULL \r\n            AND shop IS NOT NULL \r\n            AND vietos_nr != '' \r\n            AND aktyvus = 1 \r\n            AND dileris != 'TRANSCOM'\r\n    ),\r\n\r\n    sales_persons AS (\r\n        SELECT\r\n            subgrupes.shop_id,\r\n            subgrupes.shop_code,\r\n            subgrupes.shop_name,\r\n            subgrupes.shop,\r\n            subgrupes.dealer,\r\n            subgrupes.workplace_code,\r\n            subgrupes.shop_address\r\n        FROM spearsons \r\n        INNER JOIN subgrupese ON spearsons.id = subgrupese.user_id\r\n        INNER JOIN subgrupes ON subgrupes.shop_id = subgrupese.subgrupe_id\r\n        GROUP BY ALL\r\n    ),\r\n\r\n    siebel_logs AS (\r\n        SELECT\r\n            primary_attr_value,\r\n            visit_time,\r\n            visit_date,\r\n            asset_id,\r\n            division\r\n        FROM {{ ref(\"stg_ee_logs\") }}\r\n        WHERE visit_time BETWEEN '{{ date_from }}' AND '{{ date_to }}'\r\n            AND division IS NOT NULL\r\n    ),\r\n\r\n   stg_sp_visits AS (\r\n        SELECT\r\n            T1.asset_id AS sub_billing_id,\r\n            slp.shop_id,\r\n            slp.shop_code,\r\n            slp.shop_name,\r\n            slp.shop,\r\n            slp.dealer,\r\n            slp.workplace_code,\r\n            T1.visit_time,\r\n            slp.shop_address,\r\n            visit_date AS dt\r\n        FROM siebel_logs T1\r\n        INNER JOIN sales_persons slp ON slp.workplace_code = T1.division\r\n    ),\r\n\r\n    sp_visits AS (\r\n        SELECT\r\n            sp.sub_billing_id,\r\n            sp.shop_id,\r\n            sp.shop_code,\r\n            sp.shop_name,\r\n            sp.shop,\r\n            sp.dealer,\r\n            sp.workplace_code,\r\n            sp.visit_time,\r\n            sp.shop_address,\r\n            sp.dt\r\n        FROM stg_sp_visits sp\r\n        INNER JOIN subscriber_snapshot ss ON ss.sub_billing_id = sp.sub_billing_id AND ss.dt = sp.dt\r\n        QUALIFY ROW_NUMBER() OVER (PARTITION BY sp.dt, sp.sub_billing_id ORDER BY sp.visit_time DESC NULLS LAST) = 1\r\n    ),\r\n\r\n    sp_visits_final AS (\r\n        SELECT\r\n            sub_billing_id,\r\n            shop_id,\r\n            shop_code,\r\n            shop_name,\r\n            shop,\r\n            dealer,\r\n            workplace_code,\r\n            shop_address,\r\n            SPLIT_PART(shop_address, ',', ARRAY_SIZE(SPLIT(shop_address, ','))-2) AS sales_point_region,\r\n            visit_time,\r\n            dt\r\n        FROM sp_visits\r\n    )\r\n\r\nSELECT sub_billing_id,\r\n       shop_id,\r\n       shop_code,\r\n       shop_name,\r\n       shop,\r\n       dealer,\r\n       workplace_code,\r\n       shop_address,\r\n       sales_point_region,\r\n       visit_time,\r\n       dt\r\nFROM sp_visits_final", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}, {"name": "stg_ee_darbuotojai", "package": null, "version": null}, {"name": "stg_ee_darbuotojai_subgrupese", "package": null, "version": null}, {"name": "stg_ee_subgrupes", "package": null, "version": null}, {"name": "stg_ee_logs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_darbuotojai", "model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese", "model.bdh_dbt_models.stg_ee_subgrupes", "model.bdh_dbt_models.stg_ee_logs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_subscriber_snapshot_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_subscriber_snapshot_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_subscriber_snapshot_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_subscriber_snapshot_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_subscriber_snapshot_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_subscriber_snapshot_base"], "alias": "int_ee_subscriber_snapshot_base", "checksum": {"name": "sha256", "checksum": "582b49003c7fc65a6bba9eda6743192e041235a4f71640e7c6accf6c08d06b05"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.805947, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n{% set dt_date_obj = modules.datetime.datetime.strptime(dt, '%Y-%m-%d') %}\r\n{% set deactivation_date_90d = (dt_date_obj - modules.datetime.timedelta(days=90)).strftime('%Y-%m-%d') %}\r\n\r\nWITH stg_assets AS (SELECT * FROM {{ ref(\"stg_ee_assets\") }}),\r\n\r\n     stg_assets_x AS (SELECT * FROM {{ ref(\"stg_ee_assets_x\") }}),\r\n\r\n     stg_accounts AS (SELECT * FROM {{ ref(\"stg_ee_accounts\") }}),\r\n\r\n     stg_product AS (SELECT * FROM {{ ref(\"stg_ee_product\") }}),\r\n\r\n     stg_contact AS (SELECT * FROM {{ ref(\"stg_ee_contact\") }}),\r\n\r\n     stg_port_ins AS (\r\n        SELECT DISTINCT asset_integ_id,\r\n                        x_action_type\r\n        FROM {{ ref(\"stg_ee_port_in_out\") }}\r\n          WHERE x_action_type IN ('Port-In', 'Convert')),\r\n\r\n     stg_port_outs AS (\r\n        SELECT DISTINCT asset_integ_id,\r\n                        x_action_type\r\n        FROM {{ ref(\"stg_ee_port_in_out\") }}\r\n          WHERE x_action_type IN ('Port-Out', 'Disconnect')),\r\n\r\n     stg_blacklist_assets AS (\r\n        SELECT *\r\n        FROM {{ ref(\"stg_ee_blacklist\") }}\r\n        WHERE asset_id IS NOT NULL AND asset_id != ''),\r\n\r\n     stg_blacklist_accounts AS (\r\n        SELECT *\r\n        FROM {{ ref(\"stg_ee_blacklist\") }}\r\n        WHERE asset_id IS NULL OR asset_id = ''),\r\n\r\n     int_accounts AS (SELECT * FROM {{ ref(\"int_ee_accounts\") }}),\r\n\r\n     int_assets_today AS (SELECT * FROM {{ ref(\"int_ee_assets_today\") }}),\r\n\r\n     int_price_plans AS (SELECT * FROM {{ ref(\"int_ee_price_plans\") }}),\r\n\r\n     int_assets_x AS (\r\n        SELECT row_id AS sub_billing_id,\r\n               SUBSTRING(attrib_31, 1, 10) AS sub_contract_start_date,\r\n               SUBSTRING(attrib_32, 1, 10) AS sub_contract_end_date,\r\n               attrib_03 AS deactivation_reason_siebel,\r\n               SUBSTRING(attrib_26, 1, 10) AS suspended_start,\r\n               SUBSTRING(attrib_27, 1, 10) AS suspended_end\r\n        FROM stg_assets_x),\r\n\r\n     subscribers_snapshot_base AS (\r\n     SELECT assets.sub_billing_id,\r\n            assets.sub_acquisition_date,\r\n            assets.bill_accnt_id,\r\n            assets.sub_deactivation_date,\r\n            assets.integration_id,\r\n            assets.sub_status_original,\r\n            assets.x_price_plan_code,\r\n            assets.sub_msisdn_now,\r\n            assets.prod_id,\r\n            assets.owner_con_id,\r\n            acc.cust_id,\r\n            acc.sub_bad_debt,\r\n            acc.sub_type\r\n     FROM int_accounts acc\r\n     INNER JOIN int_assets_today assets ON assets.bill_accnt_id = acc.row_id),\r\n\r\n     active_and_suspended_users AS (\r\n     SELECT DISTINCT\r\n            AN.row_id,\r\n            CASE\r\n                WHEN AX.attrib_03 = 'voluntary suspension'\r\n                THEN 'Voluntary Suspension'\r\n                WHEN AP.status_cd = 'Suspended'\r\n                THEN 'Non-voluntary Suspension'\r\n                ELSE AP.status_cd\r\n            END AS msisdn_status\r\n        FROM stg_assets AS a /* beginning of voluntary suspension mapping */\r\n        LEFT OUTER JOIN stg_assets_x AS ax\r\n            ON AX.row_id = A.root_asset_id\r\n            AND NOT AX.attrib_26 IS NULL\r\n            AND AX.attrib_27 IS NULL\r\n            AND AX.attrib_03 = 'voluntary suspension' /* end of voluntary suspension mapping */\r\n        INNER JOIN (\r\n            SELECT\r\n                a1.row_id,\r\n                a1.x_primary_attr_value AS x_primary_attr_value_msisdn,\r\n                a1.x_activation_dt,\r\n                a1.end_dt,\r\n                a1.x_wsc_admin_flg,\r\n                p.name AS service_type,\r\n                b.cust_id AS bill_acc,\r\n                c.cust_id AS cust_acc,\r\n                b.x_soc_sec_num AS ssn,\r\n                b.name,\r\n                c.ou_type_cd AS customer_type\r\n            FROM stg_assets AS a1\r\n            INNER JOIN stg_accounts AS c\r\n                ON c.row_id = a1.owner_accnt_id\r\n            INNER JOIN stg_accounts AS b\r\n                ON b.row_id = a1.bill_accnt_id\r\n            INNER JOIN stg_product AS p\r\n                ON p.row_id = a1.prod_id\r\n            WHERE\r\n                (\r\n                a1.x_primary_attr_name <> 'Prepaid TN' AND NOT a1.x_primary_attr_name IS NULL\r\n                )\r\n                AND a1.row_id = a1.root_asset_id\r\n            ) AS an\r\n            ON AN.row_id = A.root_asset_id\r\n            LEFT OUTER JOIN (\r\n            SELECT DISTINCT\r\n                aa.row_id,\r\n                aa.asset_num,\r\n                CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.x_activation_dt AS TIMESTAMP)) AS pp_start,\r\n                CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.end_dt AS TIMESTAMP)) AS end_dt,\r\n                p.row_id AS pp_code,\r\n                p.name,\r\n                CASE WHEN SPR3.row_id IS NULL THEN '' ELSE SPR3.row_id END AS disc_code,\r\n                CASE WHEN spr3.name IS NULL THEN '' ELSE spr3.name END AS disc,\r\n                CASE\r\n                WHEN spr3.name IS NULL\r\n                THEN NULL\r\n                ELSE CONVERT_TIMEZONE('Europe/Tallinn', AA.x_t2_product_end_date)\r\n                END AS disc_end,\r\n                aa.status_cd,\r\n                ROW_NUMBER() OVER (PARTITION BY aa.root_asset_id ORDER BY aa.last_upd DESC NULLS LAST) AS rn\r\n            FROM stg_assets AS aa\r\n            INNER JOIN stg_product AS p\r\n                ON p.row_id = aa.prod_id\r\n            LEFT OUTER JOIN stg_product AS spr3\r\n                ON aa.promotion_id = SPR3.row_id\r\n                AND (\r\n                (\r\n                    CONVERT_TIMEZONE('Europe/Tallinn', CAST(aa.x_t2_product_end_date AS TIMESTAMP)) > '{{ dt }}'\r\n                )\r\n                OR (\r\n                    aa.x_t2_product_end_date IS NULL\r\n                )\r\n                )\r\n            WHERE\r\n                (aa.x_primary_attr_name = '' OR aa.x_primary_attr_name IS NULL)\r\n                AND p.type = 'Price Plan'\r\n                AND aa.status_cd IN ('Active', 'Suspended')\r\n            ) AS ap\r\n            ON AP.asset_num = A.asset_num AND ap.rn = 1\r\n        WHERE\r\n            NOT AN.service_type LIKE '%root%'\r\n            AND NOT AP.name IS NULL\r\n            AND AP.status_cd IN ('Active', 'Suspended')),\r\n\r\n      subscribers_snapshot_active_suspended AS (\r\n        SELECT snap.sub_billing_id,\r\n               snap.sub_acquisition_date,\r\n               snap.bill_accnt_id,\r\n               snap.sub_deactivation_date,\r\n               COALESCE(act_sus.msisdn_status, 'Inactive') AS sub_status_original,\r\n               snap.integration_id,\r\n               snap.x_price_plan_code,\r\n               snap.sub_msisdn_now,\r\n               snap.prod_id,\r\n               snap.owner_con_id,\r\n               snap.cust_id,\r\n               snap.sub_bad_debt,\r\n               snap.sub_type\r\n        FROM subscribers_snapshot_base snap\r\n        LEFT JOIN active_and_suspended_users act_sus\r\n          ON snap.sub_billing_id = act_sus.row_id),\r\n\r\n      subscribers_snapshot_contract AS (\r\n            SELECT\r\n                snap.sub_billing_id,\r\n                snap.sub_acquisition_date,\r\n                snap.bill_accnt_id,\r\n                snap.sub_deactivation_date,\r\n                snap.integration_id,\r\n                snap.sub_status_original,\r\n                snap.x_price_plan_code,\r\n                snap.sub_msisdn_now,\r\n                snap.prod_id,\r\n                snap.owner_con_id,\r\n                snap.cust_id,\r\n                as_x.sub_contract_start_date,\r\n                as_x.sub_contract_end_date,\r\n                as_x.deactivation_reason_siebel,\r\n                as_x.suspended_start,\r\n                as_x.suspended_end,\r\n                snap.sub_bad_debt,\r\n                snap.sub_type\r\n            FROM\r\n                subscribers_snapshot_active_suspended snap\r\n            LEFT JOIN int_assets_x as_x \r\n              ON snap.sub_billing_id = as_x.sub_billing_id),\r\n\r\n      subcribers_snapshot_email AS (\r\n          SELECT\r\n              snap.sub_billing_id,\r\n              snap.bill_accnt_id,\r\n              snap.sub_acquisition_date,\r\n              snap.sub_deactivation_date,\r\n              snap.integration_id,\r\n              snap.sub_status_original,\r\n              snap.x_price_plan_code,\r\n              snap.sub_msisdn_now,\r\n              snap.prod_id,\r\n              snap.cust_id,\r\n              snap.sub_contract_start_date,\r\n              snap.sub_contract_end_date,\r\n              snap.deactivation_reason_siebel,\r\n              snap.suspended_start,\r\n              snap.suspended_end,\r\n              email.sub_email,\r\n              snap.sub_bad_debt,\r\n              snap.sub_type\r\n          FROM subscribers_snapshot_contract snap\r\n          LEFT JOIN stg_contact email\r\n            ON snap.owner_con_id = email.row_id\r\n      ),\r\n\r\n      subscribers_snapshot_price AS (\r\n            SELECT\r\n                snap.sub_billing_id,\r\n                snap.bill_accnt_id,\r\n                snap.sub_acquisition_date,\r\n                snap.sub_deactivation_date,\r\n                snap.integration_id,\r\n                snap.sub_status_original,\r\n                snap.x_price_plan_code,\r\n                snap.sub_msisdn_now,\r\n                snap.prod_id,\r\n                snap.cust_id,\r\n                snap.sub_contract_start_date,\r\n                snap.sub_contract_end_date,\r\n                snap.deactivation_reason_siebel,\r\n                snap.suspended_start,\r\n                snap.suspended_end,\r\n                snap.sub_email,\r\n                pp.name AS sub_rate_plan_name,\r\n                snap.sub_bad_debt,\r\n                pp.pp_price AS sub_rate_plan_monthly_fee,\r\n                snap.sub_type \r\n            FROM subcribers_snapshot_email snap\r\n              LEFT JOIN int_price_plans pp\r\n                ON snap.sub_billing_id = pp.par_asset_id\r\n      ),\r\n\r\n\r\n      subscribers_snapshot_port_ins_outs AS (\r\n          SELECT\r\n              snap.sub_billing_id,\r\n              snap.bill_accnt_id,\r\n              snap.sub_acquisition_date,\r\n              snap.sub_deactivation_date,\r\n              snap.sub_status_original,\r\n              snap.x_price_plan_code,\r\n              snap.sub_msisdn_now AS sub_msisdn,\r\n              snap.cust_id,\r\n              snap.sub_contract_start_date,\r\n              snap.sub_contract_end_date,\r\n              snap.deactivation_reason_siebel,\r\n              snap.suspended_start,\r\n              snap.suspended_end,\r\n              snap.sub_email,\r\n              snap.sub_rate_plan_name,\r\n              snap.sub_bad_debt,\r\n              snap.sub_rate_plan_monthly_fee,\r\n              COALESCE(\r\n                  CASE\r\n                      WHEN pi.x_action_type = 'Port-In' THEN 'PORT IN'\r\n                      WHEN pi.x_action_type = 'Convert' THEN 'FROM PREPAID'\r\n                      ELSE 'REGULAR'\r\n                  END,\r\n                  'REGULAR'\r\n              ) AS sub_acquisition_type,\r\n              COALESCE(\r\n                  CASE\r\n                      WHEN po.x_action_type = 'Port-Out' THEN 'PORT OUT'\r\n                      WHEN po.x_action_type = 'Disconnect' THEN 'OTHER'\r\n                      ELSE 'MISSING'\r\n                  END,\r\n                  'MISSING'\r\n              ) AS sub_deactivation_reason,\r\n              snap.sub_type\r\n          FROM subscribers_snapshot_price snap\r\n            LEFT JOIN stg_port_ins pi ON snap.integration_id = pi.asset_integ_id\r\n            LEFT JOIN stg_port_outs po ON snap.integration_id = po.asset_integ_id\r\n      )\r\n\r\n\r\n\r\nSELECT\r\n  snap.sub_billing_id,\r\n  snap.cust_id,\r\n  snap.sub_msisdn AS sub_msisdn,\r\n  CASE\r\n    WHEN snap.sub_deactivation_date IS NOT NULL\r\n    THEN 'CHURNED'\r\n    WHEN snap.sub_deactivation_date = ''\r\n    THEN 'CHURNED'\r\n    WHEN snap.sub_status_original = 'Inactive'\r\n    THEN 'CHURNED'\r\n    WHEN snap.suspended_end > '{{dt}} 00:00:00' AND snap.suspended_start < '{{dt}} 00:00:00'\r\n    THEN 'DEACTIVATED'\r\n    WHEN snap.suspended_end > '{{dt}} 00:00:00' AND snap.suspended_start IS NULL\r\n    THEN 'DEACTIVATED'\r\n    WHEN snap.suspended_start < '{{dt}} 00:00:00' AND snap.suspended_end IS NULL\r\n    THEN 'DEACTIVATED'\r\n    WHEN snap.suspended_start < '{{dt}} 00:00:00' AND snap.suspended_end = ''\r\n    THEN 'DEACTIVATED'\r\n    ELSE 'ACTIVE'\r\n  END AS sub_status,\r\n  snap.sub_status_original,\r\n  snap.sub_acquisition_date,\r\n  snap.sub_acquisition_type,\r\n  'NOT APPLICABLE' AS sub_port_in_carrier,\r\n  CASE\r\n    WHEN snap.sub_deactivation_date IS NOT NULL\r\n    THEN snap.sub_deactivation_date\r\n    ELSE '9999-01-01'\r\n  END AS sub_deactivation_date,\r\n  CASE\r\n    WHEN snap.sub_deactivation_reason IS NOT NULL\r\n    THEN snap.sub_deactivation_reason\r\n    ELSE 'NOT APPLICABLE'\r\n  END AS sub_deactivation_reason,\r\n  'NOT APPLICABLE' AS sub_port_out_carrier, \r\n  COALESCE(snap.sub_contract_start_date, '9999-01-01') AS sub_contract_start_date,\r\n  COALESCE(snap.sub_contract_end_date, '9999-01-01') AS sub_contract_end_date,\r\n  snap.sub_type,\r\n  0 AS sub_balance_amt,\r\n  COALESCE(snap.sub_rate_plan_name, 'MISSING') AS sub_rate_plan_name,\r\n  COALESCE(sub_rate_plan_monthly_fee, 999999.00) AS sub_rate_plan_monthly_fee,\r\n  COALESCE(snap.sub_bad_debt, 0) AS sub_bad_debt,\r\n  0 AS sub_network_active,\r\n  CASE\r\n    WHEN snap.sub_email IS NOT NULL AND snap.sub_email <> ''\r\n    THEN snap.sub_email\r\n    ELSE 'MISSING'\r\n  END AS sub_email,\r\n  'MISSING' AS sub_prefered_channel,\r\n  CASE\r\n    WHEN bl_sa.asset_id IS NOT NULL\r\n    THEN 1\r\n    WHEN bl_acc.account_id IS NOT NULL\r\n    THEN 1\r\n    ELSE 0\r\n  END AS sub_do_not_contact,\r\n  CASE\r\n    WHEN bl_sa.asset_id  IS NOT NULL\r\n    THEN 1\r\n    WHEN bl_acc.account_id IS NOT NULL\r\n    THEN 1\r\n    ELSE 0\r\n  END AS sub_do_not_call,\r\n  CASE\r\n    WHEN bl_sa.asset_id IS NOT NULL\r\n    THEN 1\r\n    WHEN bl_acc.account_id IS NOT NULL\r\n    THEN 1\r\n    ELSE 0\r\n  END AS sub_do_not_sms,\r\n  CASE\r\n    WHEN bl_sa.asset_id IS NOT NULL\r\n    THEN 1\r\n    WHEN bl_acc.account_id IS NOT NULL\r\n    THEN 1\r\n    ELSE 0\r\n  END AS sub_do_not_email,\r\n  '{{ dt }}' AS dt\r\nFROM subscribers_snapshot_port_ins_outs AS snap\r\nLEFT JOIN stg_blacklist_assets AS bl_sa\r\n  ON snap.sub_billing_id = bl_sa.asset_id\r\nLEFT JOIN stg_blacklist_accounts AS bl_acc\r\n  ON snap.bill_accnt_id = bl_acc.account_id\r\nWHERE\r\n  sub_deactivation_date > '{{ deactivation_date_90d }}'\r\n  OR sub_deactivation_date IS NULL", "language": "sql", "refs": [{"name": "stg_ee_assets", "package": null, "version": null}, {"name": "stg_ee_assets_x", "package": null, "version": null}, {"name": "stg_ee_accounts", "package": null, "version": null}, {"name": "stg_ee_product", "package": null, "version": null}, {"name": "stg_ee_contact", "package": null, "version": null}, {"name": "stg_ee_port_in_out", "package": null, "version": null}, {"name": "stg_ee_port_in_out", "package": null, "version": null}, {"name": "stg_ee_blacklist", "package": null, "version": null}, {"name": "stg_ee_blacklist", "package": null, "version": null}, {"name": "int_ee_accounts", "package": null, "version": null}, {"name": "int_ee_assets_today", "package": null, "version": null}, {"name": "int_ee_price_plans", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_product", "model.bdh_dbt_models.stg_ee_contact", "model.bdh_dbt_models.stg_ee_port_in_out", "model.bdh_dbt_models.stg_ee_blacklist", "model.bdh_dbt_models.int_ee_accounts", "model.bdh_dbt_models.int_ee_assets_today", "model.bdh_dbt_models.int_ee_price_plans"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base": {"database": "bdh_ee", "schema": "test", "name": "int_ee_subscriber_snapshot_x_base", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_subscriber_snapshot_x_base.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\intermediate\\int_ee_subscriber_snapshot_x_base.sql", "unique_id": "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "intermediate", "int_ee_subscriber_snapshot_x_base"], "alias": "int_ee_subscriber_snapshot_x_base", "checksum": {"name": "sha256", "checksum": "4f0870626f55b5bf93373b437eef478f958def298b43934dd2f07a9025e0667a"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8149471, "relation_name": null, "raw_code": "{% set dt = var('ee_execution_date') %}\r\n\r\nWITH subscriber_snapshot AS (\r\n        SELECT sub_billing_id,\r\n            sub_msisdn,\r\n            cust_id,\r\n            sub_rate_plan_name\r\n        FROM {{ ref(\"ee_subscriber_snapshot\") }}\r\n        WHERE dt = '{{ dt }}'\r\n    ),\r\n\r\n    stg_assets AS (SELECT * FROM {{ ref(\"stg_ee_assets\") }}),\r\n\r\n    stg_assets_x AS (SELECT * FROM {{ ref(\"stg_ee_assets_x\") }}),\r\n\r\n    stg_accounts_x AS (\r\n      SELECT row_id,\r\n             par_row_id,\r\n             attrib_35 as sub_type \r\n      FROM {{ ref(\"stg_ee_accounts_x\") }}\r\n      ),\r\n\r\n    stg_accounts AS (SELECT * FROM {{ ref(\"stg_ee_accounts\") }}),\r\n\r\n    stg_product AS (SELECT * FROM {{ ref(\"stg_ee_product\") }}),\r\n\r\n    stg_contact AS (SELECT * FROM {{ ref(\"stg_ee_contact\") }}),\r\n\r\n    stg_address AS (SELECT * FROM {{ ref(\"stg_ee_address\") }}),\r\n\r\n    stg_order_line_items AS (SELECT * FROM {{ ref(\"stg_ee_order_line_items\") }}),\r\n\r\n    stg_order_items_xa AS (SELECT * FROM {{ ref(\"stg_ee_order_items_xa\") }}),\r\n\r\n    stg_orders AS (SELECT * FROM {{ ref(\"stg_ee_orders\") }}),\r\n\r\n    stg_business_sectors AS (SELECT * FROM {{ ref(\"stg_ee_business_sectors\") }}),\r\n\r\n    stg_po_emta_data AS (SELECT * FROM {{ ref(\"stg_ee_po_emta_data\") }}),\r\n\r\n    subscriptions AS (\r\n        SELECT\r\n            ss.sub_billing_id,\r\n            ss.sub_msisdn,\r\n            ss.cust_id,\r\n            ss.sub_rate_plan_name,\r\n            sa.bill_accnt_id AS account_siebel_id,\r\n            sa.owner_accnt_id,\r\n            sa.prod_id\r\n        FROM subscriber_snapshot ss\r\n        LEFT JOIN stg_assets sa ON sa.row_id = ss.sub_billing_id\r\n    ),\r\n\r\n    product_siebel AS (\r\n        SELECT DISTINCT\r\n          AN.row_id,\r\n          CASE\r\n            WHEN (AN.service_type = 'Sipwise' OR AN.service_type LIKE '%VoIP%') THEN 'VoIP'\r\n            WHEN AP.name LIKE '%M2M%' THEN 'M2M'\r\n            WHEN AP.name = 'Kodutelefon' THEN 'FVM'\r\n            WHEN AN.service_type = 'Mobile broad band' THEN 'MBB'\r\n            WHEN AN.service_type = 'Mobile voice' THEN 'Mobile Voice'\r\n            WHEN AN.service_type = 'Fiber internet' THEN 'Fiber Internet'\r\n            ELSE AN.service_type\r\n          END AS service_type,\r\n          AP.name\r\n        FROM stg_assets AS A\r\n        LEFT OUTER JOIN stg_assets_x AS AX\r\n          ON AX.row_id = A.root_asset_id\r\n          AND AX.attrib_26 IS NOT NULL\r\n          AND AX.attrib_27 IS NULL\r\n        INNER JOIN (\r\n          SELECT\r\n            A1.row_id,\r\n            A1.x_primary_attr_value AS x_primary_attr_value_msisdn,\r\n            A1.x_activation_dt,\r\n            A1.end_dt,\r\n            A1.x_wsc_admin_flg,\r\n            P.name AS service_type,\r\n            B.cust_id AS bill_acc,\r\n            C.cust_id AS cust_acc,\r\n            B.x_soc_sec_num AS ssn,\r\n            B.name AS bill_acc_name,\r\n            C.ou_type_cd AS customer_type\r\n          FROM stg_assets AS A1\r\n          INNER JOIN stg_accounts AS C\r\n            ON C.row_id = A1.owner_accnt_id\r\n          INNER JOIN stg_accounts AS B\r\n            ON B.row_id = A1.bill_accnt_id\r\n          INNER JOIN stg_product AS P\r\n            ON P.row_id = A1.prod_id\r\n          WHERE A1.x_primary_attr_name <> 'Prepaid TN' AND A1.x_primary_attr_name IS NOT NULL\r\n            AND A1.row_id = A1.root_asset_id\r\n          GROUP BY\r\n            A1.row_id,\r\n            A1.x_primary_attr_value,\r\n            A1.x_activation_dt,\r\n            A1.end_dt,\r\n            A1.x_wsc_admin_flg,\r\n            P.name,\r\n            B.cust_id,\r\n            C.cust_id,\r\n            B.x_soc_sec_num,\r\n            B.name,\r\n            C.ou_type_cd\r\n        ) AS AN\r\n          ON AN.row_id = A.root_asset_id\r\n        LEFT OUTER JOIN (\r\n          SELECT DISTINCT\r\n            AA.row_id,\r\n            AA.asset_num,\r\n            CONVERT_TIMEZONE('Europe/Tallinn', CAST(AA.x_activation_dt AS TIMESTAMP)) AS pp_start,\r\n            CONVERT_TIMEZONE('Europe/Tallinn', CAST(AA.end_dt AS TIMESTAMP)) AS end_dt,\r\n            P.row_id AS pp_code,\r\n            P.name,\r\n            COALESCE(SPR3.row_id, '') AS disc_code,\r\n            COALESCE(SPR3.name, '') AS disc,\r\n            CASE\r\n              WHEN SPR3.name IS NULL THEN NULL\r\n              ELSE CONVERT_TIMEZONE('Europe/Tallinn', CAST(AA.x_t2_product_end_date AS TIMESTAMP))\r\n            END AS disc_end,\r\n            AA.status_cd\r\n          FROM stg_assets AS AA\r\n          INNER JOIN stg_product AS P\r\n            ON P.row_id = AA.prod_id\r\n          LEFT OUTER JOIN stg_product AS SPR3\r\n            ON AA.promotion_id = SPR3.row_id\r\n            AND (CONVERT_TIMEZONE('Europe/Tallinn', CAST(AA.x_t2_product_end_date AS TIMESTAMP)) >= '{{ dt }}'\r\n                OR AA.x_t2_product_end_date IS NULL)\r\n          WHERE (AA.x_primary_attr_name = '' OR AA.x_primary_attr_name IS NULL)\r\n            AND P.type = 'Price Plan'\r\n            AND AA.status_cd IN ('Active', 'Suspended', 'Inactive')\r\n        ) AS AP\r\n          ON AP.asset_num = A.asset_num\r\n        WHERE NOT AN.service_type LIKE '%root%'\r\n          AND AP.name IS NOT NULL\r\n          AND AP.status_cd IN ('Active', 'Suspended', 'Inactive')\r\n    ),\r\n    \r\n    subscriptions_product AS (\r\n      SELECT\r\n          s.sub_billing_id,\r\n          s.sub_msisdn,\r\n          s.cust_id,\r\n          s.sub_rate_plan_name,\r\n          s.account_siebel_id,\r\n          s.owner_accnt_id,\r\n          s.prod_id,\r\n          ps.service_type AS product\r\n      FROM subscriptions s\r\n      LEFT JOIN product_siebel ps ON s.sub_billing_id = ps.row_id\r\n          AND s.sub_rate_plan_name = ps.name\r\n    ),\r\n\r\n    siebel_accounts AS (\r\n        SELECT row_id,\r\n              name,\r\n              x_soc_sec_num,\r\n              x_soc_sec_num_0_7,\r\n              pr_addr_id,\r\n              pr_con_id AS contact_siebel_id,\r\n              ou_type_cd\r\n        FROM stg_accounts\r\n    ),\r\n\r\n    manager_accounts AS (\r\n        SELECT DISTINCT row_id,\r\n               manager\r\n        FROM stg_accounts\r\n        WHERE manager != ''\r\n    ),\r\n\r\n    manager_contacts AS (\r\n        SELECT DISTINCT row_id,\r\n               fst_name,\r\n               last_name\r\n        FROM stg_contact\r\n        WHERE fst_name != ''\r\n          AND last_name != ''\r\n    ),\r\n    \r\n    cust_acc AS (\r\n        SELECT DISTINCT\r\n          x_primary_attr_value AS msisdn, \r\n          acb.cust_id AS billing_account,\r\n          ac.cust_id AS customer_account,\r\n          sa.row_id\r\n        FROM stg_assets AS sa\r\n        LEFT JOIN stg_accounts AS ac\r\n          ON ac.row_id = sa.owner_accnt_id\r\n        LEFT JOIN stg_accounts AS acb\r\n          ON acb.row_id = sa.bill_accnt_id\r\n        LEFT JOIN stg_product AS pr\r\n          ON sa.prod_id = pr.row_id\r\n        WHERE\r\n          pr.type IN ('Mobile Voice', 'MBB', 'Fiber Internet')\r\n    ),\r\n\r\n    subscriptions_with_accounts AS (\r\n        SELECT\r\n            s.sub_billing_id,\r\n            s.sub_msisdn,\r\n            s.cust_id,\r\n            s.sub_rate_plan_name,\r\n            s.account_siebel_id,\r\n            s.owner_accnt_id,\r\n            s.prod_id,\r\n            s.product,\r\n            a.name,\r\n            a.pr_addr_id,\r\n            a.contact_siebel_id,\r\n            a.ou_type_cd,\r\n            CASE\r\n                WHEN a.ou_type_cd = 'Residential' THEN a.x_soc_sec_num\r\n                ELSE 'NOT APPLICABLE'\r\n            END AS soc_sec_num,\r\n            CASE\r\n                WHEN a.ou_type_cd = 'Business' THEN a.x_soc_sec_num\r\n                ELSE 'NOT APPLICABLE'\r\n            END AS company_code,\r\n            CASE\r\n                WHEN a.ou_type_cd = 'Residential' THEN a.x_soc_sec_num_0_7\r\n                ELSE 'NOT APPLICABLE'\r\n            END AS x_soc_sec_num_0_7,\r\n            CASE WHEN ax.sub_type IS NULL THEN ou_type_cd ELSE ax.sub_type END AS sub_type,\r\n            ad.zipcode,\r\n            ad.zipcode_subdiv,\r\n            ad.county,\r\n            ad.city,\r\n            ad.addr,\r\n            ma.manager,\r\n            mc.fst_name AS manager_name,\r\n            mc.last_name AS manager_last_name,\r\n            ca.msisdn,\r\n            ca.billing_account,\r\n            ca.customer_account,\r\n            ca.row_id\r\n        FROM subscriptions_product s\r\n        LEFT OUTER JOIN siebel_accounts a ON s.account_siebel_id = a.row_id\r\n        LEFT OUTER JOIN stg_accounts_x ax ON s.account_siebel_id = ax.row_id\r\n        LEFT OUTER JOIN stg_address ad ON a.pr_addr_id = ad.row_id\r\n        LEFT OUTER JOIN manager_accounts ma ON s.owner_accnt_id = ma.row_id\r\n        LEFT OUTER JOIN manager_contacts mc ON ma.manager = mc.row_id\r\n        LEFT OUTER JOIN cust_acc ca ON s.sub_billing_id = ca.row_id\r\n          AND s.cust_id = ca.billing_account\r\n    ),\r\n\r\n    items_with_vat AS (\r\n        SELECT DISTINCT\r\n            acc.cust_id AS billing_account,\r\n            acc_customer.cust_id AS client_account, /* -- client_account */\r\n            acc.cust_stat_cd,\r\n            acc.cust_since_dt,\r\n            acc.ou_type_cd,\r\n            ax.sub_type,\r\n            sector.selgitus,\r\n            acc.name AS acc_name,\r\n            acc.x_soc_sec_num,\r\n            msisdn.name AS msisdn_name,\r\n            x_primary_attr_value, /* -- x_primary_attr_value_msisdn */\r\n            status_cd,\r\n            msisdn.created,\r\n            msisdn.row_id AS prod_code,\r\n            pam_name, /* -- voip_component */\r\n            pam_status,\r\n            pam_created,\r\n            kuumaks_with_VAT, /* -- voip_component_base_unit_price */\r\n            type, /* -- discount_type */\r\n            promo_with_VAT, /* -- discount_amount with VAT */\r\n            x_promotion_end_date /* -- voip_discount_end_date */\r\n          FROM (\r\n            SELECT\r\n              *\r\n            FROM stg_accounts\r\n            WHERE\r\n              accnt_type_cd = 'Billing'\r\n          ) AS acc\r\n          LEFT OUTER JOIN stg_accounts AS acc_customer\r\n            ON acc_customer.accnt_type_cd = 'Customer'\r\n            AND acc_customer.row_id = acc.master_ou_id\r\n          LEFT OUTER JOIN stg_accounts_x AS ax\r\n            ON acc_customer.row_id = ax.par_row_id\r\n          LEFT OUTER JOIN (\r\n            SELECT DISTINCT\r\n              reg_code,\r\n              sec.selgitus\r\n            FROM stg_po_emta_data AS bus\r\n            LEFT OUTER JOIN stg_business_sectors AS sec\r\n              ON bus.business_sector = sec.business_sector\r\n            WHERE\r\n              bus.business_sector <> '' AND NOT bus.business_sector IS NULL\r\n          ) AS sector\r\n            ON acc.x_soc_sec_num_0_7 = SUBSTR(sector.reg_code, 1, 7)\r\n          LEFT OUTER JOIN (\r\n            SELECT\r\n              *\r\n            FROM (\r\n              SELECT\r\n                ROW_NUMBER() OVER (PARTITION BY bill_accnt_id, x_primary_attr_value ORDER BY oli_last_upd DESC NULLS LAST, x_promotion_end_date DESC NULLS LAST) AS cnt,\r\n                *\r\n              FROM (\r\n                SELECT DISTINCT\r\n                  a.bill_accnt_id,\r\n                  prod.name,\r\n                  a.x_primary_attr_value,\r\n                  a.status_cd,\r\n                  a.created,\r\n                  pam_prod.row_id,\r\n                  pam_prod.name AS pam_name,\r\n                  pam.status_cd AS pam_status,\r\n                  pam.created AS pam_created,\r\n                  oli.base_unit_pri AS kuumaks_with_VAT,\r\n                  xa.charvalue AS type,\r\n                  CASE WHEN xa.charvalue = 'Amount' THEN xa2.charvalue ELSE xa1.charvalue END AS promo_with_VAT,\r\n                  oli.x_promotion_end_date,\r\n                  oli.last_upd AS oli_last_upd\r\n                FROM stg_assets AS a\r\n                LEFT OUTER JOIN stg_product AS prod\r\n                  ON prod.row_id = a.prod_id\r\n                LEFT OUTER JOIN stg_assets AS pam\r\n                  ON pam.root_asset_id = a.row_id\r\n                LEFT OUTER JOIN stg_product AS pam_prod\r\n                  ON pam_prod.row_id = pam.prod_id\r\n                  AND (\r\n                    pam_prod.name LIKE 'Piiramatu \u00c4ri M%' OR pam_prod.name LIKE 'Piiramatu \u00c4ri \u00dc%'\r\n                  )\r\n                  AND pam.status_cd = 'Active'\r\n                LEFT OUTER JOIN stg_order_line_items AS oli\r\n                  ON oli.asset_integ_id = pam.integration_id AND oli.action_cd IN ('New', 'Modified')\r\n                LEFT JOIN stg_order_items_xa AS xa\r\n                  ON xa.orderitemid = oli.row_id AND xa.attributename = 'Promotion Type'\r\n                LEFT JOIN stg_order_items_xa AS xa1\r\n                  ON xa1.orderitemid = oli.row_id AND xa1.attributename = 'Promotion Value'\r\n                LEFT JOIN stg_order_items_xa AS xa2\r\n                  ON xa2.orderitemid = oli.row_id AND xa2.attributename = 'Promotion Value incl. VAT'\r\n                LEFT JOIN stg_orders AS o\r\n                  ON o.row_id = oli.order_id\r\n                WHERE\r\n                  prod.name IN ('Mobile voice', 'VoIP') AND NOT pam_prod.name IS NULL\r\n              ) AS ww\r\n            ) AS www\r\n            WHERE\r\n              cnt = 1\r\n          ) AS msisdn\r\n            ON msisdn.bill_accnt_id = acc.row_id\r\n          /* Piece of code provided in original query for ct tables, but irrelevant for voip components. */ /* No way to join with encrypted tables. */ /* LEFT OUTER JOIN ct_t2ee_analyst_product.rr_marketing_communication rr */ /* ON rr.billing_account = acc.ou_num */ /* AND x_primary_attr_value = rr.msisdn */\r\n          WHERE\r\n            NOT acc_customer.created IS NULL\r\n            AND acc.cust_stat_cd IN ('Active', 'Suspended')\r\n            AND acc.ou_type_cd <> 'Residential'\r\n            AND NOT msisdn.x_primary_attr_value IS NULL\r\n    ),\r\n\r\n    voip_components AS (\r\n        SELECT DISTINCT\r\n              client_account,\r\n              x_primary_attr_value,\r\n              pam_name AS voip_component,\r\n              TRY_CAST(kuumaks_with_VAT AS DECIMAL(10, 2)) AS voip_component_base_unit_price,\r\n              CASE\r\n                WHEN type = 'Amount'\r\n                THEN CAST(TRY_CAST(kuumaks_with_VAT AS DECIMAL(10, 2)) - (\r\n                  TRY_CAST(promo_with_VAT AS DECIMAL(10, 2))\r\n                ) AS DECIMAL(10, 2))\r\n                WHEN type = 'Percentage'\r\n                THEN CAST(TRY_CAST(kuumaks_with_VAT AS DECIMAL(10, 2)) - (\r\n                  TRY_CAST(kuumaks_with_VAT AS DECIMAL(10, 2)) * (\r\n                    TRY_CAST(promo_with_VAT AS DECIMAL(10, 2))\r\n                  ) / NULLIF(100, 0)\r\n                ) AS DECIMAL(10, 2))\r\n                ELSE TRY_CAST(kuumaks_with_VAT AS DECIMAL(10, 2))\r\n              END AS voip_price,\r\n              type AS discount_type,\r\n              TRY_CAST(promo_with_VAT AS DECIMAL(10, 2)) AS discount_amount,\r\n              x_promotion_end_date AS voip_discount_end_date\r\n          FROM items_with_vat\r\n    ),\r\n\r\n    subscriptions_with_voip AS (\r\n        SELECT\r\n                s.sub_billing_id,\r\n                s.sub_msisdn,\r\n                s.cust_id,\r\n                s.customer_account,\r\n                s.account_siebel_id,\r\n                s.contact_siebel_id,\r\n                s.sub_type,\r\n                s.product,\r\n                s.name,\r\n                s.soc_sec_num,\r\n                s.x_soc_sec_num_0_7,\r\n                s.company_code,\r\n                CASE\r\n                    WHEN s.addr != '' THEN s.addr\r\n                END AS addr,\r\n                CASE\r\n                    WHEN s.zipcode != '' THEN s.zipcode\r\n                END AS zipcode,\r\n                CASE\r\n                    WHEN s.county != '' THEN s.county\r\n                END AS county,\r\n                CASE\r\n                    WHEN s.city != '' THEN s.city\r\n                END AS city,\r\n                CASE\r\n                    WHEN SUBSTRING(s.x_soc_sec_num_0_7, 1, 1) IN ('3', '4') THEN TRY_TO_DATE('19' || SUBSTRING(x_soc_sec_num_0_7, 2, 6), 'YYYYMMDD')\r\n                    WHEN SUBSTRING(s.x_soc_sec_num_0_7, 1, 1) IN ('5', '6') THEN TRY_TO_DATE('20' || SUBSTRING(x_soc_sec_num_0_7, 2, 6), 'YYYYMMDD')\r\n                END AS bdate,\r\n                CASE\r\n                    WHEN MONTH(bdate) > MONTH(CURRENT_DATE()) THEN (YEAR(CURRENT_DATE()) - YEAR(bdate)) - 1\r\n                    WHEN MONTH(bdate) < MONTH(CURRENT_DATE()) THEN YEAR(CURRENT_DATE()) - YEAR(bdate)\r\n                    WHEN MONTH(bdate) = MONTH(CURRENT_DATE()) THEN\r\n                        CASE\r\n                            WHEN DAY(bdate) <= DAY(CURRENT_DATE()) THEN YEAR(CURRENT_DATE()) - YEAR(bdate)\r\n                            WHEN DAY(bdate) > DAY(CURRENT_DATE()) THEN (YEAR(CURRENT_DATE()) - YEAR(bdate)) - 1\r\n                        END\r\n                END AS cust_age,\r\n                s.zipcode_subdiv,\r\n                s.manager_name,\r\n                s.manager_last_name,\r\n                vc.voip_component,                                         \r\n                vc.voip_component_base_unit_price,\r\n                vc.voip_price,\r\n                vc.voip_discount_end_date,\r\n                '{{ dt }}' AS dt\r\n          FROM subscriptions_with_accounts s\r\n          LEFT JOIN voip_components vc\r\n              ON vc.x_primary_attr_value = s.sub_msisdn\r\n              AND vc.client_account = s.customer_account\r\n    ),\r\n\r\n    subscriptions_final AS (\r\n        SELECT\r\n            sub_billing_id,\r\n            sub_msisdn,\r\n            cust_id,\r\n            IFNULL(customer_account, 'MISSING') AS customer_account,\r\n            account_siebel_id,\r\n            contact_siebel_id,\r\n            sub_type,\r\n            product,\r\n            name,\r\n            soc_sec_num,\r\n            x_soc_sec_num_0_7,\r\n            company_code,\r\n            IFNULL(addr, 'MISSING') AS addr,\r\n            IFNULL(zipcode, 'MISSING') AS zipcode,\r\n            IFNULL(zipcode_subdiv, 'MISSING') AS zipcode_subdiv, \r\n            IFNULL(city, 'MISSING') AS city, \r\n            IFNULL(county, 'MISSING') AS county, \r\n            IFNULL(manager_name, 'MISSING') AS manager_name, \r\n            IFNULL(manager_last_name, 'MISSING') AS manager_last_name, \r\n            cust_age,\r\n            voip_component,                                         \r\n            voip_component_base_unit_price,\r\n            voip_price,\r\n            voip_discount_end_date,\r\n            dt\r\n        FROM subscriptions_with_voip\r\n        WHERE name IS NOT NULL\r\n    )\r\n\r\nSELECT sub_billing_id,\r\n       sub_msisdn,\r\n       cust_id,\r\n       customer_account,\r\n       account_siebel_id,\r\n       contact_siebel_id,\r\n       sub_type AS account_sub_segment,\r\n       product,\r\n       name AS account_name,\r\n       soc_sec_num,\r\n       x_soc_sec_num_0_7,\r\n       company_code,\r\n       addr AS billing_address,\r\n       zipcode,\r\n       zipcode_subdiv,\r\n       city,\r\n       county,\r\n       manager_name,\r\n       manager_last_name,\r\n       cust_age,\r\n       voip_component,                                         \r\n       voip_component_base_unit_price,\r\n       voip_price,\r\n       voip_discount_end_date,\r\n       dt\r\nFROM subscriptions_final", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}, {"name": "stg_ee_assets", "package": null, "version": null}, {"name": "stg_ee_assets_x", "package": null, "version": null}, {"name": "stg_ee_accounts_x", "package": null, "version": null}, {"name": "stg_ee_accounts", "package": null, "version": null}, {"name": "stg_ee_product", "package": null, "version": null}, {"name": "stg_ee_contact", "package": null, "version": null}, {"name": "stg_ee_address", "package": null, "version": null}, {"name": "stg_ee_order_line_items", "package": null, "version": null}, {"name": "stg_ee_order_items_xa", "package": null, "version": null}, {"name": "stg_ee_orders", "package": null, "version": null}, {"name": "stg_ee_business_sectors", "package": null, "version": null}, {"name": "stg_ee_po_emta_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_accounts_x", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_product", "model.bdh_dbt_models.stg_ee_contact", "model.bdh_dbt_models.stg_ee_address", "model.bdh_dbt_models.stg_ee_order_line_items", "model.bdh_dbt_models.stg_ee_order_items_xa", "model.bdh_dbt_models.stg_ee_orders", "model.bdh_dbt_models.stg_ee_business_sectors", "model.bdh_dbt_models.stg_ee_po_emta_data"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.ee_churn_snapshot": {"database": "bdh_ee", "schema": "test", "name": "ee_churn_snapshot", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\marts\\ee_churn_snapshot.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\marts\\ee_churn_snapshot.sql", "unique_id": "model.bdh_dbt_models.ee_churn_snapshot", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "marts", "ee_churn_snapshot"], "alias": "ee_churn_snapshot", "checksum": {"name": "sha256", "checksum": "c470b723ed18d78e48589b0192dc09f7943bf68edb358972c5ab456b5a3bbc71"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH", "execution_date": "2024-06-18"}, "tags": ["TBD_EE", "ee_360_profile"], "description": "daily churn snapshot", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "msisdn": {"name": "msisdn", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_deactivation_date": {"name": "sub_deactivation_date", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "termination_reason_4sale": {"name": "termination_reason_4sale", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "termination_reason_siebel": {"name": "termination_reason_siebel", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "termination_reason_siebel_original": {"name": "termination_reason_siebel_original", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "churn_reason": {"name": "churn_reason", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "deactivation_type": {"name": "deactivation_type", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "port_out_reason": {"name": "port_out_reason", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_status": {"name": "sub_status", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_ee\\ee_customer_360_profile\\ee_churn_snapshot.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "incremental", "database": "bdh_ee", "schema": "test", "execution_date": "2024-06-18", "enabled": true, "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.814445, "relation_name": "bdh_ee.test.ee_churn_snapshot", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nWITH int_churn_snapshot AS (SELECT * FROM {{ ref('int_ee_churn_snapshot_base') }})\r\n\r\nSELECT sub_billing_id,\r\n       customer_id,\r\n       msisdn,\r\n       sub_deactivation_date,\r\n       termination_reason_4sale,\r\n       termination_reason_siebel,\r\n       termination_reason_siebel_original,\r\n       churn_reason,\r\n       deactivation_type,\r\n       port_out_reason,\r\n       sub_status,\r\n       dt\r\nFROM int_churn_snapshot", "language": "sql", "refs": [{"name": "int_ee_churn_snapshot_base", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_ee_churn_snapshot_base"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.ee_custom_metrics_current_offers": {"database": "bdh_ee", "schema": "test", "name": "ee_custom_metrics_current_offers", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\marts\\ee_custom_metrics_current_offers.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\marts\\ee_custom_metrics_current_offers.sql", "unique_id": "model.bdh_dbt_models.ee_custom_metrics_current_offers", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "marts", "ee_custom_metrics_current_offers"], "alias": "ee_custom_metrics_current_offers", "checksum": {"name": "sha256", "checksum": "5cd6bc17efb1ada1e7c021b9543e57f18c39b2bf056a4b75d32a9a4db50f50dd"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH", "execution_date": "2024-06-18"}, "tags": ["TBD_EE", "ee_360_profile"], "description": "", "columns": {"billing_account": {"name": "billing_account", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "customer_account": {"name": "customer_account", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_msisdn": {"name": "sub_msisdn", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_billing_id": {"name": "sub_billing_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_name": {"name": "plan_name", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_discount_name": {"name": "plan_discount_name", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_start_date": {"name": "plan_start_date", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_price": {"name": "plan_price", "description": "", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "plan_discount": {"name": "plan_discount", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_discount_end_date": {"name": "plan_discount_end_date", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_standard_price": {"name": "plan_standard_price", "description": "", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "plan_price_wo_vat": {"name": "plan_price_wo_vat", "description": "", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "plan_discount_wo_vat": {"name": "plan_discount_wo_vat", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_standard_price_wo_vat": {"name": "plan_standard_price_wo_vat", "description": "", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "plan_data_gb": {"name": "plan_data_gb", "description": "", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "plan_data_mb": {"name": "plan_data_mb", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "plan_voice_minutes": {"name": "plan_voice_minutes", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "plan_sms": {"name": "plan_sms", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "plan_siebel_id": {"name": "plan_siebel_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_discount_siebel_id": {"name": "plan_discount_siebel_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "plan_st_id": {"name": "plan_st_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_ee\\ee_customer_360_profile\\ee_custom_metrics_current_offers.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "incremental", "database": "bdh_ee", "schema": "test", "execution_date": "2024-06-18", "enabled": true, "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.8174436, "relation_name": "bdh_ee.test.ee_custom_metrics_current_offers", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nWITH int_custom_metrics_current_offers AS (SELECT * FROM {{ ref('int_ee_custom_metrics_current_offers_base') }})\r\n\r\nSELECT billing_account,\r\n       customer_account,\r\n       sub_msisdn,\r\n       sub_billing_id,\r\n       plan_name,\r\n       plan_discount_name,\r\n       plan_start_date,\r\n       plan_price,\r\n       plan_discount,\r\n       plan_discount_end_date,\r\n       plan_standard_price,\r\n       plan_price_wo_vat,\r\n       plan_discount_wo_vat,\r\n       plan_standard_price_wo_vat,\r\n       plan_data_gb,\r\n       plan_data_mb,\r\n       plan_voice_minutes,\r\n       plan_sms,\r\n       plan_siebel_id,\r\n       plan_discount_siebel_id,\r\n       plan_st_id,\r\n       dt\r\nFROM int_custom_metrics_current_offers", "language": "sql", "refs": [{"name": "int_ee_custom_metrics_current_offers_base", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.ee_payment_fact": {"database": "bdh_ee", "schema": "test", "name": "ee_payment_fact", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\marts\\ee_payment_fact.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\marts\\ee_payment_fact.sql", "unique_id": "model.bdh_dbt_models.ee_payment_fact", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "marts", "ee_payment_fact"], "alias": "ee_payment_fact", "checksum": {"name": "sha256", "checksum": "24c6097ad7c2888c1e71837b181053cb8ab2a310693fd19ed91cca640667e997"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH", "execution_date": "2024-06-18"}, "tags": ["TBD_EE", "ee_360_profile"], "description": "", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "payment_timestamp": {"name": "payment_timestamp", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "payment_type": {"name": "payment_type", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "payment_channel": {"name": "payment_channel", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "payment_amt": {"name": "payment_amt", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "payment_cost_amt": {"name": "payment_cost_amt", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_ee\\ee_customer_360_profile\\ee_payment_fact.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "incremental", "database": "bdh_ee", "schema": "test", "execution_date": "2024-06-18", "enabled": true, "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.8204443, "relation_name": "bdh_ee.test.ee_payment_fact", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nWITH int_payment_fact AS (SELECT * FROM {{ ref('int_ee_payment_fact_base') }})\r\n\r\n\r\n\r\nSELECT  sub_billing_id,\r\n        payment_timestamp,\r\n        payment_type,\r\n        payment_channel,\r\n        payment_amt,\r\n        payment_cost_amt,\r\n        dt\r\nFROM int_payment_fact", "language": "sql", "refs": [{"name": "int_ee_payment_fact_base", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_ee_payment_fact_base"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.ee_sales_point_visits": {"database": "bdh_ee", "schema": "test", "name": "ee_sales_point_visits", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\marts\\ee_sales_point_visits.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\marts\\ee_sales_point_visits.sql", "unique_id": "model.bdh_dbt_models.ee_sales_point_visits", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "marts", "ee_sales_point_visits"], "alias": "ee_sales_point_visits", "checksum": {"name": "sha256", "checksum": "0d4e5e2170d3c0d03f72c2004d0991cf8346d612bc99e5e517f3141bf46f9b54"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH", "execution_date": "2024-06-18"}, "tags": ["TBD_EE", "ee_360_profile"], "description": "daily ee sales point visits snapshot", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "shop_id": {"name": "shop_id", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "shop_code": {"name": "shop_code", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "shop_name": {"name": "shop_name", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "shop": {"name": "shop", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "dealer": {"name": "dealer", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "workplace_code": {"name": "workplace_code", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "shop_address": {"name": "shop_address", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sales_point_region": {"name": "sales_point_region", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "visit_time": {"name": "visit_time", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_ee\\ee_customer_360_profile\\ee_sales_point_visits.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "incremental", "database": "bdh_ee", "schema": "test", "execution_date": "2024-06-18", "enabled": true, "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.8236108, "relation_name": "bdh_ee.test.ee_sales_point_visits", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nWITH int_sales_point_visits AS (SELECT * FROM {{ ref('int_ee_sales_point_visits_base') }})\r\n\r\n\r\nSELECT sub_billing_id,\r\n       shop_id,\r\n       shop_code,\r\n       shop_name,\r\n       shop,\r\n       dealer,\r\n       workplace_code,\r\n       shop_address,\r\n       sales_point_region,\r\n       visit_time,\r\n       dt\r\nFROM int_sales_point_visits", "language": "sql", "refs": [{"name": "int_ee_sales_point_visits_base", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_ee_sales_point_visits_base"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.ee_subscriber_snapshot": {"database": "bdh_ee", "schema": "test", "name": "ee_subscriber_snapshot", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\marts\\ee_subscriber_snapshot.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\marts\\ee_subscriber_snapshot.sql", "unique_id": "model.bdh_dbt_models.ee_subscriber_snapshot", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "marts", "ee_subscriber_snapshot"], "alias": "ee_subscriber_snapshot", "checksum": {"name": "sha256", "checksum": "8a58264603c9708d8b412b3ce340fbeabe06de4987767a8b949307d64059582a"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH", "execution_date": "2024-06-18"}, "tags": ["TBD_EE", "ee_360_profile"], "description": "daily snapshot of subscribers", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "Description for sub_billing_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "cust_id": {"name": "cust_id", "description": "Description for cust_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_msisdn": {"name": "sub_msisdn", "description": "Description for sub_msisdn", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_status": {"name": "sub_status", "description": "Description for sub_status", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_status_original": {"name": "sub_status_original", "description": "Description for sub_status_original", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_acquisition_date": {"name": "sub_acquisition_date", "description": "Description for sub_acquisition_date", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_acquisition_type": {"name": "sub_acquisition_type", "description": "Description for sub_acquisition_type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_port_in_carrier": {"name": "sub_port_in_carrier", "description": "Description for sub_port_in_carrier", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_deactivation_date": {"name": "sub_deactivation_date", "description": "Description for sub_deactivation_date", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_deactivation_reason": {"name": "sub_deactivation_reason", "description": "Description for sub_deactivation_reason", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_port_out_carrier": {"name": "sub_port_out_carrier", "description": "Description for sub_port_out_carrier", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_contract_start_date": {"name": "sub_contract_start_date", "description": "Description for sub_contract_start_date", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_contract_end_date": {"name": "sub_contract_end_date", "description": "Description for sub_contract_end_date", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_type": {"name": "sub_type", "description": "Description for sub_type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_balance_amt": {"name": "sub_balance_amt", "description": "Description for sub_balance_amt", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "sub_rate_plan_name": {"name": "sub_rate_plan_name", "description": "Description for sub_rate_plan_name", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_rate_plan_monthly_fee": {"name": "sub_rate_plan_monthly_fee", "description": "Description for sub_rate_plan_monthly_fee", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "sub_bad_debt": {"name": "sub_bad_debt", "description": "Description for sub_bad_debt", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "sub_network_active": {"name": "sub_network_active", "description": "Description for sub_network_active", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "sub_email": {"name": "sub_email", "description": "Description for sub_email", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_prefered_channel": {"name": "sub_prefered_channel", "description": "Description for sub_prefered_channel", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_do_not_call": {"name": "sub_do_not_call", "description": "Description for sub_do_not_call", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "sub_do_not_sms": {"name": "sub_do_not_sms", "description": "Description for sub_do_not_sms", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "sub_do_not_email": {"name": "sub_do_not_email", "description": "Description for sub_do_not_email", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "sub_do_not_contact": {"name": "sub_do_not_contact", "description": "Description for sub_do_not_contact", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "Description for dt", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "incremental", "database": "bdh_ee", "schema": "test", "execution_date": "2024-06-18", "enabled": true, "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.826613, "relation_name": "bdh_ee.test.ee_subscriber_snapshot", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nWITH int_subscribers_snapshot AS (SELECT * FROM {{ ref('int_ee_subscriber_snapshot_base') }})\r\n\r\nSELECT sub_billing_id,\r\n       cust_id,\r\n       sub_msisdn,\r\n       sub_status,\r\n       sub_status_original,\r\n       sub_acquisition_date,\r\n       sub_acquisition_type,\r\n       sub_port_in_carrier,\r\n       sub_deactivation_date,\r\n       sub_deactivation_reason,\r\n       sub_port_out_carrier,\r\n       sub_contract_start_date,\r\n       sub_contract_end_date,\r\n       sub_type,\r\n       sub_balance_amt,\r\n       sub_rate_plan_name,\r\n       sub_rate_plan_monthly_fee,\r\n       sub_bad_debt,\r\n       sub_network_active,\r\n       sub_email,\r\n       sub_prefered_channel,\r\n       sub_do_not_call,\r\n       sub_do_not_sms,\r\n       sub_do_not_email,\r\n       sub_do_not_contact,\r\n       dt\r\nFROM int_subscribers_snapshot", "language": "sql", "refs": [{"name": "int_ee_subscriber_snapshot_base", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.ee_subscriber_snapshot_x": {"database": "bdh_ee", "schema": "test", "name": "ee_subscriber_snapshot_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\marts\\ee_subscriber_snapshot_x.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\marts\\ee_subscriber_snapshot_x.sql", "unique_id": "model.bdh_dbt_models.ee_subscriber_snapshot_x", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "marts", "ee_subscriber_snapshot_x"], "alias": "ee_subscriber_snapshot_x", "checksum": {"name": "sha256", "checksum": "7d11732ca1ebb0eec1a033170b4d1a00df78d5f16d4ed8276d1bc47267815934"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH", "execution_date": "2024-06-18"}, "tags": ["TBD_EE", "ee_360_profile"], "description": "daily snapshot of subscribers x", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_msisdn": {"name": "sub_msisdn", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "cust_id": {"name": "cust_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "customer_account": {"name": "customer_account", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "account_siebel_id": {"name": "account_siebel_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "contact_siebel_id": {"name": "contact_siebel_id", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "account_sub_segment": {"name": "account_sub_segment", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "product": {"name": "product", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "soc_sec_num": {"name": "soc_sec_num", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "x_soc_sec_num_0_7": {"name": "x_soc_sec_num_0_7", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "company_code": {"name": "company_code", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "billing_address": {"name": "billing_address", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "zipcode": {"name": "zipcode", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "zipcode_subdiv": {"name": "zipcode_subdiv", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "county": {"name": "county", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "manager_name": {"name": "manager_name", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "manager_last_name": {"name": "manager_last_name", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "cust_age": {"name": "cust_age", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "voip_component": {"name": "voip_component", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "voip_component_base_unit_price": {"name": "voip_component_base_unit_price", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "voip_price": {"name": "voip_price", "description": "", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "voip_discount_end_date": {"name": "voip_discount_end_date", "description": "", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "incremental", "database": "bdh_ee", "schema": "test", "execution_date": "2024-06-18", "enabled": true, "tags": ["TBD_EE", "ee_360_profile"], "meta": {"owner": "TBD EE", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.834613, "relation_name": "bdh_ee.test.ee_subscriber_snapshot_x", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nWITH int_subscriber_snapshot_x AS (SELECT * FROM {{ ref('int_ee_subscriber_snapshot_x_base') }})\r\n\r\nSELECT sub_billing_id,\r\n       sub_msisdn,\r\n       cust_id,\r\n       customer_account,\r\n       account_siebel_id,\r\n       contact_siebel_id,\r\n       account_sub_segment,\r\n       product,\r\n       account_name,\r\n       soc_sec_num,\r\n       x_soc_sec_num_0_7,\r\n       company_code,\r\n       billing_address,\r\n       zipcode,\r\n       zipcode_subdiv,\r\n       city,\r\n       county,\r\n       manager_name,\r\n       manager_last_name,\r\n       cust_age,\r\n       voip_component,                                         \r\n       voip_component_base_unit_price,\r\n       voip_price,\r\n       voip_discount_end_date,\r\n       dt\r\nFROM int_subscriber_snapshot_x", "language": "sql", "refs": [{"name": "int_ee_subscriber_snapshot_x_base", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_business_sectors": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_business_sectors", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_business_sectors.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_business_sectors.sql", "unique_id": "model.bdh_dbt_models.stg_ee_business_sectors", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_analysts", "stg_ee_business_sectors"], "alias": "stg_ee_business_sectors", "checksum": {"name": "sha256", "checksum": "e026d7f8777ca9e64a808b631c39d3ca71530dcecdf6265a2b23ce3b4ce51dfb"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8527198, "relation_name": null, "raw_code": "WITH v_business_sectors AS (\r\n  SELECT business_sector,\r\n         selgitus\r\n  FROM {{ source('bdh_ee_analysts_tables', 'business_sectors') }}\r\n)\r\n\r\nSELECT business_sector,\r\n       selgitus\r\nFROM v_business_sectors", "language": "sql", "refs": [], "sources": [["bdh_ee_analysts_tables", "business_sectors"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_analysts_tables.business_sectors"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_po_emta_data": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_po_emta_data", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_po_emta_data.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_po_emta_data.sql", "unique_id": "model.bdh_dbt_models.stg_ee_po_emta_data", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_analysts", "stg_ee_po_emta_data"], "alias": "stg_ee_po_emta_data", "checksum": {"name": "sha256", "checksum": "4a24eeb2ec262067114cff3543afd6a229217541e4f81811d5b56ef6925819fe"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8558388, "relation_name": null, "raw_code": "WITH v_po_emta_data AS (\r\n  SELECT reg_code,\r\n         business_sector\r\n  FROM {{ source('bdh_ee_analysts_tables', 'po_emta_data') }}\r\n)\r\n\r\nSELECT reg_code,\r\n       business_sector\r\nFROM v_po_emta_data", "language": "sql", "refs": [], "sources": [["bdh_ee_analysts_tables", "po_emta_data"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_analysts_tables.po_emta_data"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_pp_prices": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_pp_prices", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_pp_prices.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_pp_prices.sql", "unique_id": "model.bdh_dbt_models.stg_ee_pp_prices", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_analysts", "stg_ee_pp_prices"], "alias": "stg_ee_pp_prices", "checksum": {"name": "sha256", "checksum": "a85cafbef2d3ce493ce99d1a98d71f2f4eaf34bdcbfcabb016e030ec10c7f343"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8572896, "relation_name": null, "raw_code": "WITH v_pp_prices AS (\r\n  SELECT pp_code,\r\n         priceplan,\r\n         pp_price,\r\n         pp_price_vat,\r\n         total_vat,\r\n         discount_name,\r\n         nbo_status\r\n  FROM {{ source('bdh_ee_analysts_tables', 'aa_pp_prices') }}\r\n)\r\n\r\nSELECT pp_code,\r\n       priceplan,\r\n       pp_price,\r\n       pp_price_vat,\r\n       total_vat,\r\n       discount_name,\r\n       nbo_status\r\nFROM v_pp_prices", "language": "sql", "refs": [], "sources": [["bdh_ee_analysts_tables", "aa_pp_prices"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_analysts_tables.aa_pp_prices"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_vat_rate": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_vat_rate", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_vat_rate.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_analysts\\stg_ee_vat_rate.sql", "unique_id": "model.bdh_dbt_models.stg_ee_vat_rate", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_analysts", "stg_ee_vat_rate"], "alias": "stg_ee_vat_rate", "checksum": {"name": "sha256", "checksum": "2320e870f0f158fdfbe43d337cf3202c1e726e3887016568c8ed857a7705c456"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.859308, "relation_name": null, "raw_code": "WITH v_vat_rate AS (\r\n  SELECT vat_rate,\r\n         valid_from,\r\n         valid_to \r\n  FROM {{ source('bdh_ee_analysts_tables', 'vat_rate') }}\r\n )\r\n\r\nSELECT vat_rate,\r\n       valid_from,\r\n       valid_to\r\nFROM v_vat_rate", "language": "sql", "refs": [], "sources": [["bdh_ee_analysts_tables", "vat_rate"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_darbuotojai": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_darbuotojai", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_darbuotojai.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_darbuotojai.sql", "unique_id": "model.bdh_dbt_models.stg_ee_darbuotojai", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_darbuotojai"], "alias": "stg_ee_darbuotojai", "checksum": {"name": "sha256", "checksum": "297c7ec3813b23f7a22c593507831f985e803ba58208b4ae797d6e0b71a4eece"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8613014, "relation_name": null, "raw_code": "WITH v_darbuotojai AS (\r\n  SELECT id\r\n  FROM {{ source('bdh_ee_sales_tool', 'darbuotojai') }}\r\n)\r\n\r\nSELECT id\r\nFROM v_darbuotojai", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "darbuotojai"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_darbuotojai_subgrupese", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_darbuotojai_subgrupese.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_darbuotojai_subgrupese.sql", "unique_id": "model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_darbuotojai_subgrupese"], "alias": "stg_ee_darbuotojai_subgrupese", "checksum": {"name": "sha256", "checksum": "ac20ba83de12f88922153a724a95291e10431ebaa3c882ce4d62bc339422da68"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.864302, "relation_name": null, "raw_code": "WITH v_darbuotojai_subgrupese AS (\r\n  SELECT user_id,\r\n         subgrupe_id,\r\n         \"DEFAULT\" as default_\r\n  FROM {{ source('bdh_ee_sales_tool', 'darbuotojai_subgrupese') }}\r\n)\r\n\r\nSELECT user_id,\r\n       subgrupe_id,\r\n       default_\r\nFROM v_darbuotojai_subgrupese", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "darbuotojai_subgrupese"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai_subgrupese"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_doc_status_description": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_doc_status_description", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_doc_status_description.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_doc_status_description.sql", "unique_id": "model.bdh_dbt_models.stg_ee_doc_status_description", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_doc_status_description"], "alias": "stg_ee_doc_status_description", "checksum": {"name": "sha256", "checksum": "b2a67e438a1f93532cfe631e5769f2f6e4df70e8bc82f127d88568faba3d472e"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8673065, "relation_name": null, "raw_code": "WITH v_doc_status_description AS (\r\n  SELECT status,\r\n         doc_type\r\n  FROM {{ source('bdh_ee_sales_tool', 'doc_status_description') }}\r\n)\r\n\r\nSELECT status,\r\n       doc_type\r\nFROM v_doc_status_description", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "doc_status_description"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.doc_status_description"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_mokejimo_planai": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_mokejimo_planai", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_mokejimo_planai.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_mokejimo_planai.sql", "unique_id": "model.bdh_dbt_models.stg_ee_mokejimo_planai", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_mokejimo_planai"], "alias": "stg_ee_mokejimo_planai", "checksum": {"name": "sha256", "checksum": "ae5af0d02cbf8b3c26ac14a53ae4b84ae8e902f649592384e8e06815f48cf897"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8703117, "relation_name": null, "raw_code": "WITH v_mokejimo_planai AS (\r\n  SELECT id,\r\n         tariff_id\r\n  FROM {{ source('bdh_ee_sales_tool', 'mokejimo_planai') }}\r\n)\r\n\r\nSELECT id,\r\n       tariff_id\r\nFROM v_mokejimo_planai", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "mokejimo_planai"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_mokejimo_planai_tariff_all", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_mokejimo_planai_tariff_all.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_mokejimo_planai_tariff_all.sql", "unique_id": "model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_mokejimo_planai_tariff_all"], "alias": "stg_ee_mokejimo_planai_tariff_all", "checksum": {"name": "sha256", "checksum": "1bffe72c81b48abaf34db55ef5e9317ae070f82a1e1ce8c1e35a2e0229e136ef"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8733015, "relation_name": null, "raw_code": "WITH v_mokejimo_planai_tariff_all AS (\r\n\r\n  SELECT id,\r\n         macpoc_code\r\n  FROM {{ source('bdh_ee_sales_tool', 'mokejimo_planai_tariff_all') }}\r\n)\r\n\r\nSELECT id,\r\n       macpoc_code\r\nFROM v_mokejimo_planai_tariff_all", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "mokejimo_planai_tariff_all"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_s12_msisdn": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_s12_msisdn", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_s12_msisdn.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_s12_msisdn.sql", "unique_id": "model.bdh_dbt_models.stg_ee_s12_msisdn", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_s12_msisdn"], "alias": "stg_ee_s12_msisdn", "checksum": {"name": "sha256", "checksum": "ed308329e979d195a1de88ab9504b36e017771fa7dcce08609a1b13c9c020138"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8763044, "relation_name": null, "raw_code": "WITH v_s12_msisdn AS (\r\n  SELECT '372' || msisdn AS msisdn,\r\n         priedo_id,\r\n         netesybu_priezastis\r\n  FROM {{ source('bdh_ee_sales_tool', 's12_msisdn') }}\r\n)\r\n\r\nSELECT msisdn,\r\n       priedo_id,\r\n       netesybu_priezastis\r\nFROM v_s12_msisdn", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "s12_msisdn"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_s12_priedai": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_s12_priedai", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_s12_priedai.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_s12_priedai.sql", "unique_id": "model.bdh_dbt_models.stg_ee_s12_priedai", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_s12_priedai"], "alias": "stg_ee_s12_priedai", "checksum": {"name": "sha256", "checksum": "7d46fe722a7bd750b0ab53073b80763c272ba558b576a37943d41a0bea2799f3"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.878302, "relation_name": null, "raw_code": "WITH v_s12_priedai AS (\r\n  SELECT id,\r\n         account_no,\r\n         keitimo_data,\r\n         dokumento_bukle\r\n  FROM {{ source('bdh_ee_sales_tool', 's12_priedai') }}\r\n)\r\n\r\nSELECT id,\r\n       account_no,\r\n       keitimo_data,\r\n       dokumento_bukle\r\nFROM v_s12_priedai", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "s12_priedai"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_subgrupes": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_subgrupes", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_subgrupes.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_sales_tool\\stg_ee_subgrupes.sql", "unique_id": "model.bdh_dbt_models.stg_ee_subgrupes", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_sales_tool", "stg_ee_subgrupes"], "alias": "stg_ee_subgrupes", "checksum": {"name": "sha256", "checksum": "e10e886e41aca1305858591e3373083dbe8c9fcd43ac0aac6064f353191b8623"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8803017, "relation_name": null, "raw_code": "WITH v_subgrupes AS (\r\n  SELECT id,\r\n         shop,\r\n         vietos_nr,\r\n         aktyvus,\r\n         dileris,\r\n         workplace_code,\r\n         centro_pavadinimas,\r\n         shop_address\r\n  FROM {{ source('bdh_ee_sales_tool', 'subgrupes') }}\r\n)\r\n\r\nSELECT id,\r\n       shop,\r\n       vietos_nr,\r\n       aktyvus,\r\n       dileris,\r\n       workplace_code,\r\n       centro_pavadinimas,\r\n       shop_address\r\nFROM v_subgrupes", "language": "sql", "refs": [], "sources": [["bdh_ee_sales_tool", "subgrupes"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_sales_tool.subgrupes"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_accounts": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_accounts", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_accounts.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_accounts.sql", "unique_id": "model.bdh_dbt_models.stg_ee_accounts", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_accounts"], "alias": "stg_ee_accounts", "checksum": {"name": "sha256", "checksum": "c27e5555350ef1bbf1db5caedf4bf5be22b1861f2944a62e079b89d5595862e2"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8813055, "relation_name": null, "raw_code": "WITH v_accounts AS (\r\n  SELECT row_id,\r\n  ou_num AS cust_id,\r\n  account_id,\r\n  accnt_type_cd,\r\n  pr_addr_id,\r\n  pr_con_id,\r\n  ou_type_cd,\r\n  x_soc_sec_num,\r\n  substring(x_soc_sec_num, 1, 7) x_soc_sec_num_0_7,\r\n  name,\r\n  CASE WHEN good_standing_flg = 'Y' THEN 0 ELSE 1\r\n    END AS sub_bad_debt,\r\n  CASE WHEN ou_type_cd = 'Business' THEN 'BUSINESS' ELSE 'POSTPAID'\r\n    END AS sub_type,\r\n  manager,\r\n  cust_stat_cd,\r\n  cust_since_dt,\r\n  master_ou_id,\r\n  created\r\n  FROM {{ source('bdh_ee_siebel', 'accounts') }}\r\n )\r\n\r\nSELECT row_id,\r\n       cust_id,\r\n       account_id,\r\n       accnt_type_cd,\r\n       pr_addr_id,\r\n       pr_con_id,\r\n       ou_type_cd,\r\n       x_soc_sec_num,\r\n       x_soc_sec_num_0_7,\r\n       name,\r\n       sub_bad_debt,\r\n       sub_type,\r\n       manager,\r\n       cust_stat_cd,\r\n       cust_since_dt,\r\n       master_ou_id,\r\n       created\r\nFROM v_accounts", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "accounts"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.accounts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_accounts_x": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_accounts_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_accounts_x.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_accounts_x.sql", "unique_id": "model.bdh_dbt_models.stg_ee_accounts_x", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_accounts_x"], "alias": "stg_ee_accounts_x", "checksum": {"name": "sha256", "checksum": "686ff1c65f71f96271e0ffcfa70e1527d20a9dc7c093fd8be0bda06d2127d659"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8833013, "relation_name": null, "raw_code": "WITH v_accounts_x AS (\r\n  SELECT row_id,\r\n         par_row_id,\r\n         attrib_35\r\n  FROM {{ source('bdh_ee_siebel', 'accounts_x') }}\r\n )\r\n\r\nSELECT row_id,\r\n       par_row_id,\r\n       attrib_35\r\nFROM v_accounts_x", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "accounts_x"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.accounts_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_address": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_address", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_address.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_address.sql", "unique_id": "model.bdh_dbt_models.stg_ee_address", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_address"], "alias": "stg_ee_address", "checksum": {"name": "sha256", "checksum": "f54a013f0c55613e4d2db19a08e394c88f993b47b91fdc6b918d6b5adc39175c"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8853016, "relation_name": null, "raw_code": "WITH v_address AS (\r\n  SELECT row_id,\r\n         zipcode,\r\n         substring(zipcode, 1, 4) as zipcode_subdiv,\r\n         county,\r\n         city,\r\n         addr\r\n  FROM {{ source('bdh_ee_siebel', 'address') }}\r\n )\r\n\r\nSELECT row_id,\r\n       zipcode,\r\n       zipcode_subdiv,\r\n       county,\r\n       city,\r\n       addr\r\nFROM v_address", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "address"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.address"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_assets": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_assets", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_assets.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_assets.sql", "unique_id": "model.bdh_dbt_models.stg_ee_assets", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_assets"], "alias": "stg_ee_assets", "checksum": {"name": "sha256", "checksum": "be9bcfb2afcbbb8b2988007ecb3a4e940624a7fd0bbf2345c2f70defb5833ef6"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8873012, "relation_name": null, "raw_code": "WITH v_assets AS (\r\n  SELECT row_id,\r\n  asset_num,\r\n  x_activation_dt,\r\n  end_dt,\r\n  integration_id,\r\n  status_cd,\r\n  x_price_plan_code,\r\n  x_primary_attr_value,\r\n  prod_id,\r\n  owner_con_id,\r\n  bill_accnt_id,\r\n  last_upd,\r\n  x_primary_attr_name,\r\n  x_t2_product_end_date,\r\n  owner_accnt_id,\r\n  promotion_id,\r\n  par_asset_id,\r\n  root_asset_id,\r\n  x_wsc_admin_flg,\r\n  created\r\n  FROM {{ source('bdh_ee_siebel', 'assets') }}\r\n )\r\n\r\nSELECT row_id,\r\n  asset_num,\r\n  x_activation_dt,\r\n  end_dt,\r\n  integration_id,\r\n  status_cd,\r\n  x_price_plan_code,\r\n  x_primary_attr_value,\r\n  prod_id,\r\n  owner_con_id,\r\n  bill_accnt_id,\r\n  last_upd,\r\n  x_primary_attr_name,\r\n  x_t2_product_end_date,\r\n  owner_accnt_id,\r\n  promotion_id,\r\n  par_asset_id,\r\n  root_asset_id,\r\n  x_wsc_admin_flg,\r\n  created\r\nFROM v_assets", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "assets"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_assets_x": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_assets_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_assets_x.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_assets_x.sql", "unique_id": "model.bdh_dbt_models.stg_ee_assets_x", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_assets_x"], "alias": "stg_ee_assets_x", "checksum": {"name": "sha256", "checksum": "bf03453d7cac614ff1f60bb6dc67667692e1180d037380dfdcf06746c0ebb3c0"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8883011, "relation_name": null, "raw_code": "WITH v_assets_x AS (\r\n  SELECT row_id,\r\n  attrib_31,\r\n  attrib_32,\r\n  attrib_03,\r\n  attrib_26,\r\n  attrib_27\r\n  FROM {{ source('bdh_ee_siebel', 'assets_x') }}\r\n )\r\n\r\nSELECT row_id,\r\n       attrib_31,\r\n       attrib_32,\r\n       attrib_03,\r\n       attrib_26,\r\n       attrib_27\r\nFROM v_assets_x", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "assets_x"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.assets_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_assets_xa": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_assets_xa", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_assets_xa.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_assets_xa.sql", "unique_id": "model.bdh_dbt_models.stg_ee_assets_xa", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_assets_xa"], "alias": "stg_ee_assets_xa", "checksum": {"name": "sha256", "checksum": "56aed9bb3d3ce801445e8aa7d507e901ece5974ef2a3ab266db232baba389ef5"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8902996, "relation_name": null, "raw_code": "WITH v_assets_xa AS (\r\n  SELECT *\r\n  FROM {{ source('bdh_ee_siebel', 'assets_xa') }}\r\n)\r\n\r\nSELECT *\r\nFROM v_assets_xa", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "assets_xa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.assets_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_blacklist": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_blacklist", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_blacklist.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_blacklist.sql", "unique_id": "model.bdh_dbt_models.stg_ee_blacklist", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_blacklist"], "alias": "stg_ee_blacklist", "checksum": {"name": "sha256", "checksum": "98aac09d68784ef424d6d814129355a5c396f362d7b4a9bc187cda0e218339c1"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.892307, "relation_name": null, "raw_code": "WITH v_blacklist AS (\r\n  SELECT DISTINCT account_id,\r\n                  asset_id\r\n  FROM {{ source('bdh_ee_siebel', 'cx_nt_acc_pref') }}\r\n  WHERE value = 'No'\r\n )\r\n \r\nSELECT *\r\nFROM v_blacklist", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "cx_nt_acc_pref"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_contact": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_contact", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_contact.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_contact.sql", "unique_id": "model.bdh_dbt_models.stg_ee_contact", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_contact"], "alias": "stg_ee_contact", "checksum": {"name": "sha256", "checksum": "1310e25f97d131519057c775cc8b3979253dac9e6029abe162dbef49e7fdf472"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.893304, "relation_name": null, "raw_code": "WITH v_contact AS (\r\n  SELECT row_id,\r\n         email_addr AS sub_email,\r\n         fst_name,\r\n         last_name,\r\n         x_primary_phone_num\r\n  FROM {{ source('bdh_ee_siebel', 'contact') }}\r\n )\r\n\r\nSELECT row_id,\r\n       sub_email,\r\n       fst_name,\r\n       last_name,\r\n       x_primary_phone_num\r\nFROM v_contact", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "contact"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_logs": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_logs", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_logs.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_logs.sql", "unique_id": "model.bdh_dbt_models.stg_ee_logs", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_logs"], "alias": "stg_ee_logs", "checksum": {"name": "sha256", "checksum": "792fd005fe12da4fe5339548b92b8c0df0f80523ce0417186337ce613c656d39"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8953018, "relation_name": null, "raw_code": "WITH v_logs AS (\r\n  SELECT primary_attr_value,\r\n         CAST(created AS STRING) AS visit_time,\r\n         SUBSTRING(CAST(created AS STRING), 1, 10) AS visit_date,\r\n         asset_id,\r\n         division\r\n  FROM {{ source('bdh_ee_siebel', 'logs') }}\r\n )\r\n\r\nSELECT primary_attr_value,\r\n       visit_time,\r\n       visit_date,\r\n       asset_id,\r\n       division\r\nFROM v_logs", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "logs"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.logs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_orders": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_orders", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_orders.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_orders.sql", "unique_id": "model.bdh_dbt_models.stg_ee_orders", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_orders"], "alias": "stg_ee_orders", "checksum": {"name": "sha256", "checksum": "22997d9d05f6a4c3ef10d5c118c5b77175e4e77f5595caac9d861148a923e729"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8973982, "relation_name": null, "raw_code": "WITH v_orders AS (\r\n  SELECT row_id\r\n  FROM {{ source('bdh_ee_siebel', 'orders') }}\r\n )\r\n\r\nSELECT row_id\r\nFROM v_orders", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "orders"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.orders"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_order_items_xa": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_order_items_xa", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_order_items_xa.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_order_items_xa.sql", "unique_id": "model.bdh_dbt_models.stg_ee_order_items_xa", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_order_items_xa"], "alias": "stg_ee_order_items_xa", "checksum": {"name": "sha256", "checksum": "4f2338bd27e83e18520183ccd48cd14d52d3b932b0d91e46428d030d4c496168"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.8984118, "relation_name": null, "raw_code": "WITH v_order_items_xa AS (\r\n  SELECT orderitemid,\r\n         attributename,\r\n         charvalue\r\n  FROM {{ source('bdh_ee_siebel', 'order_items_xa') }}\r\n )\r\n\r\nSELECT orderitemid,\r\n       attributename,\r\n       charvalue\r\nFROM v_order_items_xa", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "order_items_xa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.order_items_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_order_line_items": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_order_line_items", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_order_line_items.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_order_line_items.sql", "unique_id": "model.bdh_dbt_models.stg_ee_order_line_items", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_order_line_items"], "alias": "stg_ee_order_line_items", "checksum": {"name": "sha256", "checksum": "354bf4a6ae2a045f6df827db5c7bf74a5c361d2fa5e99532efa85c9ae28ef16b"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.9004107, "relation_name": null, "raw_code": "WITH v_order_line_items AS (\r\n  SELECT row_id,\r\n         order_id,\r\n         asset_integ_id,\r\n         action_cd,\r\n         base_unit_pri,\r\n         x_promotion_end_date,\r\n         last_upd\r\n  FROM {{ source('bdh_ee_siebel', 'order_line_items') }}\r\n )\r\n\r\nSELECT row_id,\r\n       order_id,\r\n       asset_integ_id,\r\n       action_cd,\r\n       base_unit_pri,\r\n       x_promotion_end_date,\r\n       last_upd\r\nFROM v_order_line_items", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "order_line_items"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.order_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_port_in_out": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_port_in_out", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_port_in_out.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_port_in_out.sql", "unique_id": "model.bdh_dbt_models.stg_ee_port_in_out", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_port_in_out"], "alias": "stg_ee_port_in_out", "checksum": {"name": "sha256", "checksum": "20f0fdabc5e9338a07e087d2d698eea982191d7eaa0d08f137110645c4dbdf04"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.9024103, "relation_name": null, "raw_code": "WITH v_port_in_out AS (\r\n  SELECT asset_integ_id,\r\n         x_action_type \r\n  FROM {{ source('bdh_ee_siebel', 'order_line_items') }}\r\n )\r\n \r\nSELECT *\r\nFROM v_port_in_out", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "order_line_items"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.order_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_product": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_product", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_product.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_siebel\\stg_ee_product.sql", "unique_id": "model.bdh_dbt_models.stg_ee_product", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_siebel", "stg_ee_product"], "alias": "stg_ee_product", "checksum": {"name": "sha256", "checksum": "a9826dc62f2ed4bbe34427360b931a94197b6514434f11916c1daf3da0137e31"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.9034111, "relation_name": null, "raw_code": "WITH v_product AS (\r\n  SELECT row_id,\r\n         type,\r\n         name\r\n  FROM {{ source('bdh_ee_siebel', 'product') }}\r\n)\r\n\r\nSELECT row_id,\r\n       type,\r\n       name\r\nFROM v_product", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "product"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_ee_payments_history": {"database": "bdh_ee", "schema": "test", "name": "stg_ee_payments_history", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_ee\\ee_customer_360_profile\\staging\\ee_singleview\\stg_ee_payments_history.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\staging\\ee_singleview\\stg_ee_payments_history.sql", "unique_id": "model.bdh_dbt_models.stg_ee_payments_history", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "staging", "ee_singleview", "stg_ee_payments_history"], "alias": "stg_ee_payments_history", "checksum": {"name": "sha256", "checksum": "c5f22c269491fa8f0cb0e8d9bb021502a6e06b5e5af37da97f744d2f76ad9d10"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_ee", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_EE_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_EE_WH", "materialized": "ephemeral", "database": "bdh_ee", "schema": "test"}, "created_at": 1718885160.9054227, "relation_name": null, "raw_code": "WITH v_payments_history AS (\r\n  SELECT account_name,\r\n         substr_rc_abbreviation_4_,\r\n         CAST(CONVERT_TIMEZONE('Europe/Stockholm', 'UTC', CAST(payment_date AS TIMESTAMP)) AS TEXT) AS payment_date,\r\n         amount,\r\n         SUBSTRING(\r\n             CAST(CONVERT_TIMEZONE('Europe/Stockholm', 'UTC', CAST(payment_date AS TIMESTAMP)) AS TEXT),\r\n             1,\r\n             10\r\n         ) AS dt\r\n  FROM {{ source('bdh_ee_singleview', 'payments_history') }}\r\n )\r\n\r\nSELECT account_name,\r\n       substr_rc_abbreviation_4_,\r\n       payment_date,\r\n       amount,\r\n       dt\r\nFROM v_payments_history", "language": "sql", "refs": [], "sources": [["bdh_ee_singleview", "payments_history"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_singleview.payments_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_discounts": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_discounts", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\intermediate\\int_discounts.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\intermediate\\int_discounts.sql", "unique_id": "model.bdh_dbt_models.int_discounts", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "intermediate", "int_discounts"], "alias": "int_discounts", "checksum": {"name": "sha256", "checksum": "a8fb1d1c2f793a321632341564adbe1697ec62031d30ae227287108455fce35b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.907422, "relation_name": null, "raw_code": "with stg_discounts as (select * from {{ ref(\"stg_v_assets_xa\") }})\r\n\r\nselect\r\nasset_id,\r\nMAX(\r\n        CASE \r\n            WHEN attr_name = 'Discount Value' THEN ROUND(\r\n                CAST(COALESCE(NULLIF(REPLACE(char_val, ',', '.'), ''), '0') AS DOUBLE) + \r\n                (CAST(COALESCE(NULLIF(REPLACE(char_val, ',', '.'), ''), '0') AS DOUBLE) * 0.21), 2)\r\n            ELSE 0.0 \r\n        END\r\n    ) AS discount_value,\r\nMAX(\r\n    CASE WHEN attr_name = 'DurationEndDate' THEN date_val ELSE '' END\r\n    ) AS discount_end_date\r\nfrom stg_discounts\r\nwhere (attr_name in ('DurationEndDate', 'Discount Value'))\r\ngroup by asset_id", "language": "sql", "refs": [{"name": "stg_v_assets_xa", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_v_assets_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.products_in_siebel": {"database": "bdh_lt", "schema": "siebel", "name": "products_in_siebel", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\marts\\products_in_siebel.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\marts\\products_in_siebel.sql", "unique_id": "model.bdh_dbt_models.products_in_siebel", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "marts", "products_in_siebel"], "alias": "demo_product_check_in_siebel", "checksum": {"name": "sha256", "checksum": "16bf508fb58d36e46b85660d1a2863b6d1bb2564842672311b2452483e5884b5"}, "config": {"enabled": true, "alias": "demo_product_check_in_siebel", "schema": "siebel", "database": "bdh_lt", "tags": ["demo_siebel", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANFSORM_LV_WH"}, "tags": ["demo_siebel", "test"], "description": "view based on raw files received from demo source", "columns": {"ou_num": {"name": "ou_num", "description": "Description for ou_num", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bill_accnt_id": {"name": "bill_accnt_id", "description": "Description for bill_accnt_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sa_x_primary_attr_value_phonenbr": {"name": "sa_x_primary_attr_value_phonenbr", "description": "Description for sa_x_primary_attr_value_phonenbr", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sa2_x_primary_attr_value_phonenbr": {"name": "sa2_x_primary_attr_value_phonenbr", "description": "Description for sa2_x_primary_attr_value_phonenbr", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sa_x_primary_attr_name": {"name": "sa_x_primary_attr_name", "description": "Description for sa_x_primary_attr_name", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sa2_x_primary_attr_name": {"name": "sa2_x_primary_attr_name", "description": "Description for sa2_x_primary_attr_name", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "asset_id": {"name": "asset_id", "description": "Description for asset_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sa2_row_id": {"name": "sa2_row_id", "description": "Description for sa2_row_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "last_upd": {"name": "last_upd", "description": "Description for last_upd", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "ou_type_cd": {"name": "ou_type_cd", "description": "Description for ou_type_cd", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "cd": {"name": "cd", "description": "Description for cd", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "status_cd": {"name": "status_cd", "description": "Description for status_cd", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "root_asset_id": {"name": "root_asset_id", "description": "Description for root_asset_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "Description for row_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "Description for type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "Description for name", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "x_package_code": {"name": "x_package_code", "description": "Description for x_package_code", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "x_activation_dt": {"name": "x_activation_dt", "description": "Description for x_activation_dt", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "attrib_31": {"name": "attrib_31", "description": "Description for attrib_31", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "attrib_32": {"name": "attrib_32", "description": "Description for attrib_32", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "suspended_start": {"name": "suspended_start", "description": "Description for suspended_start", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "suspended_end": {"name": "suspended_end", "description": "Description for suspended_end", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "end_dt": {"name": "end_dt", "description": "Description for end_dt", "meta": {}, "data_type": "timestamp_ntz", "constraints": [], "quote": null, "tags": []}, "discount_value": {"name": "discount_value", "description": "Description for discount_value", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "discount_end_date": {"name": "discount_end_date", "description": "Description for discount_end_date", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "disc_services_rn": {"name": "disc_services_rn", "description": "Description for disc_services_rn", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "disc_total_bill_rn": {"name": "disc_total_bill_rn", "description": "Description for disc_total_bill_rn", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_lt\\demo_siebel\\products_in_siebel.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANFSORM_LV_WH", "materialized": "table", "database": "bdh_lt", "schema": "siebel", "enabled": true, "tags": ["demo_siebel", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "alias": "demo_product_check_in_siebel"}, "created_at": 1718885161.8587215, "relation_name": "bdh_lt.siebel.demo_product_check_in_siebel", "raw_code": "{{ config(\r\n    enabled=true,\r\n    alias='demo_product_check_in_siebel',\r\n    materialized='table'\r\n) }}\r\n\r\n{% set lt_execution_date = var('lt_execution_date', 'current_date()') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_v_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_v_accounts\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_v_product\") }}),\r\n\r\nv_assets_x as (select * from {{ ref(\"stg_v_assets_x\") }}),\r\n\r\nint_discounts as (select * from {{ ref(\"int_discounts\") }})\r\n\r\nselect \r\nac.ou_num,\r\nsa.bill_accnt_id,\r\nsa.x_primary_attr_value_phonenbr as sa_x_primary_attr_value_phonenbr,\r\nsa2.x_primary_attr_value_phonenbr as sa2_x_primary_attr_value_phonenbr,\r\nsa.x_primary_attr_name as sa_x_primary_attr_name,\r\nsa2.x_primary_attr_name as sa2_x_primary_attr_name,\r\nsa.row_id    AS asset_id,\r\nsa2.row_id as sa2_row_id,\r\nsa.last_upd,\r\nac.ou_type_cd,\r\nsa.status_cd AS cd,\r\nsa2.status_cd,\r\nsa.root_asset_id,\r\nprice.row_id, -- =sa.prod_id\r\nprice.type,\r\nprice.name,\r\nsa.x_package_code,\r\nsa.x_activation_dt,\r\nax.attrib_31,\r\nax.attrib_32,\r\nax.suspended_start,\r\nax.suspended_end,\r\nsa.end_dt,\r\ndiscounts.discount_value,\r\ndiscounts.discount_end_date,\r\nrow_number() OVER (PARTITION BY sa2.x_primary_attr_value_phonenbr, CASE WHEN price.type='Billing Product'\r\n                                          AND price.name IN ('Discount on subscription from services') THEN 1 ELSE 0 END\r\n                                          ORDER BY sa.x_activation_dt DESC) AS disc_services_rn,\r\n        row_number() OVER (PARTITION BY sa2.x_primary_attr_value_phonenbr, CASE WHEN price.type='Billing Product'\r\n                                          AND price.name IN ('Discount on subscription from total bill') THEN 1 ELSE 0 END\r\n                                          ORDER BY sa.x_activation_dt DESC) AS disc_total_bill_rn,\r\n{{ lt_execution_date }} as lt_execution_date\r\nfrom v_assets sa\r\nleft join v_accounts ac on ac.row_id = sa.bill_accnt_id\r\nleft join v_assets sa2 on sa.par_asset_id = sa2.row_id\r\nleft join v_product price on sa.prod_id = price.row_id\r\nleft join v_assets_x ax on sa.row_id = ax.row_id\r\nleft join int_discounts discounts on sa.row_id = discounts.asset_id\r\nwhere\r\n    (sa2.x_primary_attr_value_phonenbr =  '37063237313' --'AAEBfn6Qf7VeD0jwg+jB8lY8W99zyf0='\r\n      or sa.x_primary_attr_value_phonenbr = '37063237313' --'AAEBfn6Qf7VeD0jwg+jB8lY8W99zyf0='\r\n    )", "language": "sql", "refs": [{"name": "stg_v_assets", "package": null, "version": null}, {"name": "stg_v_accounts", "package": null, "version": null}, {"name": "stg_v_product", "package": null, "version": null}, {"name": "stg_v_assets_x", "package": null, "version": null}, {"name": "int_discounts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_v_assets", "model.bdh_dbt_models.stg_v_accounts", "model.bdh_dbt_models.stg_v_product", "model.bdh_dbt_models.stg_v_assets_x", "model.bdh_dbt_models.int_discounts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_v_accounts": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_v_accounts", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\staging\\stg_v_accounts.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\staging\\stg_v_accounts.sql", "unique_id": "model.bdh_dbt_models.stg_v_accounts", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "staging", "stg_v_accounts"], "alias": "stg_v_accounts", "checksum": {"name": "sha256", "checksum": "7181bc5d3a19f4e0db2a584094f28f0d92d3198c3e12bd5ba5b15397f4214ffe"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9154267, "relation_name": null, "raw_code": "with v_accounts as (select * from {{ source('bdh_lt_siebel', 'v_accounts') }})\r\n\r\nselect\r\nrow_id,\r\nou_type_cd,\r\nou_num\r\nfrom v_accounts", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_accounts"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_v_assets": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_v_assets", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\staging\\stg_v_assets.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\staging\\stg_v_assets.sql", "unique_id": "model.bdh_dbt_models.stg_v_assets", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "staging", "stg_v_assets"], "alias": "stg_v_assets", "checksum": {"name": "sha256", "checksum": "7e0b262580a4c10a64f43b5e5d55d1cc12e76f9bf8d181f9654e0e897d39f46a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9164226, "relation_name": null, "raw_code": "with v_assets as (select * from {{ source('bdh_lt_siebel', 'v_assets') }})\r\n\r\nselect \r\nbill_accnt_id,\r\ncase when x_primary_attr_name = 'Postpaid TN' then x_primary_attr_value else null end as x_primary_attr_value_phonenbr,\r\nx_primary_attr_name,\r\nrow_id,\r\nlast_upd,\r\nstatus_cd,\r\nroot_asset_id,\r\nx_package_code,\r\nx_activation_dt,\r\nend_dt,\r\npar_asset_id,\r\nprod_id\r\nfrom v_assets", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_v_assets_x": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_v_assets_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\staging\\stg_v_assets_x.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\staging\\stg_v_assets_x.sql", "unique_id": "model.bdh_dbt_models.stg_v_assets_x", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "staging", "stg_v_assets_x"], "alias": "stg_v_assets_x", "checksum": {"name": "sha256", "checksum": "82f2a323a60d314e03f0ed2ad7b7f84391cbf69b978ccaa4204355f93c7adaeb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9184194, "relation_name": null, "raw_code": "with v_assets_x as (select * from {{ source('bdh_lt_siebel', 'v_assets_x') }})\r\n\r\nselect\r\nrow_id,\r\nattrib_31,\r\nattrib_32,\r\nattrib_26 as suspended_start,\r\nattrib_27 as suspended_end\r\nfrom v_assets_x", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets_x"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_v_assets_xa": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_v_assets_xa", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\staging\\stg_v_assets_xa.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\staging\\stg_v_assets_xa.sql", "unique_id": "model.bdh_dbt_models.stg_v_assets_xa", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "staging", "stg_v_assets_xa"], "alias": "stg_v_assets_xa", "checksum": {"name": "sha256", "checksum": "bf268da2025da77a37930803b1bbb5ceb2f4df516735d96abed8a9878d333eb2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.92095, "relation_name": null, "raw_code": "with v_assets_xa as (select * from {{ source('bdh_lt_siebel', 'v_assets_xa') }})\r\n\r\nselect\r\nasset_id,\r\nattr_name,\r\nchar_val,\r\ndate_val\r\nfrom v_assets_xa\r\nwhere attr_name in ('DurationEndDate', 'Discount Value')", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets_xa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_v_product": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_v_product", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\demo_siebel\\staging\\stg_v_product.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\staging\\stg_v_product.sql", "unique_id": "model.bdh_dbt_models.stg_v_product", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "staging", "stg_v_product"], "alias": "stg_v_product", "checksum": {"name": "sha256", "checksum": "c4d77648e7ce8c3a5ddbc7acafefc9af3444b8a57c8ff38e0611aec5d5f67f28"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9229462, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n{% set lt_execution_date_obj = modules.datetime.datetime.strptime(lt_execution_date, '%Y-%m-%d') %}\r\n{% set lt_execution_90_days_ago = (lt_execution_date_obj - modules.datetime.timedelta(days=90)).strftime('%Y-%m-%d') %}\r\n\r\nwith v_product as (select * from {{ source('bdh_lt_siebel', 'v_product') }})\r\n\r\nselect\r\nrow_id,\r\ntype,\r\nname,\r\n'{{ lt_execution_date }}' as lt_execution_date,\r\n'{{ lt_execution_90_days_ago }}' as lt_execution_90_days_ago \r\nfrom v_product", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_product"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_asset_ids_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_asset_ids_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_asset_ids_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_asset_ids_bus.sql", "unique_id": "model.bdh_dbt_models.int_asset_ids_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_asset_ids_bus"], "alias": "int_asset_ids_bus", "checksum": {"name": "sha256", "checksum": "4e8ed5fab93827df87fb9b0a14d460e08f9ed492ac02bd0df4459f32e266664a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9309475, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nasset_ids as (\r\n    SELECT \r\n        row_id,\r\n        sub_msisdn,\r\n        owner_con_id,\r\n        bill_accnt_id,\r\n        sub_acquisition_date,\r\n        prod_id,\r\n        x_package_code,\r\n        sub_deactivation_date,\r\n        sub_status_original\r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            sub_msisdn,\r\n            owner_con_id,\r\n            bill_accnt_id,\r\n            sub_acquisition_date,\r\n            prod_id,\r\n            x_package_code,\r\n            row_number() OVER(PARTITION BY sub_msisdn, sub_acquisition_date ORDER BY last_upd DESC) AS rn,\r\n            CASE WHEN end_dt IS NOT NULL THEN to_date(end_dt)\r\n                    ELSE '9999-01-01' \r\n                    END AS sub_deactivation_date,\r\n            sub_status_original\r\n        FROM (\r\n            SELECT \r\n                row_id,\r\n                x_primary_attr_value_phonenbr AS sub_msisdn,\r\n                to_date(x_activation_dt) as sub_acquisition_date,\r\n                last_upd,\r\n                owner_con_id,\r\n                bill_accnt_id,\r\n                end_dt,\r\n                prod_id,\r\n                x_package_code,\r\n                status_cd AS sub_status_original\r\n            FROM v_assets\r\n            WHERE x_primary_attr_name = 'Postpaid TN'\r\n                            AND to_date(x_activation_dt) <= '{{lt_execution_date}}'\r\n                            AND x_activation_dt IS NOT NULL\r\n            ) a\r\n        ) a\r\n    WHERE rn = 1\r\n)\r\n\r\nSELECT \r\n    row_id,\r\n    sub_msisdn,\r\n    owner_con_id,\r\n    bill_accnt_id,\r\n    sub_acquisition_date,\r\n    prod_id,\r\n    x_package_code,\r\n    sub_deactivation_date,\r\n    sub_status_original\r\nFROM asset_ids", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_outbound_bar_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_outbound_bar_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_outbound_bar_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_outbound_bar_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_outbound_bar_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_outbound_bar_bus"], "alias": "int_lt_outbound_bar_bus", "checksum": {"name": "sha256", "checksum": "9ac6aa651fdcc33e76003ac403446b2b85daf3a04e79e8b356c9823e0deac4df"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9359474, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_billing_profile as (select * from {{ ref(\"stg_tmp_billing_profile\") }}),\r\n\r\noutbound_bar as (\r\n    SELECT \r\n        cnh.primary_identifier AS account_no,\r\n        1 AS outbound_bar_flag\r\n    FROM bdh_lt.singleview.customer_node_history_cdl cnh\r\n    INNER JOIN v_accounts va \r\n    ON va.ou_num=cnh.primary_identifier\r\n    INNER JOIN v_billing_profile bill \r\n    ON va.row_id= bill.accnt_id\r\n    INNER JOIN bdh_lt.singleview.XPSI_TRT_REVOKE_cdl trt \r\n    ON trt.cq_customer_node_id=cnh.customer_node_id\r\n    INNER JOIN bdh_lt.singleview.customer_query_cdl cq \r\n    ON cq.customer_query_id=trt.cq_customer_query_id\r\n    INNER JOIN bdh_lt.singleview.derived_attribute_array_cdl daa \r\n    ON daa.derived_attribute_id=95005457\r\n        AND daa.index2_value=trt.cq_general_2\r\n        AND daa.index3_value='1'\r\n    INNER JOIN bdh_lt.singleview.reference_code_cdl rc3\r\n    ON rc3.reference_code = cq.query_status_code\r\n        AND rc3.reference_type_id=418\r\n    WHERE '{{lt_execution_date}}' >= cnh.effective_start_date\r\n        -- AND '{{lt_execution_date}}' < cnh.effective_end_date --kai bus atsinaujinan\u010dios lenteles nuimti ir pasi\u017eiur\u0117t ar yra \u012fra\u0161\u0173\r\n        AND daa.result2_value ='Outbound Bar'\r\n        AND (CASE\r\n                WHEN cq.close_date IS NOT NULL THEN trt.effective_date != cq.close_date\r\n                ELSE 1=1\r\n            END)\r\n        AND rc3.abbreviation <> 'Closed'\r\n    GROUP BY 1  \r\n)  \r\n\r\nSELECT \r\n    account_no,\r\n    outbound_bar_flag\r\nFROM outbound_bar", "language": "sql", "refs": [{"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_billing_profile", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_billing_profile"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_product_price_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_product_price_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_product_price_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_product_price_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_product_price_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_product_price_bus"], "alias": "int_lt_product_price_bus", "checksum": {"name": "sha256", "checksum": "97fe1bb4414c7ec103a8f0301c79836bd1470d6c401046e075b138bf46cb7f8f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.941946, "relation_name": null, "raw_code": "with v_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nproduct_price as (\r\n    SELECT \r\n        pr.row_id,\r\n        pr.type,\r\n        pr.name,\r\n        CASE\r\n            WHEN pr.type='Billing Product'\r\n                AND lower(pr.name) NOT LIKE '%sms%' THEN '0'\r\n            ELSE prc.pricing\r\n        END AS pricing\r\n    FROM v_product pr\r\n    LEFT JOIN\r\n        (SELECT DISTINCT sbl_rowid,\r\n                        pricing\r\n        FROM bdh_lt.traffica.sbl_product_configuration_cdl\r\n        WHERE uom='Per Month' \r\n        ) prc \r\n        ON pr.row_id=prc.sbl_rowid\r\n    WHERE pr.type IN ('Price Plan',\r\n                        'Data Bucket',\r\n                        'Billing Product' )\r\n)\r\n\r\nSELECT \r\n    row_id,\r\n    type,\r\n    name,\r\n    pricing\r\nFROM product_price", "language": "sql", "refs": [{"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_subscriber_snapshot_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_subscriber_snapshot_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_subscriber_snapshot_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_subscriber_snapshot_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_subscriber_snapshot_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_subscriber_snapshot_bus"], "alias": "int_lt_subscriber_snapshot_bus", "checksum": {"name": "sha256", "checksum": "071bf2bcf26b0c1369e12cf6c4244d4049c08fe085f90026ab9ee8ffd7ea40bf"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9449437, "relation_name": null, "raw_code": "with subscriber_snapshot_today as (select * from {{ref(\"int_lt_subscriber_snapshot_today_bus\")}}),\r\n\r\nsub_type as (select * from {{ref(\"int_lt_sub_type_bus\")}}),\r\n\r\nsubscriber_snapshot_bus as (\r\n    SELECT \r\n        subscriber_snapshot_today.sub_billing_id,\r\n        subscriber_snapshot_today.cust_id,\r\n        subscriber_snapshot_today.sub_msisdn,\r\n        subscriber_snapshot_today.sub_status,\r\n        subscriber_snapshot_today.sub_status_original,\r\n        subscriber_snapshot_today.sub_acquisition_date,\r\n        subscriber_snapshot_today.sub_acquisition_type,\r\n        subscriber_snapshot_today.sub_port_in_carrier,\r\n        subscriber_snapshot_today.sub_deactivation_date,\r\n        subscriber_snapshot_today.sub_deactivation_reason,\r\n        subscriber_snapshot_today.sub_port_out_carrier,\r\n        subscriber_snapshot_today.sub_contract_start_date,\r\n        subscriber_snapshot_today.sub_contract_end_date,\r\n        subscriber_snapshot_today.sub_type,\r\n        subscriber_snapshot_today.sub_balance_amt,\r\n        subscriber_snapshot_today.sub_rate_plan_name,\r\n        subscriber_snapshot_today.sub_rate_plan_monthly_fee,\r\n        subscriber_snapshot_today.sub_bad_debt,\r\n        subscriber_snapshot_today.sub_network_active,\r\n        subscriber_snapshot_today.sub_email,\r\n        subscriber_snapshot_today.sub_prefered_channel,\r\n        CAST(subscriber_snapshot_today.sub_do_not_call AS INT) AS sub_do_not_call, \r\n        CAST(subscriber_snapshot_today.sub_do_not_sms AS INT) as sub_do_not_sms,\r\n        CAST(subscriber_snapshot_today.sub_do_not_email AS INT) as sub_do_not_email,\r\n        CAST(subscriber_snapshot_today.sub_do_not_contact AS INT) as sub_do_not_contact,\r\n        NVL(sub_type.subscriber_type, 'NOT APPLICABLE') as subscriber_type,\r\n        NVL(sub_type.primary_segment, 'NOT APPLICABLE') as primary_segment,\r\n        subscriber_snapshot_today.dt\r\n    FROM subscriber_snapshot_today\r\n    LEFT JOIN sub_type\r\n    ON subscriber_snapshot_today.sub_billing_id = sub_type.sub_billing_id\r\n        AND subscriber_snapshot_today.dt = sub_type.dt\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_status,\r\n    sub_status_original,\r\n    sub_acquisition_date,\r\n    sub_acquisition_type,\r\n    sub_port_in_carrier,\r\n    sub_deactivation_date,\r\n    sub_deactivation_reason,\r\n    sub_port_out_carrier,\r\n    sub_contract_start_date,\r\n    sub_contract_end_date,\r\n    sub_type,\r\n    sub_balance_amt,\r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee,\r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email,\r\n    sub_prefered_channel,\r\n    sub_do_not_call, \r\n    sub_do_not_sms,\r\n    sub_do_not_email,\r\n    sub_do_not_contact,\r\n    subscriber_type,\r\n    primary_segment,\r\n    dt\r\nFROM subscriber_snapshot_bus", "language": "sql", "refs": [{"name": "int_lt_subscriber_snapshot_today_bus", "package": null, "version": null}, {"name": "int_lt_sub_type_bus", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_sub_type_bus"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_subscriber_snapshot_today_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_subscriber_snapshot_today_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_subscriber_snapshot_today_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_subscriber_snapshot_today_bus"], "alias": "int_lt_subscriber_snapshot_today_bus", "checksum": {"name": "sha256", "checksum": "07e97f7889ca16f58c8a1cdc4271115b0c8a6ce40fc9821450b84d92ffec0e24"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9469452, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n{% set dt = modules.datetime.datetime.strptime(lt_execution_date, '%Y-%m-%d') %}\r\n{% set date_sub_90_tmp = dt - modules.datetime.timedelta(days=90) %}\r\n{% set date_sub_90 = date_sub_90_tmp.strftime(\"%Y-%m-%d\") %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_assets_x as (select * from {{ ref(\"stg_tmp_assets_x\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nv_contact as (select * from {{ ref(\"stg_tmp_contact\") }}),\r\n\r\ndiscounts_period_asset as (select * from {{ref(\"int_lt_sub_snapshot_discounts_bus\")}}),\r\n\r\nthis_days_subscribers as (select * from {{ref(\"int_lt_this_day_subscribers_bus\")}}),\r\n\r\nasset_ids as (select * from {{ref(\"int_asset_ids_bus\")}}),\r\n\r\noutbound_bar as (select * from {{ref(\"int_lt_outbound_bar_bus\")}}),\r\n\r\nplans as (select * from {{ref(\"int_lt_sub_snapshot_plans_bus\")}}),\r\n\r\nsubscriber_snapshot_yesterday as (select * from {{ref(\"int_lt_sub_snapshot_yesterday_bus\")}}),\r\n\r\naccounts_today as (\r\n    SELECT \r\n        row_id,\r\n        CASE WHEN good_standing_flg = 'Y' THEN 1 ELSE 0 END AS sub_bad_debt\r\n    FROM v_accounts\r\n),\r\n\r\nplan_start_dt as (\r\n    SELECT \r\n        par_asset_id,\r\n        to_date(x_activation_dt) as x_activation_dt,\r\n        x_package_code,\r\n        name\r\n    FROM    \r\n        (\r\n        SELECT \r\n            sa.par_asset_id,\r\n            sa.x_activation_dt,\r\n            sa.x_package_code,\r\n            price.name,\r\n            row_number() over(PARTITION BY sa.par_asset_id ORDER BY sa.x_activation_dt DESC) as rn\r\n        FROM v_assets sa\r\n        LEFT JOIN \r\n        (\r\n        SELECT \r\n            pr.row_id,\r\n            pr.type,\r\n            pr.name\r\n        FROM v_product pr\r\n        LEFT JOIN\r\n            (SELECT DISTINCT sbl_rowid,\r\n                    pricing\r\n            FROM bdh_lt.traffica.sbl_product_configuration_cdl\r\n            WHERE uom = 'Per Month'\r\n            ) prc\r\n        ON pr.row_id = prc.sbl_rowid\r\n        ) price\r\n        ON sa.prod_id = price.row_id\r\n        WHERE price.type = 'Price Plan'\r\n        ) main\r\n    WHERE rn = 1\r\n),\r\n\r\nasset_x as (\r\n    SELECT \r\n        a.row_id,\r\n        NVL(psd.x_activation_dt ,a.sub_contract_start) AS sub_contract_start,\r\n        NVL(dpa.discount_end_dt, '9999-01-01') AS sub_contract_end,\r\n        a.suspended_start,\r\n        a.suspended_end,\r\n        CASE WHEN a.deactivation_reason = '' THEN 'MISSING'\r\n            WHEN a.deactivation_reason in ('Received offer late', 'Customer requirements not met') THEN 'OTHER'\r\n            ELSE dr.sub_deactivation_reason END AS sub_deactivation_reason \r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            SUBSTRING(attrib_31, 1, 10) AS sub_contract_start,\r\n            SUBSTRING(attrib_32, 1, 10) AS sub_contract_end,\r\n            SUBSTRING(attrib_26, 1, 10) AS suspended_start,\r\n            SUBSTRING(attrib_27, 1, 10) AS suspended_end,\r\n            attrib_03 AS deactivation_reason\r\n        FROM v_assets_x \r\n        WHERE SUBSTRING(CAST(last_upd AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n        ) a\r\n        LEFT JOIN plan_start_dt psd\r\n            ON psd.par_asset_id = a.row_id\r\n\r\n        LEFT JOIN bdh_lt.traffica.sub_deactivation_reason_cdl AS dr \r\n        ON dr.attrib_03 = a.deactivation_reason\r\n        \r\n        LEFT JOIN discounts_period_asset dpa\r\n        ON dpa.par_asset_id = a.row_id\r\n),\r\n\r\ncontacts as (\r\n    SELECT \r\n        row_id,\r\n        CASE WHEN email_addr_domain IS NOT NULL THEN email_addr ELSE 'MISSING' END AS sub_email\r\n    FROM v_contact \r\n),\r\n\r\nph_mnp as (\r\n    SELECT * \r\nFROM bdh_lt.traffica.ph_mnp_cdl\r\nWHERE contract_type = 'POST' \r\n    AND status = '100'\r\n),\r\n\r\nport_in as (\r\n    SELECT \r\n        a.msisdn, \r\n        a.operator, \r\n        NVL(op.operator_name, 'MISSING') AS operator_name, \r\n        a.porting_date\r\n    FROM (\r\n        SELECT * \r\n        FROM (\r\n            SELECT \r\n                msisdn,\r\n                porting_date,\r\n                'donor' AS operator,\r\n                row_number() OVER(PARTITION BY msisdn ORDER BY porting_date DESC) AS rn \r\n            FROM ph_mnp\r\n            WHERE contract_type = 'POST'\r\n                AND proc_type = 'PORTIN'\r\n                AND status = '100'\r\n                AND SUBSTRING(CAST(porting_date AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n            ) b \r\n        WHERE rn = 1\r\n        ) a\r\n    \r\n    LEFT JOIN bdh_lt.traffica.operator_codes_cdl AS op \r\n        ON op.operator_code = a.operator\r\n),\r\n\r\nport_out as (\r\n    SELECT \r\n        a.msisdn, \r\n        a.operator, \r\n        NVL(op.operator_name, 'MISSING') AS operator_name, \r\n        a.porting_date\r\n    FROM (\r\n        SELECT * \r\n        FROM (\r\n            SELECT \r\n                msisdn,\r\n                porting_date,\r\n                'recipient' AS operator,\r\n                row_number() OVER(PARTITION BY msisdn ORDER BY porting_date DESC) AS rn \r\n            FROM ph_mnp\r\n            WHERE contract_type = 'POST'\r\n                AND proc_type = 'PORTOUT'\r\n                AND status = '100'\r\n                AND SUBSTRING(CAST(porting_date AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n            ) b \r\n        WHERE rn = 1\r\n        ) a\r\n    \r\n    LEFT JOIN bdh_lt.traffica.operator_codes_cdl AS op \r\n        ON op.operator_code = a.operator\r\n),\r\n\r\nblacklist as (\r\n    SELECT \r\n        msisdn \r\n    FROM bdh_lt.business_dm.pildyk_blacklist_cdl\r\n),\r\n\r\nsubscribers_with_joins as (\r\n    SELECT \r\n        msisdns.sub_billing_id,\r\n        msisdns.cust_id,\r\n        msisdns.sub_msisdn,\r\n        msisdns.sub_status_original,\r\n        msisdns.sub_acquisition_date,\r\n        CASE WHEN port_in.operator_name IS NOT NULL THEN 'PORT IN'\r\n        END AS sub_acquisition_type,\r\n        port_in.operator_name AS sub_port_in_carrier,\r\n        msisdns.sub_deactivation_date AS sub_deactivation_date,\r\n        CASE WHEN msisdns.sub_deactivation_date IS NOT NULL\r\n                AND msisdns.sub_deactivation_date != '9999-01-01'\r\n                AND msisdns.sub_deactivation_date <= '{{lt_execution_date}}'\r\n                AND ax.sub_deactivation_reason IS NOT NULL THEN ax.sub_deactivation_reason\r\n             WHEN msisdns.sub_deactivation_date IS NULL OR msisdns.sub_deactivation_date = '9999-01-01' THEN 'NOT APPLICABLE'\r\n             ELSE ax.sub_deactivation_reason END AS sub_deactivation_reason,\r\n        CASE WHEN msisdns.sub_deactivation_date > '{{lt_execution_date}}' OR msisdns.sub_deactivation_date IS NULL then 'NOT APPLICABLE' \r\n             WHEN ax.sub_deactivation_reason = 'PORT OUT' THEN NVL(port_out.operator, 'MISSING')\r\n             WHEN ax.sub_deactivation_reason != 'PORT OUT' AND ax.sub_deactivation_reason IS NOT NULL THEN 'NOT APPLICABLE'\r\n             ELSE 'NOT APPLICABLE' END AS sub_port_out_carrier,\r\n        ax.sub_contract_start AS sub_contract_start_date,\r\n        ax.sub_contract_end AS sub_contract_end_date,\r\n        'POSTPAID' AS sub_type,\r\n        0 AS sub_balance_amt,\r\n        NVL(plans.package_name, CASE WHEN msisdns.x_package_code = '' THEN msisdns.prod_id \r\n            ELSE msisdns.x_package_code END) AS sub_rate_plan_name,\r\n        NVL(CAST(plans.price AS DECIMAL(20, 2)), 0) AS sub_rate_plan_monthly_fee,\r\n        c.sub_email AS sub_email,\r\n        CASE WHEN b.sub_bad_debt != 1 AND out_bar.outbound_bar_flag = 1 THEN 1 ELSE 0 END AS sub_bad_debt,\r\n        'MISSING' AS sub_prefered_channel,\r\n        CASE WHEN blacklist.msisdn IS NOT NULL THEN 1 ELSE 0 END AS sub_do_not_call,\r\n        CASE WHEN blacklist.msisdn IS NOT NULL THEN 1 ELSE 0 END AS sub_do_not_sms,\r\n        CASE WHEN blacklist.msisdn IS NOT NULL THEN 1 ELSE 0 END AS sub_do_not_email,\r\n        CASE WHEN blacklist.msisdn IS NOT NULL THEN 1 ELSE 0 END AS sub_do_not_contact,\r\n        msisdns.row_id AS a_row_id, \r\n        b.row_id AS b_row_id, \r\n        c.row_id AS c_row_id, \r\n        ax.row_id AS ax_row_id,\r\n        ax.suspended_start, \r\n        ax.suspended_end\r\n    FROM (\r\n        SELECT \r\n            msisdns.sub_billing_id,\r\n            msisdns.cust_id,\r\n            msisdns.sub_msisdn,\r\n            msisdns.sub_acquisition_date,\r\n            a.sub_status_original,\r\n            a.row_id,\r\n            prod_id,\r\n            x_package_code,\r\n            a.owner_con_id,\r\n            a.bill_accnt_id,\r\n            a.sub_deactivation_date\r\n        FROM (\r\n            SELECT * \r\n            FROM this_days_subscribers AS msisdns \r\n            WHERE rn = 1\r\n            ) msisdns\r\n        LEFT JOIN \r\n            asset_ids a \r\n                ON a.sub_msisdn = msisdns.sub_msisdn\r\n                    AND a.sub_acquisition_date = msisdns.sub_acquisition_date\r\n        ) msisdns\r\n    LEFT JOIN accounts_today b \r\n    ON b.row_id = msisdns.bill_accnt_id\r\n    LEFT JOIN outbound_bar out_bar\r\n    ON out_bar.account_no = msisdns.cust_id\r\n    LEFT JOIN asset_x ax \r\n    ON ax.row_id = msisdns.row_id\r\n    LEFT JOIN contacts c \r\n    ON c.row_id = msisdns.owner_con_id\r\n    LEFT JOIN port_in AS port_in \r\n    ON port_in.msisdn = msisdns.sub_msisdn\r\n        AND substring(CAST(port_in.porting_date AS STRING), 1, 10) = substring(msisdns.sub_acquisition_date, 1, 10)\r\n    LEFT JOIN port_out \r\n    ON port_out.msisdn = msisdns.sub_msisdn\r\n    LEFT JOIN blacklist \r\n    ON blacklist.msisdn = msisdns.sub_msisdn\r\n    LEFT JOIN plans \r\n    ON plans.sub_row_id = msisdns.row_id\r\n),\r\n\r\nsubscribers_with_plans as (\r\n    SELECT \r\n        a.sub_billing_id, \r\n        a.cust_id, \r\n        a.sub_msisdn, \r\n        a.sub_status_original, \r\n        a.sub_acquisition_date, \r\n        a.sub_acquisition_type,\r\n        a.sub_port_in_carrier, \r\n        a.sub_deactivation_date, \r\n        a.sub_deactivation_reason,\r\n        a.sub_port_out_carrier, \r\n        a.sub_contract_start_date,\r\n        a.sub_contract_end_date, \r\n        a.sub_type, \r\n        a.sub_balance_amt,\r\n        a.sub_rate_plan_name,\r\n        a.sub_rate_plan_monthly_fee,\r\n        a.sub_email, \r\n        a.sub_bad_debt,\r\n        a.sub_prefered_channel, \r\n        a.sub_do_not_call, \r\n        a.sub_do_not_sms, \r\n        a.sub_do_not_email, \r\n        a.sub_do_not_contact, \r\n        a.a_row_id, \r\n        a.b_row_id,\r\n        a.c_row_id, \r\n        a.ax_row_id, \r\n        a.suspended_start, \r\n        a.suspended_end\r\n    FROM subscribers_with_joins a\r\n    WHERE NVL(sub_deactivation_date, '9999-01-01') >= '{{date_sub_90}}'\r\n),\r\n\r\nsubscriber_snapshot_today as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id, \r\n        a.sub_msisdn, \r\n        sub_status, \r\n        sub_status_original, \r\n        sub_acquisition_date,\r\n        sub_acquisition_type, \r\n        sub_port_in_carrier, \r\n        sub_deactivation_date, \r\n        sub_deactivation_reason, \r\n        sub_port_out_carrier,\r\n        sub_contract_start_date, \r\n        sub_contract_end_date, \r\n        sub_type, \r\n        sub_balance_amt, \r\n        sub_rate_plan_name,\r\n        sub_rate_plan_monthly_fee, \r\n        sub_bad_debt,\r\n        0 AS sub_network_active,\r\n        NVL(sub_email, 'MISSING') AS sub_email, \r\n        sub_prefered_channel, \r\n        sub_do_not_call, \r\n        sub_do_not_sms, \r\n        sub_do_not_email, \r\n        sub_do_not_contact, \r\n        '{{lt_execution_date}}' AS dt\r\n    FROM (\r\n        SELECT \r\n            *, \r\n            row_number() OVER(PARTITION BY sub_msisdn, sub_status ORDER BY sub_acquisition_date DESC) AS rn\r\n        FROM (\r\n            SELECT \r\n                ad.sub_billing_id, \r\n                ad.cust_id, \r\n                ad.sub_msisdn,\r\n                CASE WHEN ad.ax_row_id IS NULL AND sn.sub_status IS NULL \r\n                        AND  SUBSTRING(ad.sub_deactivation_date, 1, 10) <= '{{lt_execution_date}}' THEN 'CHURNED'\r\n\r\n                    WHEN ad.ax_row_id IS NULL AND sn.sub_status IS NULL \r\n                        AND  SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}' THEN 'ACTIVE'\r\n\r\n                    WHEN ad.ax_row_id IS NULL AND ad.a_row_id IS NULL \r\n                        AND sn.sub_status_original = 'Suspended' THEN 'DEACTIVATED'\r\n\r\n                    WHEN ad.ax_row_id IS NULL AND ad.a_row_id IS NULL THEN sn.sub_status\r\n\r\n                    WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) <= '{{lt_execution_date}}') OR\r\n                        (SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01'\r\n                            AND ad.sub_status_original = 'Inactive') THEN 'CHURNED'\r\n\r\n                    WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')\r\n                        AND SUBSTRING(ad.suspended_start, 1, 10) <= '{{lt_execution_date}}'\r\n                        AND (SUBSTRING(ad.suspended_end, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) = '9999-01-01'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) IS NULL) THEN 'DEACTIVATED'\r\n\r\n                    WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')\r\n                        AND (SUBSTRING(ad.suspended_start, 1, 10) <= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) = '9999-01-01')\r\n                        AND SUBSTRING(ad.suspended_end, 1, 10) > '{{lt_execution_date}}' THEN 'DEACTIVATED'\r\n\r\n                    WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')  \r\n                        AND (SUBSTRING(ad.suspended_start, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) = '9999-01-01'\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) > '{{lt_execution_date}}')\r\n                        AND (SUBSTRING(ad.suspended_end, 1, 10) <= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) >= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) = '9999-01-01') THEN 'ACTIVE'\r\n\r\n                    WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')\r\n                        AND (SUBSTRING(ad.suspended_start, 1, 10) <= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) = '9999-01-01')\r\n                        AND SUBSTRING(ad.suspended_end, 1, 10) <= '{{lt_execution_date}}' THEN 'ACTIVE'\r\n                END AS sub_status,\r\n                CASE WHEN ad.sub_status_original IS NOT NULL THEN ad.sub_status_original\r\n                     WHEN sn.sub_status_original IS NOT NULL THEN sn.sub_status_original\r\n                END AS sub_status_original,\r\n                CASE WHEN ad.sub_acquisition_date IS NOT NULL AND ad.sub_acquisition_date != '9999-01-01' \r\n                        THEN ad.sub_acquisition_date\r\n                     WHEN sn.sub_acquisition_date IS NOT NULL AND sn.sub_acquisition_date != '9999-01-01' \r\n                        THEN sn.sub_acquisition_date\r\n                END AS sub_acquisition_date,\r\n                CASE WHEN ad.sub_acquisition_type IS NOT NULL THEN ad.sub_acquisition_type\r\n                     WHEN sn.sub_acquisition_type IS NOT NULL THEN sn.sub_acquisition_type\r\n                     ELSE 'REGULAR'\r\n                END AS sub_acquisition_type,\r\n                NVL(CASE WHEN ad.sub_port_in_carrier IS NOT NULL THEN ad.sub_port_in_carrier\r\n                         WHEN sn.sub_port_in_carrier IS NOT NULL THEN sn.sub_port_in_carrier\r\n                         ELSE 'NOT APPLICABLE' END, 'MISSING') AS sub_port_in_carrier,\r\n                CASE WHEN ad.sub_deactivation_date IS NOT NULL THEN ad.sub_deactivation_date\r\n                     WHEN sn.sub_deactivation_date IS NOT NULL THEN sn.sub_deactivation_date\r\n                     ELSE 'MISSING'\r\n                END AS sub_deactivation_date,\r\n                CASE WHEN ad.sub_deactivation_reason IS NOT NULL THEN ad.sub_deactivation_reason\r\n                     WHEN ad.sub_deactivation_reason IS NULL AND sn.sub_deactivation_reason IS NOT NULL \r\n                         THEN sn.sub_deactivation_reason\r\n                     ELSE 'MISSING'\r\n                END AS sub_deactivation_reason,\r\n                CASE WHEN ad.sub_deactivation_reason = 'PORT OUT' THEN NVL(UPPER(ad.sub_port_out_carrier), 'MISSING')\r\n                     WHEN sn.sub_deactivation_reason = 'PORT OUT' THEN sn.sub_port_out_carrier\r\n                     ELSE 'NOT APPLICABLE'\r\n                END AS sub_port_out_carrier,\r\n                NVL(CASE WHEN ad.ax_row_id IS NOT NULL THEN ad.sub_contract_start_date\r\n                         WHEN sn.sub_contract_start_date IS NOT NULL \r\n                             THEN sn.sub_contract_start_date END, '9999-01-01') AS sub_contract_start_date,\r\n                NVL(CASE WHEN ad.ax_row_id IS NOT NULL THEN ad.sub_contract_end_date\r\n                         WHEN sn.sub_contract_end_date IS NOT NULL \r\n                             THEN sn.sub_contract_end_date END, '9999-01-01') AS sub_contract_end_date,\r\n                CASE WHEN ad.sub_type IS NOT NULL THEN ad.sub_type\r\n                     WHEN sn.sub_type IS NOT NULL THEN sn.sub_type\r\n                END AS sub_type,\r\n                CASE WHEN ad.sub_balance_amt IS NOT NULL THEN ad.sub_balance_amt\r\n                     WHEN sn.sub_balance_amt IS NOT NULL THEN sn.sub_balance_amt\r\n                END AS sub_balance_amt,\r\n                CASE WHEN ad.sub_rate_plan_name IS NOT NULL THEN ad.sub_rate_plan_name\r\n                     WHEN sn.sub_rate_plan_name IS NOT NULL THEN sn.sub_rate_plan_name\r\n                END AS sub_rate_plan_name,\r\n                CASE WHEN ad.sub_rate_plan_monthly_fee IS NOT NULL THEN ad.sub_rate_plan_monthly_fee\r\n                     WHEN sn.sub_rate_plan_monthly_fee IS NOT NULL THEN sn.sub_rate_plan_monthly_fee\r\n                END AS sub_rate_plan_monthly_fee,\r\n                CASE WHEN ad.sub_bad_debt IS NOT NULL THEN ad.sub_bad_debt\r\n                     WHEN sn.sub_bad_debt IS NOT NULL THEN sn.sub_bad_debt\r\n                END AS sub_bad_debt,\r\n                CASE WHEN ad.sub_email IS NOT NULL THEN ad.sub_email\r\n                     WHEN sn.sub_email IS NOT NULL THEN sn.sub_email\r\n                     ELSE 'MISSING'\r\n                END AS sub_email,\r\n                CASE WHEN ad.sub_prefered_channel IS NOT NULL THEN ad.sub_prefered_channel\r\n                     WHEN sn.sub_prefered_channel IS NOT NULL THEN sn.sub_prefered_channel\r\n                END AS sub_prefered_channel,\r\n                CASE WHEN ad.sub_do_not_call IS NOT NULL THEN ad.sub_do_not_call\r\n                     WHEN sn.sub_do_not_call IS NOT NULL THEN sn.sub_do_not_call\r\n                END AS sub_do_not_call,\r\n                CASE WHEN ad.sub_do_not_sms IS NOT NULL THEN ad.sub_do_not_sms\r\n                     WHEN sn.sub_do_not_sms IS NOT NULL THEN sn.sub_do_not_sms\r\n                END AS sub_do_not_sms,\r\n                CASE WHEN ad.sub_do_not_email IS NOT NULL THEN ad.sub_do_not_email\r\n                     WHEN sn.sub_do_not_email IS NOT NULL THEN sn.sub_do_not_email\r\n                     ELSE 'MISSING'\r\n                END AS sub_do_not_email,\r\n                CASE WHEN ad.sub_do_not_contact IS NOT NULL THEN ad.sub_do_not_contact\r\n                     WHEN sn.sub_do_not_contact IS NOT NULL THEN sn.sub_do_not_contact\r\n                END AS sub_do_not_contact,\r\n                '{{lt_execution_date}}' AS dt\r\n            FROM subscribers_with_plans AS ad\r\n\r\n            LEFT JOIN subscriber_snapshot_yesterday sn \r\n            ON sn.sub_billing_id = ad.sub_billing_id \r\n                AND sn.sub_acquisition_date = ad.sub_acquisition_date\r\n            ) a\r\n        WHERE NVL(substring(sub_deactivation_date, 1, 10), '9999-01-01') >= '{{date_sub_90}}'\r\n        ) a \r\n    WHERE rn = 1\r\n)\r\n\r\nSELECT \r\n    sub_billing_id, \r\n    cust_id, \r\n    sub_msisdn, \r\n    sub_status, \r\n    sub_status_original, \r\n    sub_acquisition_date,\r\n    sub_acquisition_type, \r\n    sub_port_in_carrier, \r\n    sub_deactivation_date, \r\n    sub_deactivation_reason, \r\n    sub_port_out_carrier,\r\n    sub_contract_start_date, \r\n    sub_contract_end_date, \r\n    sub_type, \r\n    sub_balance_amt, \r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee, \r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email, \r\n    sub_prefered_channel, \r\n    sub_do_not_call, \r\n    sub_do_not_sms, \r\n    sub_do_not_email, \r\n    sub_do_not_contact, \r\n    dt\r\nFROM subscriber_snapshot_today", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_assets_x", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}, {"name": "stg_tmp_contact", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_discounts_bus", "package": null, "version": null}, {"name": "int_lt_this_day_subscribers_bus", "package": null, "version": null}, {"name": "int_asset_ids_bus", "package": null, "version": null}, {"name": "int_lt_outbound_bar_bus", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_plans_bus", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_yesterday_bus", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_tmp_product", "model.bdh_dbt_models.stg_tmp_contact", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus", "model.bdh_dbt_models.int_asset_ids_bus", "model.bdh_dbt_models.int_lt_outbound_bar_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_snapshot_discounts_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_snapshot_discounts_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_snapshot_discounts_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_sub_snapshot_discounts_bus"], "alias": "int_lt_sub_snapshot_discounts_bus", "checksum": {"name": "sha256", "checksum": "42e47411b1c22731611deb14dca55367b7900ba137f60358e9e142411ca10550"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9584672, "relation_name": null, "raw_code": "with v_assets_xa as (select * from {{ ref(\"stg_tmp_assets_xa\") }}), \r\n\r\nv_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\ndiscounts as (\r\n    SELECT \r\n        asset_id,\r\n        max(CASE WHEN xa.attr_name IN ('Discount Value') THEN ROUND(CAST(COALESCE(NULLIF(REPLACE(char_val_other, ',', ''), ''), '0') AS FLOAT),2) ELSE 0 END) AS discount_value, \r\n        max(CASE WHEN xa.attr_name IN ('DurationEndDate') THEN date_val ELSE '' END) AS discount_end_date\r\n    FROM v_assets_xa xa\r\n    WHERE xa.attr_name IN ('DurationEndDate',\r\n                        'Discount Value')\r\n    GROUP BY asset_id\r\n),\r\n\r\ndiscounts_period_asset AS (\r\n    SELECT\r\n        par_asset_id,\r\n        discount_value,\r\n        discount_start_dt,\r\n        discount_end_dt\r\n    FROM \r\n        (\r\n        SELECT ou_num,\r\n            x_primary_attr_value,\r\n            par_asset_id,\r\n            status_cd,\r\n            name AS discount_name,\r\n            discount_value,\r\n            SUBSTRING(CAST(x_activation_dt AS STRING),1,10) AS discount_start_dt,\r\n            CASE\r\n                WHEN substring(discount_end_date, 1,10)<=discount_end_date_tmp\r\n                    OR discount_end_date_tmp IS NULL THEN substring(discount_end_date, 1,10)\r\n                ELSE discount_end_date_tmp\r\n            END AS discount_end_dt\r\n        FROM\r\n            (\r\n            SELECT ac.ou_num,\r\n                sa2.x_primary_attr_value_phonenbr as x_primary_attr_value,\r\n                sa.par_asset_id,\r\n                sa.status_cd,\r\n                sa.x_activation_dt,\r\n                pr.name,\r\n                pr.type,\r\n                discounts.discount_value,\r\n                discounts.discount_end_date,\r\n                lead(substring(cast(sa.x_activation_dt AS string),1,10), 1) over (partition BY sa2.x_primary_attr_value_phonenbr, pr.name\r\n                                                                                ORDER BY sa.x_activation_dt, sa.status_cd DESC) AS discount_end_date_tmp\r\n            FROM v_assets sa\r\n            LEFT JOIN v_accounts ac ON ac.row_id = sa.bill_accnt_id\r\n            LEFT JOIN v_assets sa2 ON sa.par_asset_id = sa2.row_id\r\n            LEFT JOIN v_product pr ON sa.prod_id = pr.row_id\r\n            LEFT JOIN discounts discounts ON sa.row_id = discounts.asset_id\r\n            WHERE sa2.status_cd <> 'Inactive'\r\n                AND sa.status_cd <> 'Inactive'\r\n                AND ac.ou_type_cd = 'Business'\r\n            AND pr.name IN ('Discount on subscription from total bill',\r\n                            'Discount on subscription from services',\r\n                            'Discount of monthly charges of services',\r\n                            'Discount from total bill Special')\r\n            ) a \r\n        ) disc\r\n)\r\n\r\nSELECT \r\n    par_asset_id,\r\n    discount_value,\r\n    discount_start_dt,\r\n    discount_end_dt\r\nFROM discounts_period_asset", "language": "sql", "refs": [{"name": "stg_tmp_assets_xa", "package": null, "version": null}, {"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_snapshot_plans_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_snapshot_plans_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_snapshot_plans_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_sub_snapshot_plans_bus"], "alias": "int_lt_sub_snapshot_plans_bus", "checksum": {"name": "sha256", "checksum": "7036a8a0d270f235e79e0383921e181228db9e6396c78bfbedb4c8fd37c4f08c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9614651, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nplans as (\r\n    SELECT \r\n        par_asset_id AS sub_row_id,\r\n        price_plan AS package_name,\r\n        price_plan_price AS price\r\n    FROM (\r\n        SELECT \r\n            par_asset_id,\r\n            price_plan,\r\n            price_plan_price,\r\n            end_dt,\r\n            CASE WHEN status_cd='Inactive' THEN row_number() over(partition by par_asset_id, last_upd, status_cd \r\n                order by end_dt desc) ELSE 1 END as inactive_rn \r\n        FROM (\r\n            SELECT \r\n                par_asset_id,\r\n                last_upd,\r\n                end_dt,\r\n                status_cd,\r\n                package_name, \r\n                price_plan,\r\n                price_plan_price,\r\n                last_upd_lead,\r\n                count(1) over(partition by par_asset_id,last_upd, status_cd) as cc \r\n            FROM (\r\n                SELECT DISTINCT\r\n                    par_asset_id,\r\n                    last_upd,\r\n                    end_dt,\r\n                    status_cd,\r\n                    package_name,\r\n                    CASE WHEN pp.package_name IS NULL THEN pr.prod_name_eng ELSE pp.package_name END AS price_plan,\r\n                    CASE WHEN pp.package_name IS NULL THEN pr.pricing ELSE pp.price END AS price_plan_price,\r\n                    CASE WHEN end_dt is not null THEN end_dt ELSE lead(last_upd, 1) over (partition by par_asset_id \r\n                    order by last_upd, status_cd desc) END as last_upd_lead\r\n                FROM v_assets a\r\n                \r\n                LEFT JOIN bdh_lt.traffica.product_catalog_cdl pr \r\n                ON pr.sbl_rowid = a.prod_id\r\n                \r\n                LEFT JOIN bdh_lt.traffica.package_pricing_cdl pp \r\n                ON pp.package_code = a.x_package_code\r\n                WHERE pr.filter = 'Price Plan'\r\n                ORDER BY last_upd \r\n                ) pr \r\n            WHERE to_date(last_upd) <= '{{lt_execution_date}}' \r\n                AND to_date(last_upd_lead) > '{{lt_execution_date}}'\r\n            ) r\r\n        WHERE CASE WHEN cc>1 and status_cd='Active' AND package_name IS NULL THEN 1=0 ELSE 1=1 END \r\n        ) a\r\n    WHERE inactive_rn=1\r\n        AND end_dt IS NULL\r\n)\r\n\r\nSELECT \r\n    sub_row_id,\r\n    package_name,\r\n    price\r\nFROM plans", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_snapshot_yesterday_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_snapshot_yesterday_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_snapshot_yesterday_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_sub_snapshot_yesterday_bus"], "alias": "int_lt_sub_snapshot_yesterday_bus", "checksum": {"name": "sha256", "checksum": "d4f483ad66c7913b52cee313a04c9d69c955e8bde34b46cc95eff03b83bf511b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9664636, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n{% set dt = modules.datetime.datetime.strptime(lt_execution_date, '%Y-%m-%d') %}\r\n{% set date_sub_1_tmp = dt - modules.datetime.timedelta(days=1) %}\r\n{% set date_sub_1 = date_sub_1_tmp.strftime(\"%Y-%m-%d\") %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nproduct_price as (select * from {{ref(\"int_lt_product_price_bus\")}}),\r\n\r\nsubscriber_snapshot_yesterday_tmp as (\r\n    SELECT \r\n        sub_billing_id,\r\n        cust_id,\r\n        sub_msisdn,\r\n        sub_status,\r\n        sub_status_original,\r\n        sub_acquisition_date,\r\n        sub_acquisition_type,\r\n        sub_port_in_carrier,\r\n        sub_deactivation_date,\r\n        sub_deactivation_reason,\r\n        sub_port_out_carrier,\r\n        sub_contract_start_date,\r\n        sub_contract_end_date,\r\n        sub_type,\r\n        sub_balance_amt,\r\n        sub_rate_plan_name,\r\n        sub_rate_plan_monthly_fee,\r\n        sub_bad_debt,\r\n        sub_network_active,\r\n        sub_email,\r\n        sub_prefered_channel,\r\n        sub_do_not_call,\r\n        sub_do_not_sms,\r\n        sub_do_not_email,\r\n        sub_do_not_contact,\r\n        subscriber_type,\r\n        primary_segment,\r\n        dt \r\n    FROM bdh_lt.business_dm.lt_subscriber_snapshot_business\r\n    WHERE dt = '{{date_sub_1}}'\r\n),\r\n\r\nsubscriber_snapshot_yesterday as (\r\n    SELECT \r\n        sub_yest.sub_billing_id,\r\n        sub_yest.cust_id,\r\n        sub_yest.sub_msisdn,\r\n        sub_yest.sub_status,\r\n        sub_yest.sub_status_original,\r\n        sub_yest.sub_acquisition_date,\r\n        sub_yest.sub_acquisition_type,\r\n        sub_yest.sub_port_in_carrier,\r\n        sub_yest.sub_deactivation_date,\r\n        sub_yest.sub_deactivation_reason,\r\n        sub_yest.sub_port_out_carrier,\r\n        sub_yest.sub_contract_start_date,\r\n        sub_yest.sub_contract_end_date,\r\n        sub_yest.sub_type,\r\n        sub_yest.sub_balance_amt,\r\n        sub_yest.sub_rate_plan_name,\r\n        sub_yest.sub_rate_plan_monthly_fee,\r\n        sub_yest.sub_bad_debt,\r\n        sub_yest.sub_network_active,\r\n        sub_yest.sub_email,\r\n        sub_yest.sub_prefered_channel,\r\n        sub_yest.sub_do_not_call,\r\n        sub_yest.sub_do_not_sms,\r\n        sub_yest.sub_do_not_email,\r\n        sub_yest.sub_do_not_contact,\r\n        sub_yest.subscriber_type,\r\n        sub_yest.primary_segment,\r\n        sub_yest.dt\r\n    FROM subscriber_snapshot_yesterday_tmp sub_yest\r\n    INNER JOIN \r\n    (    \r\n    SELECT \r\n        ou_num,\r\n        x_primary_attr_value_phonenbr\r\n    FROM\r\n        (\r\n        SELECT\r\n            row_id,\r\n            ou_num,\r\n            ou_type_cd,\r\n            row_number() over(partition by ou_num order by last_upd desc) as rn\r\n        FROM v_accounts\r\n        ) ac\r\n        INNER JOIN \r\n        (\r\n        SELECT \r\n            bill_accnt_id,\r\n            x_primary_attr_value_phonenbr,\r\n            prod_id,\r\n            row_number() over(partition by x_primary_attr_value_phonenbr order by last_upd desc) as rn\r\n        FROM v_assets\r\n        ) sa\r\n        ON ac.row_id = sa.bill_accnt_id\r\n        INNER JOIN product_price price\r\n        ON sa.prod_id = price.row_id\r\n        WHERE ac.rn = 1\r\n            AND ac.ou_type_cd = 'Business'\r\n            AND sa.rn = 1\r\n        ) saac\r\n    ON sub_yest.cust_id = saac.ou_num\r\n        AND sub_yest.sub_msisdn = saac.x_primary_attr_value_phonenbr\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_status,\r\n    sub_status_original,\r\n    sub_acquisition_date,\r\n    sub_acquisition_type,\r\n    sub_port_in_carrier,\r\n    sub_deactivation_date,\r\n    sub_deactivation_reason,\r\n    sub_port_out_carrier,\r\n    sub_contract_start_date,\r\n    sub_contract_end_date,\r\n    sub_type,\r\n    sub_balance_amt,\r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee,\r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email,\r\n    sub_prefered_channel,\r\n    sub_do_not_call,\r\n    sub_do_not_sms,\r\n    sub_do_not_email,\r\n    sub_do_not_contact,\r\n    subscriber_type,\r\n    primary_segment,\r\n    dt \r\nFROM subscriber_snapshot_yesterday", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "int_lt_product_price_bus", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.int_lt_product_price_bus"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_type_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_type_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_type_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_sub_type_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_type_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_sub_type_bus"], "alias": "int_lt_sub_type_bus", "checksum": {"name": "sha256", "checksum": "f8eec6d1d97d987b9f803acd5c9ac8c274066e4392f82e47d1e096a4e1de20a5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9724677, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nsubscriber_type_stg_1 as (\r\n    SELECT \r\n        v_accounts.ou_type_cd,\r\n        v_product.type,\r\n        v_assets.par_asset_id,\r\n        v_accounts.ou_num,\r\n        v_assets2.x_primary_attr_value_phonenbr,\r\n        v_accounts.x_primary_postpaid_seg_cd,\r\n        v_assets.end_dt,\r\n        v_assets.x_activation_dt AS price_plan_activation_date,\r\n        v_product2.type AS subscriber_type,\r\n        v_assets.status_cd,\r\n        lead(v_assets.x_activation_dt) over (partition by v_assets.par_asset_id order by v_assets.x_activation_dt, v_assets.status_cd DESC) as price_plan_activation_date_lead\r\n    FROM v_assets \r\n    LEFT JOIN v_assets v_assets2\r\n    ON v_assets.par_asset_id = v_assets2.row_id\r\n    LEFT JOIN v_accounts\r\n    ON v_accounts.row_id = v_assets2.bill_accnt_id\r\n    LEFT JOIN v_product\r\n    ON v_product.row_id = v_assets.prod_id\r\n    LEFT JOIN v_product v_product2\r\n    ON v_product2.row_id = v_assets2.prod_id\r\n),\r\n\r\nsubscriber_type_stg_2 as (\r\n    SELECT \r\n        ou_num as ou_numb_sub,\r\n        x_primary_attr_value_phonenbr,\r\n        x_primary_postpaid_seg_cd as primary_segment,\r\n        subscriber_type,\r\n        '{{lt_execution_date}}' as dt,\r\n        row_number() over(partition by ou_num, x_primary_attr_value_phonenbr, dt order by price_plan_activation_date desc) as plan_activation_rank\r\n    FROM subscriber_type_stg_1\r\n    WHERE ou_type_cd = 'Business'\r\n        AND type = 'Price Plan'\r\n        AND to_date(price_plan_activation_date) <=  '{{lt_execution_date}}'\r\n        AND ( to_date(price_plan_activation_date_lead) > '{{lt_execution_date}}'\r\n            OR status_cd in ('Active','Suspended')\r\n        )\r\n),\r\n\r\nsubscriber_type as (\r\n    SELECT \r\n        concat(ou_numb_sub, x_primary_attr_value_phonenbr) AS sub_billing_id,\r\n        primary_segment,\r\n        subscriber_type,\r\n        dt\r\n    FROM subscriber_type_stg_2\r\n    WHERE plan_activation_rank = 1\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    primary_segment,\r\n    subscriber_type,\r\n    dt\r\nFROM subscriber_type", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_this_day_subscribers_bus": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_this_day_subscribers_bus", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_this_day_subscribers_bus.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_business\\lt_subscriber_snapshot_business\\int_lt_this_day_subscribers_bus.sql", "unique_id": "model.bdh_dbt_models.int_lt_this_day_subscribers_bus", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_business", "lt_subscriber_snapshot_business", "int_lt_this_day_subscribers_bus"], "alias": "int_lt_this_day_subscribers_bus", "checksum": {"name": "sha256", "checksum": "35bb74860da63b755aecc2f2656dd05c7e1e78e9137d4e5f2527065d57a5ed46"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9774685, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nasset_ids as (select * from {{ref(\"int_asset_ids_bus\")}}),\r\n\r\nsubscriber_snapshot_yesterday as (select * from {{ref(\"int_lt_sub_snapshot_yesterday_bus\")}}),\r\n\r\nproduct_price as (select * from {{ref(\"int_lt_product_price_bus\")}}),\r\n\r\npart_1 as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id, \r\n        sub_msisdn, \r\n        sub_acquisition_date,\r\n        sub_deactivation_date,\r\n        0 AS active_plan,\r\n        dt ,\r\n        sub_status  \r\n    FROM subscriber_snapshot_yesterday\r\n),\r\n\r\npart_2 as (\r\n    SELECT \r\n        CONCAT(b.cust_id, a.sub_msisdn) AS sub_billing_id,\r\n        b.cust_id,\r\n        a.sub_msisdn,\r\n        SUBSTRING(a.sub_acquisition_date, 1, 10) AS sub_acquisition_date,\r\n        SUBSTRING(a.sub_deactivation_date, 1, 10) AS sub_deactivation_date,\r\n        NVL(price.active_plan, 0) AS active_plan,\r\n        '{{lt_execution_date}}' AS dt,\r\n        sub_status_original as sub_status\r\n    FROM (\r\n        SELECT \r\n            * \r\n        FROM asset_ids\r\n        ) a\r\n    LEFT JOIN (\r\n        SELECT \r\n            row_id, \r\n            ou_num AS cust_id, \r\n            ou_type_cd \r\n        FROM v_accounts\r\n        ) b \r\n            ON b.row_id = a.bill_accnt_id\r\n    LEFT JOIN\r\n    (\r\n    SELECT\r\n        sub_msisdn,\r\n        cust_id,\r\n        active_plan\r\n    FROM    \r\n        (\r\n        SELECT \r\n            sa2.x_primary_attr_value_phonenbr AS sub_msisdn,\r\n            ac.ou_num AS cust_id,\r\n            1 as active_plan,\r\n            row_number() over(partition by sa2.x_primary_attr_value_phonenbr order by sa.last_upd DESC) as rn\r\n        FROM\r\n            (\r\n            SELECT \r\n                par_asset_id,\r\n                prod_id,\r\n                bill_accnt_id,\r\n                status_cd,\r\n                last_upd\r\n            FROM v_assets\r\n            ) sa\r\n            INNER JOIN v_assets sa2\r\n            ON sa.par_asset_id = sa2.row_id\r\n            INNER JOIN product_price  price \r\n            ON sa.prod_id = price.row_id\r\n            INNER JOIN v_accounts ac\r\n                ON ac.row_id = sa.bill_accnt_id\r\n        WHERE ac.ou_type_cd = 'Business'\r\n            AND sa.status_cd = 'Active'\r\n        ) main\r\n    WHERE rn = 1\r\n    ) price \r\n    ON price.sub_msisdn = a.sub_msisdn\r\n        AND price.cust_id = b.cust_id\r\n        AND a.sub_status_original = 'Active'\r\n    WHERE b.ou_type_cd = 'Business'\r\n),\r\n\r\nthis_days_subscribers as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id,\r\n        sub_msisdn,\r\n        sub_acquisition_date,\r\n        dt,\r\n        rn\r\n    FROM    \r\n        (\r\n        SELECT \r\n            sub_billing_id, \r\n            cust_id,\r\n            sub_msisdn,\r\n            sub_acquisition_date,\r\n            dt,\r\n            row_number() OVER(PARTITION BY sub_billing_id ORDER BY dt DESC, sub_deactivation_date DESC) rn,\r\n            CASE WHEN active_plan = 0 AND lower(sub_status) = 'active' THEN 0 ELSE 1 END AS keep_sub_flag\r\n        FROM (\r\n            SELECT \r\n                sub_billing_id, \r\n                cust_id, \r\n                sub_msisdn, \r\n                sub_acquisition_date,\r\n                sub_deactivation_date,\r\n                active_plan,\r\n                dt ,\r\n                sub_status\r\n            FROM part_1\r\n            UNION ALL\r\n            SELECT\r\n                sub_billing_id, \r\n                cust_id, \r\n                sub_msisdn, \r\n                sub_acquisition_date,\r\n                sub_deactivation_date,\r\n                active_plan,\r\n                dt ,\r\n                sub_status \r\n            FROM part_2\r\n            ) msisdns\r\n        ) main\r\n    WHERE keep_sub_flag  = 1\r\n)\r\n\r\nSELECT \r\n    sub_billing_id, \r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_acquisition_date,\r\n    dt,\r\n    rn\r\nFROM this_days_subscribers", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "int_asset_ids_bus", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_yesterday_bus", "package": null, "version": null}, {"name": "int_lt_product_price_bus", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.int_asset_ids_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus", "model.bdh_dbt_models.int_lt_product_price_bus"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_churned_daily_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_churned_daily_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_churned_residential\\int_lt_churned_daily_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_churned_residential\\int_lt_churned_daily_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_churned_daily_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_churned_residential", "int_lt_churned_daily_res"], "alias": "int_lt_churned_daily_res", "checksum": {"name": "sha256", "checksum": "0b0ebd520739c085bb5d2880dda46cf6e16562517ecfcace9370c551ac097682"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9834683, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith subscriber_snapshot as (\r\n    SELECT \r\n        sub_billing_id,\r\n        case when sub_status = 'CHURNED' then 1 else 0 end as churned, \r\n        dt\r\n    FROM bdh_lt.private_dm.lt_subscriber_snapshot_residential\r\n    WHERE dt = '{{lt_execution_date}}'\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    churned,\r\n    dt\r\nFROM subscriber_snapshot", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_account_today_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_account_today_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_account_today_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_account_today_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_account_today_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_account_today_res"], "alias": "int_lt_account_today_res", "checksum": {"name": "sha256", "checksum": "3b4973a6c812b2d7864d873dd53accb44cb3dc060074ca5fe932218787c1aaa4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9884698, "relation_name": null, "raw_code": "with all_todays_accounts as (\r\n    SELECT \r\n        row_id, \r\n        last_upd, \r\n        good_standing_flag, \r\n        ou_type_cd,\r\n        ou_num,\r\n        dt\r\n    FROM {{ ref(\"int_lt_all_todays_accounts_res\")}}\r\n),\r\n\r\naccounts_today as (\r\n   SELECT \r\n        row_id,\r\n        sub_bad_debt \r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            CASE WHEN good_standing_flag = 'Y' THEN 1 ELSE 0 END AS sub_bad_debt,\r\n            row_number() OVER(PARTITION BY row_id ORDER BY last_upd DESC) AS rn\r\n        FROM all_todays_accounts\r\n        ) a \r\n    WHERE rn = 1 \r\n)\r\n\r\nSELECT \r\n    row_id,\r\n    sub_bad_debt \r\nFROM accounts_today", "language": "sql", "refs": [{"name": "int_lt_all_todays_accounts_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.int_lt_all_todays_accounts_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_all_todays_accounts_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_all_todays_accounts_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_all_todays_accounts_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_all_todays_accounts_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_all_todays_accounts_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_all_todays_accounts_res"], "alias": "int_lt_all_todays_accounts_res", "checksum": {"name": "sha256", "checksum": "e142757d492c9c8ee9847716c1f2a8e0886f795a3d14ee19a3eb282cef89d94b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9914677, "relation_name": null, "raw_code": "with v_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nall_todays_accounts as (\r\n    SELECT \r\n        row_id, \r\n        last_upd, \r\n        good_standing_flg as good_standing_flag, \r\n        ou_type_cd,\r\n        ou_num,\r\n        dt\r\n    FROM v_accounts\r\n)\r\n\r\nSELECT\r\n    row_id, \r\n    last_upd, \r\n    good_standing_flag, \r\n    ou_type_cd,\r\n    ou_num,\r\n    dt\r\nFROM all_todays_accounts", "language": "sql", "refs": [{"name": "stg_tmp_accounts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_accounts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_outbound_bar_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_outbound_bar_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_outbound_bar_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_outbound_bar_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_outbound_bar_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_outbound_bar_res"], "alias": "int_lt_outbound_bar_res", "checksum": {"name": "sha256", "checksum": "9ac6aa651fdcc33e76003ac403446b2b85daf3a04e79e8b356c9823e0deac4df"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9934685, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_billing_profile as (select * from {{ ref(\"stg_tmp_billing_profile\") }}),\r\n\r\noutbound_bar as (\r\n    SELECT \r\n        cnh.primary_identifier AS account_no,\r\n        1 AS outbound_bar_flag\r\n    FROM bdh_lt.singleview.customer_node_history_cdl cnh\r\n    INNER JOIN v_accounts va \r\n    ON va.ou_num=cnh.primary_identifier\r\n    INNER JOIN v_billing_profile bill \r\n    ON va.row_id= bill.accnt_id\r\n    INNER JOIN bdh_lt.singleview.XPSI_TRT_REVOKE_cdl trt \r\n    ON trt.cq_customer_node_id=cnh.customer_node_id\r\n    INNER JOIN bdh_lt.singleview.customer_query_cdl cq \r\n    ON cq.customer_query_id=trt.cq_customer_query_id\r\n    INNER JOIN bdh_lt.singleview.derived_attribute_array_cdl daa \r\n    ON daa.derived_attribute_id=95005457\r\n        AND daa.index2_value=trt.cq_general_2\r\n        AND daa.index3_value='1'\r\n    INNER JOIN bdh_lt.singleview.reference_code_cdl rc3\r\n    ON rc3.reference_code = cq.query_status_code\r\n        AND rc3.reference_type_id=418\r\n    WHERE '{{lt_execution_date}}' >= cnh.effective_start_date\r\n        -- AND '{{lt_execution_date}}' < cnh.effective_end_date --kai bus atsinaujinan\u010dios lenteles nuimti ir pasi\u017eiur\u0117t ar yra \u012fra\u0161\u0173\r\n        AND daa.result2_value ='Outbound Bar'\r\n        AND (CASE\r\n                WHEN cq.close_date IS NOT NULL THEN trt.effective_date != cq.close_date\r\n                ELSE 1=1\r\n            END)\r\n        AND rc3.abbreviation <> 'Closed'\r\n    GROUP BY 1  \r\n)  \r\n\r\nSELECT \r\n    account_no,\r\n    outbound_bar_flag\r\nFROM outbound_bar", "language": "sql", "refs": [{"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_billing_profile", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_billing_profile"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_product_price_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_product_price_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_product_price_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_product_price_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_product_price_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_product_price_res"], "alias": "int_lt_product_price_res", "checksum": {"name": "sha256", "checksum": "d52707a8762371480f82e63b42d2d0aa4581415b79e41b170eed0266d3c9d503"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885160.9994683, "relation_name": null, "raw_code": "with v_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nprice as (\r\n    SELECT \r\n        sbl_rowid,\r\n        pricing\r\n    FROM bdh_lt.traffica.sbl_product_configuration_cdl \r\n    WHERE uom='Per Month'\r\n    GROUP BY sbl_rowid,\r\n        pricing\r\n),\r\n\r\nproduct_price as (\r\n    SELECT pr.row_id,\r\n        pr.type,\r\n        pr.name,\r\n        CASE\r\n            WHEN pr.type='Billing Product'\r\n                AND lower(pr.name) NOT LIKE '%sms%' THEN '0'\r\n            ELSE prc.pricing\r\n        END AS pricing\r\n    FROM v_product pr\r\n    LEFT JOIN\r\n    (SELECT \r\n        sbl_rowid,\r\n        pricing\r\n    FROM price\r\n    ) prc \r\n    ON pr.row_id=prc.sbl_rowid\r\n    WHERE pr.type IN ('Price Plan', 'Data Bucket', 'Billing Product')\r\n)\r\n\r\nSELECT \r\n    row_id,\r\n    type,\r\n    name,\r\n    pricing\r\nFROM product_price", "language": "sql", "refs": [{"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_subscriber_snapshot_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_subscriber_snapshot_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_subscriber_snapshot_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_subscriber_snapshot_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_subscriber_snapshot_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_subscriber_snapshot_res"], "alias": "int_lt_subscriber_snapshot_res", "checksum": {"name": "sha256", "checksum": "6704c0faa8b8adf8ce70946d9d6731aba81aa48490e0b12fabefba57b1e9b504"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.001469, "relation_name": null, "raw_code": "with subscriber_snapshot_today as (select * from {{ref(\"int_lt_subscriber_snapshot_today_res\")}}),\r\n\r\nsub_type as (select * from {{ref(\"int_lt_sub_type_res\")}}),\r\n\r\nwsc_admin as (select * from {{ref(\"int_lt_wsc_admin_res\")}}),\r\n\r\nsubscriber_snapshot as (\r\n    SELECT \r\n        subscriber_snapshot_today.sub_billing_id,\r\n        subscriber_snapshot_today.cust_id,\r\n        subscriber_snapshot_today.sub_msisdn,\r\n        subscriber_snapshot_today.sub_status,\r\n        subscriber_snapshot_today.sub_status_original,\r\n        subscriber_snapshot_today.sub_acquisition_date,\r\n        subscriber_snapshot_today.sub_acquisition_type,\r\n        subscriber_snapshot_today.sub_port_in_carrier,\r\n        subscriber_snapshot_today.sub_deactivation_date,\r\n        subscriber_snapshot_today.sub_deactivation_reason,\r\n        subscriber_snapshot_today.sub_port_out_carrier,\r\n        subscriber_snapshot_today.sub_contract_start_date,\r\n        subscriber_snapshot_today.sub_contract_end_date,\r\n        subscriber_snapshot_today.sub_type,\r\n        subscriber_snapshot_today.sub_balance_amt,\r\n        subscriber_snapshot_today.sub_rate_plan_name,\r\n        subscriber_snapshot_today.sub_rate_plan_monthly_fee,\r\n        subscriber_snapshot_today.sub_bad_debt,\r\n        subscriber_snapshot_today.sub_network_active,\r\n        subscriber_snapshot_today.sub_email,\r\n        subscriber_snapshot_today.sub_prefered_channel,\r\n        CAST(subscriber_snapshot_today.sub_do_not_call AS INT) as sub_do_not_call, \r\n        CAST(subscriber_snapshot_today.sub_do_not_sms AS INT) as sub_do_not_sms,\r\n        CAST(subscriber_snapshot_today.sub_do_not_email AS INT) as sub_do_not_email,\r\n        CAST(subscriber_snapshot_today.sub_do_not_contact AS INT) as sub_do_not_contact,\r\n        NVL(sub_type.subscriber_type, 'NOT APPLICABLE') as subscriber_type,\r\n        NVL(sub_type.primary_segment, 'NOT APPLICABLE') as primary_segment,\r\n        CASE \r\n            WHEN subscriber_snapshot_today.sub_status = 'ACTIVE' THEN NVL(wsc_admin.wsc_admin, 'N')\r\n            ELSE NVL(wsc_admin.wsc_admin, 'NOT APPLICABLE') END AS wsc_admin,\r\n        subscriber_snapshot_today.dt\r\n    FROM subscriber_snapshot_today\r\n    LEFT JOIN sub_type\r\n        ON subscriber_snapshot_today.sub_billing_id = sub_type.sub_billing_id\r\n        AND subscriber_snapshot_today.dt = sub_type.dt\r\n    LEFT JOIN wsc_admin \r\n        ON wsc_admin.sub_msisdn = subscriber_snapshot_today.sub_msisdn \r\n        AND wsc_admin.cust_id = subscriber_snapshot_today.cust_id\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_status,\r\n    sub_status_original,\r\n    sub_acquisition_date,\r\n    sub_acquisition_type,\r\n    sub_port_in_carrier,\r\n    sub_deactivation_date,\r\n    sub_deactivation_reason,\r\n    sub_port_out_carrier,\r\n    sub_contract_start_date,\r\n    sub_contract_end_date,\r\n    sub_type,\r\n    sub_balance_amt,\r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee,\r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email,\r\n    sub_prefered_channel,\r\n    sub_do_not_call, \r\n    sub_do_not_sms,\r\n    sub_do_not_email,\r\n    sub_do_not_contact,\r\n    subscriber_type,\r\n    primary_segment,\r\n    wsc_admin,\r\n    dt\r\nFROM subscriber_snapshot", "language": "sql", "refs": [{"name": "int_lt_subscriber_snapshot_today_res", "package": null, "version": null}, {"name": "int_lt_sub_type_res", "package": null, "version": null}, {"name": "int_lt_wsc_admin_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "model.bdh_dbt_models.int_lt_sub_type_res", "model.bdh_dbt_models.int_lt_wsc_admin_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_subscriber_snapshot_today_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_subscriber_snapshot_today_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_subscriber_snapshot_today_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_subscriber_snapshot_today_res"], "alias": "int_lt_subscriber_snapshot_today_res", "checksum": {"name": "sha256", "checksum": "ca2aa535906ada4762759a94127b617e1ed50353b192e1fc7180179c6fe12eea"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0034692, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n{% set dt = modules.datetime.datetime.strptime(lt_execution_date, '%Y-%m-%d') %}\r\n{% set date_sub_90_tmp = dt - modules.datetime.timedelta(days=90) %}\r\n{% set date_sub_90 = date_sub_90_tmp.strftime(\"%Y-%m-%d\") %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_assets_x as (select * from {{ ref(\"stg_tmp_assets_x\") }}),\r\n\r\nv_contact as (select * from {{ ref(\"stg_tmp_contact\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nsub_snapshot_discounts as (select * from {{ref(\"int_lt_sub_snapshot_discounts_res\")}}),\r\n\r\nconsent as (select * from {{ref(\"int_lt_sub_consent_res\")}}),\r\n\r\nthis_day_subscribers as (select * from {{ref(\"int_lt_this_day_subscribers_res\")}}),\r\n\r\noutbound_bar as (select * from {{ref(\"int_lt_outbound_bar_res\")}}),\r\n\r\nplans as (select * from {{ref(\"int_lt_sub_snapshot_plans_res\")}}),\r\n\r\nsubscriber_snapshot_yesterday as (select * from {{ref(\"int_lt_sub_snapshot_yesterday_res\")}}),\r\n\r\nthis_days_subscribers as (select * from {{ref(\"int_lt_this_day_subscribers_res\")}}),\r\n\r\naccounts_today as (select * from {{ref(\"int_lt_account_today_res\")}}),\r\n\r\nassets_today as (\r\n    SELECT \r\n        row_id,\r\n        last_upd,\r\n        end_dt,\r\n        status_cd,\r\n        x_activation_dt,\r\n        x_primary_attr_name,\r\n        x_primary_attr_value_phonenbr,\r\n        par_asset_id,\r\n        x_package_code,\r\n        prod_id,\r\n        bill_accnt_id,\r\n        root_asset_id,\r\n        owner_con_id,\r\n        dt\r\n    FROM v_assets\r\n),\r\n\r\nasset_ids as (\r\n    SELECT \r\n        row_id,\r\n        sub_msisdn,\r\n        owner_con_id,\r\n        bill_accnt_id,\r\n        sub_acquisition_date,\r\n        prod_id,\r\n        x_package_code, \r\n        a.sub_deactivation_date,\r\n        sub_status_original\r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            sub_msisdn,\r\n            owner_con_id,\r\n            bill_accnt_id,\r\n            sub_acquisition_date,\r\n            prod_id,\r\n            x_package_code,\r\n            row_number() OVER(PARTITION BY sub_msisdn, sub_acquisition_date ORDER BY last_upd DESC) AS rn,\r\n            CASE WHEN CAST(end_dt as STRING) IS NOT NULL AND CAST(end_dt as STRING) != '' THEN SUBSTRING(CAST(end_dt as STRING), 1, 10)\r\n                ELSE '9999-01-01' \r\n                END AS sub_deactivation_date,\r\n            sub_status_original\r\n        FROM (\r\n            SELECT \r\n                row_id,\r\n                x_primary_attr_value_phonenbr AS sub_msisdn, \r\n                substring(CAST(x_activation_dt AS STRING), 1, 10) AS sub_acquisition_date,\r\n                last_upd,\r\n                owner_con_id,\r\n                bill_accnt_id,\r\n                CAST(end_dt AS STRING) AS end_dt,\r\n                prod_id,\r\n                x_package_code,\r\n                status_cd AS sub_status_original\r\n            FROM assets_today\r\n            WHERE x_primary_attr_name = 'Postpaid TN'\r\n                AND SUBSTRING(CAST(x_activation_dt AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n                AND x_activation_dt IS NOT NULL\r\n            ) a\r\n        ) a\r\n    WHERE rn = 1\r\n),\r\n\r\nplan_start_dt as (\r\n    SELECT \r\n        par_asset_id,\r\n        to_date(x_activation_dt) as x_activation_dt,\r\n        x_package_code,\r\n        name\r\n    FROM    \r\n        (\r\n        SELECT \r\n            sa.par_asset_id,\r\n            sa.x_activation_dt,\r\n            sa.x_package_code,\r\n            price.name,\r\n            row_number() over(PARTITION BY sa.par_asset_id ORDER BY sa.x_activation_dt DESC) as rn\r\n        FROM v_assets sa\r\n        LEFT JOIN \r\n        (\r\n        SELECT \r\n            row_id,\r\n            type,\r\n            name\r\n        FROM v_product\r\n        ) price\r\n        ON sa.prod_id = price.row_id\r\n        WHERE price.type = 'Price Plan'\r\n        ) main\r\n    WHERE rn = 1\r\n),\r\n\r\nasset_x as (\r\n    SELECT \r\n        a.row_id,\r\n        NVL(psd.x_activation_dt ,a.sub_contract_start) AS sub_contract_start,\r\n        NVL(discount_end_date, '9999-01-01') AS sub_contract_end,\r\n        a.suspended_start,\r\n        a.suspended_end,\r\n        CASE WHEN a.deactivation_reason = '' THEN 'MISSING'\r\n            WHEN a.deactivation_reason in ('Received offer late', 'Customer requirements not met') THEN 'OTHER'\r\n            ELSE dr.sub_deactivation_reason \r\n        END AS sub_deactivation_reason \r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            TO_DATE(attrib_31) AS sub_contract_start,\r\n            TO_DATE(attrib_32) AS sub_contract_end,\r\n            TO_DATE(attrib_26) AS suspended_start,\r\n            TO_DATE(attrib_27) AS suspended_end,\r\n            attrib_03 AS deactivation_reason,\r\n            row_number() OVER(PARTITION BY row_id ORDER BY last_upd DESC) AS rn\r\n        FROM v_assets_x        \r\n        ) a\r\n        LEFT JOIN plan_start_dt psd\r\n        ON psd.par_asset_id = a.row_id\r\n    LEFT JOIN bdh_lt.traffica.sub_deactivation_reason_cdl dr \r\n    ON dr.attrib_03 = a.deactivation_reason\r\n            \r\n    LEFT JOIN sub_snapshot_discounts dpa\r\n    ON dpa.par_asset_id = a.row_id\r\n\r\n    WHERE rn = 1\r\n),\r\n\r\ncontacts as (\r\n    SELECT \r\n        row_id, \r\n        sub_email \r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            CASE WHEN email_addr_domain IS NOT NULL THEN email_addr ELSE 'MISSING' END AS sub_email,\r\n            row_number() OVER(PARTITION BY row_id ORDER BY last_upd DESC) rn\r\n        FROM v_contact\r\n        ) a \r\n    WHERE rn = 1\r\n\r\n),\r\n\r\nph_mnp as (\r\n    SELECT \r\n        porting_date,\r\n        msisdn,\r\n        customer_code,\r\n        contract_type,\r\n        proc_type,\r\n        donor,\r\n        recipient,\r\n        status\r\n    FROM bdh_lt.traffica.ph_mnp_cdl \r\n    WHERE contract_type = 'POST' \r\n    AND status = '100'\r\n),\r\n\r\noperator_codes as (\r\n    SELECT \r\n        operator_code,\r\n        operator_name,\r\n        dt\r\n    FROM bdh_lt.traffica.operator_codes_cdl\r\n),\r\n\r\nport_in as (\r\n    SELECT \r\n        a.msisdn, \r\n        a.operator, \r\n        NVL(op.operator_name, 'MISSING') AS operator_name, \r\n        a.porting_date\r\n    FROM (\r\n        SELECT * \r\n        FROM (\r\n            SELECT \r\n                msisdn,\r\n                porting_date,\r\n                'donor' AS operator, \r\n                row_number() OVER(PARTITION BY msisdn ORDER BY porting_date DESC) AS rn \r\n            FROM ph_mnp\r\n            WHERE contract_type = 'POST'\r\n                AND proc_type = 'PORTIN'\r\n                AND status = '100'\r\n                AND SUBSTRING(CAST(porting_date AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n            ) b \r\n        WHERE rn = 1\r\n        ) a\r\n    LEFT JOIN operator_codes AS op \r\n        ON op.operator_code = a.operator\r\n),\r\n\r\nport_out AS (\r\n    SELECT \r\n        a.msisdn, \r\n        a.operator, \r\n        NVL(op.operator_name, 'MISSING') AS operator_name, \r\n        a.porting_date\r\n    FROM (\r\n        SELECT * \r\n        FROM (\r\n            SELECT \r\n                msisdn,\r\n                porting_date,\r\n                'recipient' AS operator, \r\n                row_number() OVER(PARTITION BY msisdn ORDER BY porting_date DESC) AS rn \r\n            FROM ph_mnp\r\n            WHERE contract_type = 'POST'\r\n                AND proc_type = 'PORTOUT'\r\n                AND status = '100'\r\n                AND SUBSTRING(CAST(porting_date AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n            ) b \r\n        WHERE rn = 1\r\n        ) a\r\n    \r\n    LEFT JOIN operator_codes AS op \r\n        ON op.operator_code = a.operator\r\n),\r\n\r\nsub_with_joins as (\r\n    SELECT \r\n        msisdns.sub_billing_id,\r\n        msisdns.cust_id,\r\n        msisdns.sub_msisdn,\r\n        msisdns.sub_status_original,\r\n        msisdns.sub_acquisition_date,\r\n        msisdns.data_source, \r\n        CASE WHEN port_in.operator_name IS NOT NULL THEN 'PORT IN'\r\n        END AS sub_acquisition_type,\r\n        port_in.operator_name AS sub_port_in_carrier,\r\n        msisdns.sub_deactivation_date AS sub_deactivation_date,\r\n        CASE WHEN msisdns.sub_deactivation_date IS NOT NULL\r\n                AND msisdns.sub_deactivation_date != '9999-01-01'\r\n                AND msisdns.sub_deactivation_date <= '{{lt_execution_date}}'\r\n                AND ax.sub_deactivation_reason IS NOT NULL THEN ax.sub_deactivation_reason\r\n            WHEN msisdns.sub_deactivation_date IS NULL OR msisdns.sub_deactivation_date = '9999-01-01' THEN 'NOT APPLICABLE'\r\n            ELSE ax.sub_deactivation_reason\r\n        END AS sub_deactivation_reason,\r\n        CASE WHEN msisdns.sub_deactivation_date > '{{lt_execution_date}}' OR msisdns.sub_deactivation_date IS NULL then 'NOT APPLICABLE'\r\n            WHEN ax.sub_deactivation_reason = 'PORT OUT' THEN NVL(port_out.operator, 'MISSING')\r\n            WHEN ax.sub_deactivation_reason != 'PORT OUT' AND ax.sub_deactivation_reason IS NOT NULL THEN 'NOT APPLICABLE'\r\n            ELSE 'NOT APPLICABLE'\r\n        END AS sub_port_out_carrier,\r\n        ax.sub_contract_start AS sub_contract_start_date,\r\n        ax.sub_contract_end AS sub_contract_end_date,\r\n        'POSTPAID' AS sub_type,\r\n        0 AS sub_balance_amt,\r\n        NVL(plans.package_name, CASE WHEN msisdns.x_package_code = '' THEN msisdns.prod_id ELSE msisdns.x_package_code END) AS  sub_rate_plan_name,\r\n        NVL(CAST(plans.price AS DECIMAL(20, 2)), 0) AS sub_rate_plan_monthly_fee,\r\n        c.sub_email AS sub_email,\r\n        CASE WHEN b.sub_bad_debt != 1 AND out_bar.outbound_bar_flag = 1 THEN 1 ELSE 0 END AS sub_bad_debt,\r\n        'MISSING' AS sub_prefered_channel,\r\n        CASE WHEN consent.telemarketing_consent_exclusion = 1 THEN 1\r\n            ELSE 0\r\n        END AS sub_do_not_call,\r\n        CASE WHEN consent.sms_consent_exclusion = 1 THEN 1\r\n            ELSE 0\r\n        END AS sub_do_not_sms,\r\n        CASE WHEN consent.email_consent_exclusion = 1 THEN 1\r\n            ELSE 0\r\n        END AS sub_do_not_email,\r\n        CASE WHEN consent.direct_marketing_exclusion = 1 THEN 1\r\n            ELSE 0\r\n        END AS sub_do_not_contact,\r\n        msisdns.row_id AS a_row_id, \r\n        b.row_id AS b_row_id, \r\n        c.row_id AS c_row_id, \r\n        ax.row_id AS ax_row_id,\r\n        ax.suspended_start, \r\n        ax.suspended_end\r\n    FROM \r\n        (\r\n        SELECT \r\n            msisdns.sub_billing_id,\r\n            msisdns.cust_id,\r\n            msisdns.sub_msisdn,\r\n            msisdns.sub_acquisition_date,\r\n            msisdns.data_source, \r\n            a.sub_status_original,\r\n            a.row_id,\r\n            prod_id,\r\n            x_package_code,\r\n            a.owner_con_id,\r\n            a.bill_accnt_id,\r\n            a.sub_deactivation_date\r\n        FROM \r\n            (\r\n            SELECT \r\n                sub_billing_id, \r\n                cust_id,\r\n                sub_msisdn,\r\n                sub_acquisition_date,\r\n                data_source\r\n            FROM this_days_subscribers AS msisdns \r\n            WHERE rn = 1\r\n            ) msisdns\r\n        LEFT JOIN asset_ids a\r\n        ON a.sub_msisdn = msisdns.sub_msisdn\r\n            AND a.sub_acquisition_date = msisdns.sub_acquisition_date\r\n        ) msisdns\r\n\r\n        LEFT JOIN accounts_today b \r\n        ON b.row_id = msisdns.bill_accnt_id\r\n        \r\n        LEFT JOIN outbound_bar out_bar\r\n        ON out_bar.account_no = msisdns.cust_id\r\n\r\n        LEFT JOIN asset_x ax \r\n        ON ax.row_id = msisdns.row_id\r\n        \r\n        LEFT JOIN contacts c \r\n        ON c.row_id = msisdns.owner_con_id\r\n        \r\n        LEFT JOIN port_in AS port_in \r\n        ON CAST(port_in.msisdn AS STRING) = msisdns.sub_msisdn\r\n            AND to_date(port_in.porting_date) = to_date(msisdns.sub_acquisition_date)\r\n        \r\n        LEFT JOIN port_out \r\n        ON CAST(port_out.msisdn AS STRING) = msisdns.sub_msisdn\r\n        \r\n        LEFT JOIN consent \r\n        ON CAST(consent.msisdn AS STRING) = msisdns.sub_msisdn\r\n        AND CAST(consent.asset_row_id AS STRING) = msisdns.row_id\r\n        \r\n        LEFT JOIN plans \r\n        ON plans.sub_row_id = msisdns.row_id\r\n),\r\n\r\nsubscribers_with_plans as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id, \r\n        sub_msisdn, \r\n        sub_status_original, \r\n        sub_acquisition_date, \r\n        data_source, \r\n        sub_acquisition_type,\r\n        sub_port_in_carrier, \r\n        sub_deactivation_date, \r\n        sub_deactivation_reason,\r\n        sub_port_out_carrier, \r\n        sub_contract_start_date,\r\n        sub_contract_end_date, \r\n        sub_type, \r\n        sub_balance_amt,\r\n        sub_rate_plan_name,\r\n        sub_rate_plan_monthly_fee,\r\n        sub_email, \r\n        sub_bad_debt,\r\n        sub_prefered_channel, \r\n        sub_do_not_call, \r\n        sub_do_not_sms, \r\n        sub_do_not_email, \r\n        sub_do_not_contact, \r\n        a_row_id, \r\n        b_row_id,\r\n        c_row_id, \r\n        ax_row_id, \r\n        suspended_start, \r\n        suspended_end\r\n    FROM sub_with_joins\r\n    WHERE NVL(sub_deactivation_date, '9999-01-01') >= '{{date_sub_90}}'\r\n),\r\n\r\nsubscriber_snapshot_today as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id, \r\n        a.sub_msisdn, \r\n        sub_status, \r\n        sub_status_original, \r\n        sub_acquisition_date,\r\n        sub_acquisition_type, \r\n        sub_port_in_carrier, \r\n        sub_deactivation_date, \r\n        sub_deactivation_reason, \r\n        sub_port_out_carrier,\r\n        sub_contract_start_date, \r\n        sub_contract_end_date, \r\n        sub_type, \r\n        sub_balance_amt, \r\n        sub_rate_plan_name,\r\n        sub_rate_plan_monthly_fee, \r\n        sub_bad_debt,\r\n        0 AS sub_network_active,\r\n        NVL(sub_email, 'MISSING') AS sub_email, \r\n        sub_prefered_channel, \r\n        sub_do_not_call, \r\n        sub_do_not_sms, \r\n        sub_do_not_email, \r\n        sub_do_not_contact, \r\n        '{{lt_execution_date}}' AS dt\r\n    FROM (\r\n        SELECT \r\n            sub_billing_id, \r\n            cust_id, \r\n            sub_msisdn,\r\n            data_source,\r\n            sub_status,\r\n            sub_status_original,\r\n            sub_acquisition_date,\r\n            sub_acquisition_type,\r\n            sub_port_in_carrier,\r\n            sub_deactivation_date,\r\n            sub_deactivation_reason,\r\n            sub_port_out_carrier,\r\n            sub_contract_start_date,\r\n            sub_contract_end_date,\r\n            sub_type,\r\n            sub_balance_amt,\r\n            sub_rate_plan_name,\r\n            sub_rate_plan_monthly_fee,\r\n            sub_bad_debt,\r\n            sub_email,\r\n            sub_prefered_channel,\r\n            sub_do_not_call,\r\n            sub_do_not_sms,\r\n            sub_do_not_email,\r\n            sub_do_not_contact,\r\n            row_number() OVER(PARTITION BY sub_msisdn, sub_status ORDER BY sub_acquisition_date DESC, data_source ASC) AS rn\r\n        FROM (\r\n            SELECT \r\n                ad.sub_billing_id, \r\n                ad.cust_id, \r\n                ad.sub_msisdn,\r\n                ad.data_source,\r\n                CASE WHEN ad.ax_row_id IS NULL AND sn.sub_status IS NULL \r\n                        AND  SUBSTRING(ad.sub_deactivation_date, 1, 10) <= '{{lt_execution_date}}' THEN 'CHURNED'\r\n                     \r\n                     WHEN ad.ax_row_id IS NULL AND sn.sub_status IS NULL \r\n                        AND  SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}' THEN 'ACTIVE'\r\n\r\n                     WHEN ad.ax_row_id IS NULL AND ad.a_row_id IS NULL \r\n                         AND sn.sub_status_original = 'Suspended' THEN 'DEACTIVATED'\r\n\r\n                     WHEN ad.ax_row_id IS NULL AND ad.a_row_id IS NULL THEN sn.sub_status\r\n\r\n                     WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) <= '{{lt_execution_date}}') OR\r\n                          (SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01'\r\n                            AND ad.sub_status_original = 'Inactive') THEN 'CHURNED'\r\n\r\n                     WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')\r\n                        AND SUBSTRING(ad.suspended_start, 1, 10) <= '{{lt_execution_date}}'\r\n                        AND (SUBSTRING(ad.suspended_end, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) = '9999-01-01'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) IS NULL) THEN 'DEACTIVATED'\r\n\r\n                     WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')\r\n                        AND (SUBSTRING(ad.suspended_start, 1, 10) <= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) = '9999-01-01')\r\n                        AND SUBSTRING(ad.suspended_end, 1, 10) > '{{lt_execution_date}}' THEN 'DEACTIVATED'\r\n\r\n                     WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')  \r\n                        AND (SUBSTRING(ad.suspended_start, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) = '9999-01-01'\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) > '{{lt_execution_date}}')\r\n                        AND (SUBSTRING(ad.suspended_end, 1, 10) <= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) >= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_end, 1, 10) = '9999-01-01') THEN 'ACTIVE'\r\n\r\n                     WHEN (SUBSTRING(ad.sub_deactivation_date, 1, 10) > '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.sub_deactivation_date, 1, 10) = '9999-01-01')\r\n                        AND (SUBSTRING(ad.suspended_start, 1, 10) <= '{{lt_execution_date}}'\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) IS NULL\r\n                            OR SUBSTRING(ad.suspended_start, 1, 10) = '9999-01-01')\r\n                        AND SUBSTRING(ad.suspended_end, 1, 10) <= '{{lt_execution_date}}' THEN 'ACTIVE'\r\n                END AS sub_status,\r\n\r\n                CASE WHEN ad.sub_status_original IS NOT NULL THEN ad.sub_status_original\r\n                     WHEN sn.sub_status_original IS NOT NULL THEN sn.sub_status_original\r\n                END AS sub_status_original,\r\n\r\n                CASE WHEN ad.sub_acquisition_date IS NOT NULL AND ad.sub_acquisition_date != '9999-01-01' \r\n                        THEN ad.sub_acquisition_date\r\n                     WHEN sn.sub_acquisition_date IS NOT NULL AND sn.sub_acquisition_date != '9999-01-01' \r\n                        THEN sn.sub_acquisition_date\r\n                END AS sub_acquisition_date,\r\n\r\n                CASE WHEN ad.sub_acquisition_type IS NOT NULL THEN ad.sub_acquisition_type\r\n                     WHEN sn.sub_acquisition_type IS NOT NULL THEN sn.sub_acquisition_type\r\n                     ELSE 'REGULAR'\r\n                END AS sub_acquisition_type,\r\n\r\n                NVL(CASE WHEN ad.sub_port_in_carrier IS NOT NULL THEN ad.sub_port_in_carrier\r\n                         WHEN sn.sub_port_in_carrier IS NOT NULL THEN sn.sub_port_in_carrier\r\n                         ELSE 'NOT APPLICABLE' END, 'MISSING') AS sub_port_in_carrier,\r\n\r\n                CASE WHEN ad.sub_deactivation_date IS NOT NULL THEN ad.sub_deactivation_date\r\n                     WHEN sn.sub_deactivation_date IS NOT NULL THEN sn.sub_deactivation_date\r\n                     ELSE 'MISSING'\r\n                END AS sub_deactivation_date,\r\n\r\n                CASE WHEN ad.sub_deactivation_reason IS NOT NULL THEN ad.sub_deactivation_reason\r\n                     WHEN ad.sub_deactivation_reason IS NULL AND sn.sub_deactivation_reason IS NOT NULL \r\n                         THEN sn.sub_deactivation_reason\r\n                     ELSE 'MISSING'\r\n                END AS sub_deactivation_reason,\r\n\r\n                CASE WHEN ad.sub_deactivation_reason = 'PORT OUT' THEN NVL(UPPER(ad.sub_port_out_carrier), 'MISSING')\r\n                     WHEN sn.sub_deactivation_reason = 'PORT OUT' THEN sn.sub_port_out_carrier\r\n                     ELSE 'NOT APPLICABLE'\r\n                END AS sub_port_out_carrier,\r\n\r\n                NVL(CASE WHEN ad.ax_row_id IS NOT NULL THEN ad.sub_contract_start_date\r\n                         WHEN sn.sub_contract_start_date IS NOT NULL \r\n                             THEN sn.sub_contract_start_date END, '9999-01-01') AS sub_contract_start_date,\r\n\r\n                NVL(CASE WHEN ad.ax_row_id IS NOT NULL THEN ad.sub_contract_end_date\r\n                         WHEN sn.sub_contract_end_date IS NOT NULL \r\n                             THEN sn.sub_contract_end_date END, '9999-01-01') AS sub_contract_end_date,\r\n                \r\n                CASE WHEN ad.sub_type IS NOT NULL THEN ad.sub_type\r\n                     WHEN sn.sub_type IS NOT NULL THEN sn.sub_type\r\n                END AS sub_type,\r\n\r\n                CASE WHEN ad.sub_balance_amt IS NOT NULL THEN ad.sub_balance_amt\r\n                     WHEN sn.sub_balance_amt IS NOT NULL THEN sn.sub_balance_amt\r\n                END AS sub_balance_amt,\r\n\r\n                CASE WHEN ad.sub_rate_plan_name IS NOT NULL THEN ad.sub_rate_plan_name\r\n                     WHEN sn.sub_rate_plan_name IS NOT NULL THEN sn.sub_rate_plan_name\r\n                END AS sub_rate_plan_name,\r\n\r\n                CASE WHEN ad.sub_rate_plan_monthly_fee IS NOT NULL THEN ad.sub_rate_plan_monthly_fee\r\n                     WHEN sn.sub_rate_plan_monthly_fee IS NOT NULL THEN sn.sub_rate_plan_monthly_fee\r\n                END AS sub_rate_plan_monthly_fee,\r\n\r\n                CASE WHEN ad.sub_bad_debt IS NOT NULL THEN ad.sub_bad_debt\r\n                     WHEN sn.sub_bad_debt IS NOT NULL THEN sn.sub_bad_debt\r\n                END AS sub_bad_debt,\r\n\r\n                CASE WHEN ad.sub_email IS NOT NULL THEN ad.sub_email\r\n                     WHEN sn.sub_email IS NOT NULL THEN sn.sub_email\r\n                     ELSE 'MISSING'\r\n                END AS sub_email,\r\n\r\n                CASE WHEN ad.sub_prefered_channel IS NOT NULL THEN ad.sub_prefered_channel\r\n                     WHEN sn.sub_prefered_channel IS NOT NULL THEN sn.sub_prefered_channel\r\n                END AS sub_prefered_channel,\r\n\r\n                CASE WHEN ad.sub_do_not_call IS NOT NULL THEN ad.sub_do_not_call\r\n                     WHEN sn.sub_do_not_call IS NOT NULL THEN sn.sub_do_not_call\r\n                END AS sub_do_not_call,\r\n\r\n                CASE WHEN ad.sub_do_not_sms IS NOT NULL THEN ad.sub_do_not_sms\r\n                     WHEN sn.sub_do_not_sms IS NOT NULL THEN sn.sub_do_not_sms\r\n                END AS sub_do_not_sms,\r\n\r\n                CASE WHEN ad.sub_do_not_email IS NOT NULL THEN ad.sub_do_not_email\r\n                     WHEN sn.sub_do_not_email IS NOT NULL THEN sn.sub_do_not_email\r\n                END AS sub_do_not_email,\r\n\r\n                CASE WHEN ad.sub_do_not_contact IS NOT NULL THEN ad.sub_do_not_contact\r\n                     WHEN sn.sub_do_not_contact IS NOT NULL THEN sn.sub_do_not_contact\r\n                END AS sub_do_not_contact\r\n            FROM subscribers_with_plans AS ad\r\n            LEFT JOIN subscriber_snapshot_yesterday sn \r\n            ON sn.sub_billing_id = ad.sub_billing_id \r\n                AND sn.sub_acquisition_date = ad.sub_acquisition_date\r\n            ) a\r\n        WHERE NVL(substring(sub_deactivation_date, 1, 10), '9999-01-01') >= '{{date_sub_90}}'\r\n        ) a \r\n    WHERE rn = 1\r\n)\r\n\r\nSELECT \r\n    sub_billing_id, \r\n    cust_id, \r\n    sub_msisdn, \r\n    sub_status, \r\n    sub_status_original, \r\n    sub_acquisition_date,\r\n    sub_acquisition_type, \r\n    sub_port_in_carrier, \r\n    sub_deactivation_date, \r\n    sub_deactivation_reason, \r\n    sub_port_out_carrier,\r\n    sub_contract_start_date, \r\n    sub_contract_end_date, \r\n    sub_type, \r\n    sub_balance_amt, \r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee, \r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email, \r\n    sub_prefered_channel, \r\n    sub_do_not_call, \r\n    sub_do_not_sms, \r\n    sub_do_not_email, \r\n    sub_do_not_contact, \r\n    dt\r\nFROM subscriber_snapshot_today", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_assets_x", "package": null, "version": null}, {"name": "stg_tmp_contact", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_discounts_res", "package": null, "version": null}, {"name": "int_lt_sub_consent_res", "package": null, "version": null}, {"name": "int_lt_this_day_subscribers_res", "package": null, "version": null}, {"name": "int_lt_outbound_bar_res", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_plans_res", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_yesterday_res", "package": null, "version": null}, {"name": "int_lt_this_day_subscribers_res", "package": null, "version": null}, {"name": "int_lt_account_today_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_tmp_contact", "model.bdh_dbt_models.stg_tmp_product", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "model.bdh_dbt_models.int_lt_sub_consent_res", "model.bdh_dbt_models.int_lt_this_day_subscribers_res", "model.bdh_dbt_models.int_lt_outbound_bar_res", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.int_lt_account_today_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_consent_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_consent_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_consent_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_consent_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_consent_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_sub_consent_res"], "alias": "int_lt_sub_consent_res", "checksum": {"name": "sha256", "checksum": "188a68d8d008518b90708895197a202b62b99fd44cacf50f60e8a35784f56f93"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0174747, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nnotification_consent as (\r\n    SELECT \r\n        asset_id,\r\n        preference_name,\r\n        preference_value\r\n    FROM\r\n        (\r\n        SELECT \r\n            asset_id,\r\n            preference_name,\r\n            preference_value,\r\n            row_number() over (partition BY asset_id, preference_name ORDER BY last_updated DESC) AS rn\r\n        FROM bdh_raw_lt.siebel.raw_lt_notifications_exacaster \r\n        WHERE preference_name IN ('Email marketing', 'Telemarketing', 'SMS marketing') \r\n        ) ntf\r\n    WHERE preference_value = 'No'\r\n      AND rn = 1    \r\n),\r\n\r\ndirect_marketing_consent as (\r\n    SELECT \r\n        assetid,\r\n        customerconsentvalue\r\n    FROM\r\n        (\r\n        SELECT \r\n            assetid,\r\n            customerconsentvalue,\r\n            row_number() over (partition BY assetid\r\n                                 ORDER BY cast(customerconsentupdatetime AS string) DESC) AS rn\r\n       FROM bdh_raw_lt.siebel.raw_lt_consent_exacaster cnsnt\r\n       WHERE consenttitle = 'DIRECT_MARKETING' \r\n       ) a\r\n    WHERE customerconsentvalue = 'Yes'\r\n        AND rn = 1  \r\n),\r\n\r\nconsent as (\r\n    SELECT\r\n        ou_num,\r\n        x_primary_attr_value_phonenbr as msisdn,\r\n        asset_row_id,\r\n        CASE WHEN customerconsentvalue='Yes' THEN 0 ELSE 1 END as direct_marketing_exclusion,\r\n        CASE WHEN pref_email.preference_value='No' THEN 1 ELSE 0 END as email_consent_exclusion,\r\n        CASE WHEN pref_tele.preference_value='No' THEN 1 ELSE 0 END as telemarketing_consent_exclusion,\r\n        CASE WHEN pref_sms.preference_value='No' THEN 1 ELSE 0 END as sms_consent_exclusion,\r\n        acc_map.dt\r\n        FROM (\r\n            SELECT \r\n                ac.ou_num,\r\n                sa.x_primary_attr_value_phonenbr,\r\n                sa.row_id as asset_row_id,\r\n                sa.status_cd,\r\n                '{{lt_execution_date}}' as dt\r\n            FROM v_assets sa\r\n            LEFT JOIN v_accounts ac \r\n            ON ac.row_id = sa.bill_accnt_id\r\n            WHERE ac.ou_type_cd = 'Residential'\r\n                AND x_primary_attr_name='Postpaid TN' \r\n            ) acc_map\r\n\r\n    LEFT JOIN direct_marketing_consent con \r\n    ON con.assetid = acc_map.asset_row_id \r\n\r\n    LEFT JOIN\r\n    (SELECT \r\n        asset_id,\r\n        preference_name,\r\n        preference_value\r\n    FROM notification_consent\r\n    WHERE preference_name = 'Email marketing'\r\n    ) pref_email \r\n    ON pref_email.asset_id = acc_map.asset_row_id \r\n\r\n    LEFT JOIN\r\n    (SELECT \r\n        asset_id,\r\n        preference_name,\r\n        preference_value\r\n    FROM notification_consent\r\n    WHERE preference_name = 'Telemarketing'\r\n    ) pref_tele \r\n    ON pref_tele.asset_id = acc_map.asset_row_id \r\n\r\n    LEFT JOIN\r\n    (\r\n    SELECT \r\n        asset_id,\r\n        preference_name,\r\n        preference_value\r\n    FROM notification_consent\r\n    WHERE preference_name = 'SMS marketing'\r\n    ) pref_sms \r\n    ON pref_sms.asset_id = acc_map.asset_row_id \r\n)\r\n\r\nSELECT \r\n    ou_num,\r\n    msisdn,\r\n    asset_row_id,\r\n    direct_marketing_exclusion,\r\n    email_consent_exclusion,\r\n    telemarketing_consent_exclusion,\r\n    sms_consent_exclusion,\r\n    dt\r\nFROM consent", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_snapshot_discounts_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_snapshot_discounts_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_snapshot_discounts_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_sub_snapshot_discounts_res"], "alias": "int_lt_sub_snapshot_discounts_res", "checksum": {"name": "sha256", "checksum": "557588f80a0f1e2c02a32966739e432d32e9093875351988675bb90aab10ff49"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.022993, "relation_name": null, "raw_code": "with v_assets_xa as (select * from {{ ref(\"stg_tmp_assets_xa\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\ndiscounts_prep as (\r\n    SELECT \r\n        asset_id,\r\n        to_date(created) as created_dt,\r\n        max(CASE WHEN attr_name IN ('Discount Value') THEN char_val_other END) char_val_other,\r\n        max(CASE WHEN attr_name IN ('DurationEndDate') THEN date_val END) as disc_date_val, \r\n        max(CASE WHEN attr_name IN ('Discount Period') THEN num_val END) as disc_num_val\r\n    FROM v_assets_xa\r\n    WHERE attr_name IN ('DurationEndDate', 'Discount Period', 'Discount Value')\r\n    GROUP BY asset_id, to_date(created)\r\n),\r\n\r\ndiscounts as (\r\n    SELECT \r\n        asset_id, \r\n        max(CASE WHEN disc_date_val != '' THEN to_date(disc_date_val)\r\n                WHEN disc_date_val = '' AND disc_num_val != '' THEN to_date(ADD_MONTHS(DATEADD(day, -1, created_dt), cast(disc_num_val as int)))\r\n                ELSE NULL \r\n            END) AS discount_end_date\r\n    FROM discounts_prep\r\n    WHERE char_val_other != '' \r\n        AND disc_num_val != '' \r\n        AND disc_date_val != ''\r\n    GROUP BY asset_id\r\n),\r\n\r\ndiscounts_service_period as (\r\n     SELECT \r\n        asset_id, \r\n        max(CASE WHEN disc_date_val != '' THEN to_date(disc_date_val)\r\n                WHEN disc_date_val = '' AND disc_num_val != '' THEN to_date(add_months(DATEADD(day, -1, created_dt), cast(disc_num_val as int)))\r\n                ELSE NULL \r\n            END) AS discount_end_date\r\n    FROM discounts_prep\r\n    WHERE char_val_other != '' \r\n        AND disc_num_val != '' \r\n    GROUP BY asset_id\r\n),\r\n\r\ndiscounts_period_asset as (\r\n    SELECT\r\n        ou_num,\r\n        x_primary_attr_value_phonenbr,\r\n        par_asset_id,\r\n        status_cd,\r\n        discount_name,\r\n        discount_end_date,\r\n        discount_start_dt\r\n    FROM \r\n        (\r\n        SELECT \r\n            ou_num,\r\n            x_primary_attr_value_phonenbr,\r\n            par_asset_id,\r\n            status_cd,\r\n            name AS discount_name,\r\n            discount_end_date,\r\n            SUBSTRING(CAST(x_activation_dt AS STRING),1,10) AS discount_start_dt,\r\n            row_number() over(partition by par_asset_id, name order by discount_end_date desc) as rn\r\n        FROM\r\n            (\r\n            SELECT \r\n                ac.ou_num,\r\n                sa2.x_primary_attr_value_phonenbr,\r\n                sa.par_asset_id,\r\n                sa.status_cd,\r\n                sa.x_activation_dt,\r\n                pr.name,\r\n                pr.type,\r\n                NVL(discounts.discount_end_date, dp.discount_end_date) as discount_end_date\r\n            FROM v_assets sa\r\n            LEFT JOIN v_accounts ac\r\n            ON ac.row_id = sa.bill_accnt_id\r\n            LEFT JOIN v_assets sa2 \r\n            ON sa.par_asset_id = sa2.row_id\r\n            LEFT JOIN v_product pr \r\n            ON sa.prod_id = pr.row_id\r\n            LEFT JOIN discounts discounts \r\n            ON sa.row_id = discounts.asset_id\r\n            LEFT JOIN discounts_service_period dp \r\n            ON sa.row_id = dp.asset_id\r\n            WHERE sa2.status_cd != 'Inactive'\r\n                AND sa.status_cd != 'Inactive'\r\n                AND ac.ou_type_cd = 'Residential'\r\n                AND pr.name IN ('Discount on subscription from total bill',\r\n                            'Discount on subscription from services',\r\n                            'Discount of monthly charges of services')   \r\n            ) a \r\n        ) disc\r\n    WHERE discount_end_date IS NOT NULL\r\n        AND rn = 1\r\n)\r\n\r\nSELECT\r\n    ou_num,\r\n    x_primary_attr_value_phonenbr,\r\n    par_asset_id,\r\n    status_cd,\r\n    discount_name,\r\n    discount_end_date,\r\n    discount_start_dt\r\nFROM discounts_period_asset", "language": "sql", "refs": [{"name": "stg_tmp_assets_xa", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_snapshot_plans_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_snapshot_plans_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_snapshot_plans_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_sub_snapshot_plans_res"], "alias": "int_lt_sub_snapshot_plans_res", "checksum": {"name": "sha256", "checksum": "208980b291f986c05dea083c4ff63d026079b34cfc023ef045995e8ae7e9b8e8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.024998, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_assets_x as (select * from {{ ref(\"stg_tmp_assets_x\") }}),\r\n\r\nproduct_price as (select * from {{ ref(\"int_lt_product_price_res\")}}),\r\n\r\nplans_stg1 as (\r\n    SELECT \r\n        ou_num,\r\n        x_primary_attr_value_phonenbr,\r\n        status_cd,\r\n        par_asset_id,\r\n        x_activation_dt,\r\n        last_upd,\r\n        end_dt,\r\n        attrib_32,\r\n        attrib_31,\r\n        type,\r\n        name,\r\n        pricing,\r\n        activation_dt_lead\r\n    FROM    \r\n        (\r\n        SELECT \r\n            ac.ou_num,\r\n            sa2.x_primary_attr_value_phonenbr,\r\n            sa.status_cd,\r\n            sa.par_asset_id,\r\n            sa.x_activation_dt,\r\n            sa.last_upd,\r\n            sa.end_dt,\r\n            ax.attrib_32,\r\n            ax.attrib_31,\r\n            price.type,\r\n            price.name,\r\n            price.pricing,\r\n            CASE\r\n                WHEN sa.end_dt IS NOT NULL AND sa.end_dt < sa.x_activation_dt THEN sa.end_dt\r\n                ELSE lead(sa.x_activation_dt, 1) over (partition BY sa.par_asset_id, price.type \r\n                ORDER BY sa.x_activation_dt, sa.status_cd DESC)\r\n            END AS activation_dt_lead\r\n        FROM v_assets sa\r\n        \r\n        LEFT JOIN v_accounts ac \r\n        ON ac.row_id = sa.bill_accnt_id\r\n        \r\n        LEFT JOIN v_assets sa2 \r\n        ON sa.par_asset_id = sa2.row_id\r\n        \r\n        LEFT JOIN v_assets_x ax \r\n        ON sa.row_id = ax.row_id\r\n        \r\n        LEFT JOIN product_price price \r\n        ON sa.prod_id = price.row_id\r\n        \r\n        WHERE ac.ou_type_cd = 'Residential'\r\n            AND (price.TYPE='Price Plan'\r\n                OR (price.TYPE='Billing Product'\r\n                    AND lower(price.name) LIKE '%sms%')\r\n                OR price.TYPE='Data Bucket')\r\n        ) pr\r\n    WHERE to_date(x_activation_dt) <= '{{lt_execution_date}}'\r\n              AND (to_date(activation_dt_lead) > '{{lt_execution_date}}'\r\n                   OR status_cd='Active')\r\n),\r\n\r\nplans_stg2 as (\r\n    SELECT \r\n        par_asset_id,\r\n        type,\r\n        LISTAGG(name, ';') as name,\r\n        SUM(pricing) as pricing\r\n    FROM plans_stg1\r\n    GROUP BY par_asset_id,\r\n        type\r\n),\r\n\r\nplans_stg3 as (\r\n    SELECT \r\n        par_asset_id AS sub_row_id,\r\n        CASE WHEN type = 'Price Plan' THEN name\r\n            ELSE NULL\r\n        END AS price_plan_name,\r\n        CASE WHEN type = 'Data Bucket' THEN name\r\n            ELSE NULL\r\n        END AS data_bucket_name,\r\n        CASE WHEN type = 'Billing Product' THEN name\r\n            ELSE NULL\r\n        END AS sms_bucket_name,\r\n        CASE WHEN type = 'Price Plan' THEN pricing\r\n            ELSE 0\r\n        END AS price_plan_price,\r\n        CASE WHEN type = 'Data Bucket' THEN pricing\r\n            ELSE 0\r\n        END AS data_bucket_price,\r\n        CASE WHEN type = 'Billing Product' THEN pricing\r\n            ELSE 0\r\n        END AS sms_bucket_price,\r\n    FROM plans_stg2\r\n),\r\n\r\nplans_stg4 as (\r\n    SELECT\r\n        sub_row_id,\r\n        max(price_plan_name) as price_plan_name,\r\n        max(data_bucket_name) as data_bucket_name,\r\n        max(sms_bucket_name) as sms_bucket_name,\r\n        max(price_plan_price) as price_plan_price,\r\n        max(data_bucket_price) as data_bucket_price,\r\n        max(sms_bucket_price) as sms_bucket_price\r\n    FROM plans_stg3\r\n    GROUP BY sub_row_id\r\n),\r\n\r\nplans_stg5 as (\r\n    SELECT \r\n        sub_row_id,\r\n        concat_ws(';', NVL(price_plan_name, ''), NVL(data_bucket_name, ''), NVL(sms_bucket_name, '')) as package_name,\r\n        price_plan_price + data_bucket_price + sms_bucket_price as price\r\n    FROM plans_stg4\r\n)\r\n\r\nselect \r\n    sub_row_id,\r\n    package_name,\r\n    price\r\nfrom plans_stg5", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_assets_x", "package": null, "version": null}, {"name": "int_lt_product_price_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.int_lt_product_price_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_snapshot_yesterday_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_snapshot_yesterday_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_snapshot_yesterday_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_sub_snapshot_yesterday_res"], "alias": "int_lt_sub_snapshot_yesterday_res", "checksum": {"name": "sha256", "checksum": "2071bd9be07be1c24b4dc77f8917751a070f0ec80f36e5f592062ecff86c10fc"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0309963, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n{% set dt = modules.datetime.datetime.strptime(lt_execution_date, '%Y-%m-%d') %}\r\n{% set date_sub_1_tmp = dt - modules.datetime.timedelta(days=1) %}\r\n{% set date_sub_1 = date_sub_1_tmp.strftime(\"%Y-%m-%d\") %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nproduct_price as (select * from {{ ref(\"int_lt_product_price_res\")}}),\r\n\r\nall_todays_accounts as (SELECT * FROM {{ ref(\"int_lt_all_todays_accounts_res\")}}),\r\n\r\nsubscriber_snapshot_yesterday_tmp as (\r\n    SELECT \r\n        sub_billing_id,\r\n        cust_id,\r\n        sub_msisdn,\r\n        sub_status,\r\n        sub_status_original,\r\n        sub_acquisition_date,\r\n        sub_acquisition_type,\r\n        sub_port_in_carrier,\r\n        sub_deactivation_date,\r\n        sub_deactivation_reason,\r\n        sub_port_out_carrier,\r\n        sub_contract_start_date,\r\n        sub_contract_end_date,\r\n        sub_type,\r\n        sub_balance_amt,\r\n        sub_rate_plan_name,\r\n        sub_rate_plan_monthly_fee,\r\n        sub_bad_debt,\r\n        sub_network_active,\r\n        sub_email,\r\n        sub_prefered_channel,\r\n        sub_do_not_call,\r\n        sub_do_not_sms,\r\n        sub_do_not_email,\r\n        sub_do_not_contact,\r\n        subscriber_type,\r\n        primary_segment,\r\n        wsc_admin,\r\n        dt\r\n    FROM bdh_lt.private_dm.lt_subscriber_snapshot_residential\r\n    WHERE dt = '{{ date_sub_1 }}'\r\n),\r\n\r\nsubscriber_snapshot_yesterday as (\r\n    SELECT \r\n        sub_yest.sub_billing_id,\r\n        sub_yest.cust_id,\r\n        sub_yest.sub_msisdn,\r\n        sub_yest.sub_status,\r\n        sub_yest.sub_status_original,\r\n        sub_yest.sub_acquisition_date,\r\n        sub_yest.sub_acquisition_type,\r\n        sub_yest.sub_port_in_carrier,\r\n        sub_yest.sub_deactivation_date,\r\n        sub_yest.sub_deactivation_reason,\r\n        sub_yest.sub_port_out_carrier,\r\n        sub_yest.sub_contract_start_date,\r\n        sub_yest.sub_contract_end_date,\r\n        sub_yest.sub_type,\r\n        sub_yest.sub_balance_amt,\r\n        sub_yest.sub_rate_plan_name,\r\n        sub_yest.sub_rate_plan_monthly_fee,\r\n        sub_yest.sub_bad_debt,\r\n        sub_yest.sub_network_active,\r\n        sub_yest.sub_email,\r\n        sub_yest.sub_prefered_channel,\r\n        sub_yest.sub_do_not_call,\r\n        sub_yest.sub_do_not_sms,\r\n        sub_yest.sub_do_not_email,\r\n        sub_yest.sub_do_not_contact,\r\n        sub_yest.subscriber_type,\r\n        sub_yest.primary_segment,\r\n        sub_yest.wsc_admin,\r\n        sub_yest.dt\r\n    FROM subscriber_snapshot_yesterday_tmp sub_yest\r\n    INNER JOIN \r\n    (\r\n    SELECT\r\n        ou_num,\r\n        x_primary_attr_value_phonenbr\r\n    FROM    \r\n        (\r\n        SELECT \r\n            row_id,\r\n            ou_num,\r\n            ou_type_cd,\r\n            row_number() over(partition by ou_num order by last_upd desc) as rn\r\n        FROM all_todays_accounts \r\n        ) ac \r\n        INNER JOIN\r\n        (\r\n        SELECT \r\n            bill_accnt_id,\r\n            x_primary_attr_value_phonenbr,\r\n            prod_id,\r\n            row_number() over(partition by x_primary_attr_value_phonenbr order by last_upd desc) as rn\r\n        FROM v_assets\r\n        ) sa  \r\n        ON ac.row_id = sa.bill_accnt_id\r\n        INNER JOIN product_price price \r\n        ON sa.prod_id = price.row_id\r\n        \r\n    WHERE ac.rn = 1\r\n        AND ac.ou_type_cd = 'Residential'\r\n        AND sa.rn = 1\r\n    ) saac\r\n    ON sub_yest.cust_id = saac.ou_num\r\n        AND sub_yest.sub_msisdn = saac.x_primary_attr_value_phonenbr\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_status,\r\n    sub_status_original,\r\n    sub_acquisition_date,\r\n    sub_acquisition_type,\r\n    sub_port_in_carrier,\r\n    sub_deactivation_date,\r\n    sub_deactivation_reason,\r\n    sub_port_out_carrier,\r\n    sub_contract_start_date,\r\n    sub_contract_end_date,\r\n    sub_type,\r\n    sub_balance_amt,\r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee,\r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email,\r\n    sub_prefered_channel,\r\n    sub_do_not_call,\r\n    sub_do_not_sms,\r\n    sub_do_not_email,\r\n    sub_do_not_contact,\r\n    subscriber_type,\r\n    primary_segment,\r\n    wsc_admin,\r\n    dt\r\nFROM subscriber_snapshot_yesterday", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "int_lt_product_price_res", "package": null, "version": null}, {"name": "int_lt_all_todays_accounts_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.int_lt_product_price_res", "model.bdh_dbt_models.int_lt_all_todays_accounts_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_sub_type_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_sub_type_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_type_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_sub_type_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_sub_type_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_sub_type_res"], "alias": "int_lt_sub_type_res", "checksum": {"name": "sha256", "checksum": "8f898ee263eeb9f9e7895ae9df68a755a79db95e67698073df783bc64c145b19"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0379977, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nsubscriber_type_stg_1 as (\r\n    SELECT \r\n        v_accounts.ou_type_cd,\r\n        v_product.type,\r\n        v_assets.par_asset_id,\r\n        v_accounts.ou_num,\r\n        v_assets2.x_primary_attr_value_phonenbr,\r\n        v_accounts.x_primary_postpaid_seg_cd,\r\n        v_assets.end_dt,\r\n        v_assets.x_activation_dt AS price_plan_activation_date,\r\n        v_product2.type AS subscriber_type,\r\n        v_assets.status_cd\r\n    FROM v_assets \r\n    LEFT JOIN v_assets v_assets2\r\n    ON v_assets.par_asset_id = v_assets2.row_id\r\n    LEFT JOIN v_accounts\r\n    ON v_accounts.row_id = v_assets2.bill_accnt_id\r\n    LEFT JOIN v_product\r\n    ON v_product.row_id = v_assets.prod_id\r\n    LEFT JOIN v_product v_product2\r\n    ON v_product2.row_id = v_assets2.prod_id\r\n),\r\n\r\nsubscriber_type_stg_2 as (\r\n    SELECT \r\n        ou_num as ou_numb_sub,\r\n        x_primary_attr_value_phonenbr,\r\n        x_primary_postpaid_seg_cd as primary_segment,\r\n        subscriber_type,\r\n        '{{lt_execution_date}}' as dt,\r\n        row_number() over(partition by ou_num, x_primary_attr_value_phonenbr, dt order by price_plan_activation_date desc) as plan_activation_rank\r\n    FROM subscriber_type_stg_1\r\n    WHERE ou_type_cd = 'Residential'\r\n        AND type = 'Price Plan'\r\n        AND to_date(price_plan_activation_date) <=  '{{lt_execution_date}}'\r\n        AND ( to_date(end_dt) > '{{lt_execution_date}}'\r\n            OR status_cd in ('Active','Suspended')\r\n        )\r\n),\r\n\r\nsubscriber_type as (\r\n    SELECT \r\n        concat(ou_numb_sub, x_primary_attr_value_phonenbr) AS sub_billing_id,\r\n        primary_segment,\r\n        subscriber_type,\r\n        dt\r\n    FROM subscriber_type_stg_2\r\n    WHERE plan_activation_rank = 1\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    primary_segment,\r\n    subscriber_type,\r\n    dt\r\nFROM subscriber_type", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_this_day_subscribers_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_this_day_subscribers_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_this_day_subscribers_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_this_day_subscribers_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_this_day_subscribers_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_this_day_subscribers_res"], "alias": "int_lt_this_day_subscribers_res", "checksum": {"name": "sha256", "checksum": "c5324da72f3b51a7f3bb6ac8f80903b893d7666c6338e3a8f13db28db45e7027"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0429964, "relation_name": null, "raw_code": "{% set lt_execution_date = var('lt_execution_date') %}\r\n\r\nwith v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nsubscriber_snapshot_yesterday as (select * from {{ ref(\"int_lt_sub_snapshot_yesterday_res\")}}),\r\n\r\nall_todays_accounts as (SELECT * FROM {{ ref(\"int_lt_all_todays_accounts_res\")}}),\r\n\r\nproduct_price as (select * from {{ref(\"int_lt_product_price_res\")}}),\r\n\r\nassets_today as (\r\n    SELECT \r\n        row_id,\r\n        last_upd,\r\n        end_dt,\r\n        status_cd,\r\n        x_activation_dt,\r\n        x_primary_attr_name,\r\n        x_primary_attr_value_phonenbr,\r\n        par_asset_id,\r\n        x_package_code,\r\n        prod_id,\r\n        bill_accnt_id,\r\n        root_asset_id,\r\n        owner_con_id,\r\n        dt\r\n    FROM v_assets\r\n),\r\n\r\nasset_ids as ( \r\n    SELECT \r\n        row_id,\r\n        sub_msisdn,\r\n        owner_con_id,\r\n        bill_accnt_id,\r\n        sub_acquisition_date,\r\n        prod_id,\r\n        x_package_code,\r\n        rn,\r\n        sub_deactivation_date,\r\n        sub_status_original\r\n    FROM \r\n        (\r\n        SELECT \r\n            row_id,\r\n            sub_msisdn,\r\n            owner_con_id,\r\n            bill_accnt_id,\r\n            sub_acquisition_date,\r\n            prod_id,\r\n            x_package_code,\r\n            row_number() OVER(PARTITION BY sub_msisdn, sub_acquisition_date ORDER BY last_upd DESC) AS rn,\r\n            CASE WHEN CAST(end_dt as STRING) IS NOT NULL AND CAST(end_dt as STRING) != '' THEN SUBSTRING(CAST(end_dt as STRING), 1, 10)\r\n                ELSE '9999-01-01' \r\n                END AS sub_deactivation_date,\r\n            sub_status_original\r\n        FROM (\r\n            SELECT \r\n                row_id,\r\n                x_primary_attr_value_phonenbr AS sub_msisdn, \r\n                substring(CAST(x_activation_dt AS STRING), 1, 10) AS sub_acquisition_date,\r\n                last_upd,\r\n                owner_con_id,\r\n                bill_accnt_id,\r\n                CAST(end_dt AS STRING) AS end_dt,\r\n                prod_id,\r\n                x_package_code,\r\n                status_cd AS sub_status_original\r\n            FROM assets_today\r\n            WHERE x_primary_attr_name = 'Postpaid TN'\r\n                AND SUBSTRING(CAST(x_activation_dt AS STRING), 1, 10) <= '{{lt_execution_date}}'\r\n                AND x_activation_dt IS NOT NULL\r\n            ) a\r\n        ) a\r\n    WHERE rn = 1\r\n),\r\n\r\nsubscriber_snapshot_part_1 as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id, \r\n        sub_msisdn, \r\n        sub_acquisition_date, \r\n        2 as data_source,\r\n        0 AS active_plan,\r\n        dt,\r\n        sub_status  \r\n    FROM subscriber_snapshot_yesterday\r\n),\r\n\r\nsubscriber_snapshot_part_2 as (\r\n    SELECT \r\n        CONCAT(b.cust_id, a.sub_msisdn) AS sub_billing_id,\r\n        b.cust_id,\r\n        a.sub_msisdn,\r\n        SUBSTRING(CAST(a.sub_acquisition_date AS STRING), 1, 10) AS sub_acquisition_date,\r\n        1 as data_source, \r\n        NVL(price.active_plan, 0) AS active_plan,\r\n        '{{lt_execution_date}}' AS dt,\r\n        sub_status_original as sub_status\r\n    FROM (\r\n        SELECT \r\n            row_id,\r\n            sub_msisdn,     \r\n            owner_con_id,\r\n            bill_accnt_id,   \r\n            sub_acquisition_date, \r\n            prod_id,\r\n            x_package_code,\r\n            rn,\r\n            sub_deactivation_date,\r\n            sub_status_original \r\n        FROM asset_ids\r\n        ) a               \r\n        LEFT JOIN \r\n        (\r\n        SELECT \r\n            row_id, \r\n            ou_num AS cust_id, \r\n            ou_type_cd \r\n        FROM \r\n            (\r\n            SELECT \r\n                row_id,\r\n                ou_num,\r\n                ou_type_cd,\r\n                row_number() OVER(PARTITION BY row_id ORDER BY last_upd) AS rn\r\n            FROM (\r\n                SELECT \r\n                    row_id, \r\n                    last_upd, \r\n                    ou_type_cd,\r\n                    ou_num \r\n                FROM all_todays_accounts\r\n                ) a\r\n            ) b \r\n        WHERE rn = 1\r\n        ) b \r\n        ON b.row_id = a.bill_accnt_id\r\n        LEFT OUTER JOIN\r\n        (\r\n        SELECT\r\n            sub_msisdn,\r\n            cust_id,\r\n            active_plan\r\n        FROM    \r\n            (\r\n            SELECT \r\n                sa2.x_primary_attr_value_phonenbr AS sub_msisdn,\r\n                ac.ou_num AS cust_id,\r\n                1 as active_plan,\r\n                row_number() over(partition by sa2.x_primary_attr_value_phonenbr order by sa.last_upd DESC) as rn\r\n            FROM\r\n                (\r\n                SELECT \r\n                    par_asset_id,\r\n                    prod_id,\r\n                    bill_accnt_id,\r\n                    status_cd,\r\n                    last_upd\r\n                FROM v_assets\r\n                ) sa\r\n                INNER JOIN v_assets sa2\r\n                ON sa.par_asset_id = sa2.row_id\r\n                INNER JOIN product_price  price \r\n                ON sa.prod_id = price.row_id\r\n                INNER JOIN v_accounts ac\r\n                    ON ac.row_id = sa.bill_accnt_id\r\n            WHERE ac.ou_type_cd = 'Residential'\r\n                AND sa.status_cd = 'Active'\r\n            ) main\r\n        WHERE rn = 1\r\n        ) price\r\n        ON price.sub_msisdn = a.sub_msisdn\r\n            AND price.cust_id = b.cust_id\r\n            AND a.sub_status_original = 'Active'\r\n    WHERE b.ou_type_cd = 'Residential'\r\n),\r\n\r\nthis_days_subscribers_tmp as (\r\n    SELECT \r\n        sub_billing_id, \r\n        cust_id,\r\n        sub_msisdn,\r\n        sub_acquisition_date,\r\n        data_source, \r\n        row_number() OVER(PARTITION BY sub_billing_id ORDER BY (CASE WHEN lower(sub_status) = 'active' then 1 else 0 END) DESC ,  dt DESC, sub_acquisition_date DESC) rn,\r\n        CASE WHEN active_plan = 0 AND lower(sub_status) = 'active' THEN 0 ELSE 1 END AS keep_sub_flag\r\n    FROM    \r\n        (\r\n        SELECT \r\n            sub_billing_id, \r\n            cust_id, \r\n            sub_msisdn, \r\n            sub_acquisition_date, \r\n            data_source,\r\n            active_plan,\r\n            dt,\r\n            sub_status \r\n        FROM subscriber_snapshot_part_1\r\n        UNION ALL \r\n        SELECT \r\n            sub_billing_id, \r\n            cust_id, \r\n            sub_msisdn, \r\n            sub_acquisition_date, \r\n            data_source,\r\n            active_plan,\r\n            dt,\r\n            sub_status\r\n        FROM subscriber_snapshot_part_2\r\n    ) main\r\n),\r\n\r\nthis_days_subscribers as (\r\n    SELECT \r\n        sub_billing_id,\r\n        cust_id,\r\n        sub_msisdn,\r\n        sub_acquisition_date,\r\n        data_source,\r\n        rn\r\n    FROM this_days_subscribers_tmp\r\n    WHERE keep_sub_flag = 1\r\n)\r\n\r\nSELECT \r\n    sub_billing_id,\r\n        cust_id,\r\n        sub_msisdn,\r\n        sub_acquisition_date,\r\n        data_source,\r\n        rn\r\nFROM this_days_subscribers", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "int_lt_sub_snapshot_yesterday_res", "package": null, "version": null}, {"name": "int_lt_all_todays_accounts_res", "package": null, "version": null}, {"name": "int_lt_product_price_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.int_lt_all_todays_accounts_res", "model.bdh_dbt_models.int_lt_product_price_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_wsc_admin_res": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_wsc_admin_res", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_wsc_admin_res.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriber_snapshot_residential\\int_lt_wsc_admin_res.sql", "unique_id": "model.bdh_dbt_models.int_lt_wsc_admin_res", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriber_snapshot_residential", "int_lt_wsc_admin_res"], "alias": "int_lt_wsc_admin_res", "checksum": {"name": "sha256", "checksum": "a84798a859d8969759943e8f5bc913b8d1d1db5c0b7bd53c6479e17a0cb83ad9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0509975, "relation_name": null, "raw_code": "with v_assets as (select * from {{ ref(\"stg_tmp_assets\") }}),\r\n\r\nv_accounts as (select * from {{ ref(\"stg_tmp_accounts\") }}),\r\n\r\nv_product as (select * from {{ ref(\"stg_tmp_product\") }}),\r\n\r\nwsc_admin as (\r\n    SELECT     \r\n        sa2.x_primary_attr_value_phonenbr as sub_msisdn,\r\n        ac.ou_num as cust_id,\r\n        sa2.x_wsc_admin_flg as wsc_admin\r\n    FROM v_assets sa2\r\n    INNER JOIN v_assets sa ON sa.par_asset_id = sa2.row_id\r\n    INNER JOIN v_accounts ac ON ac.row_id = sa.bill_accnt_id\r\n    LEFT OUTER JOIN v_product pr ON sa.prod_id = pr.row_id\r\n    WHERE pr.type IN ('Price Plan') \r\n        AND sa2.x_primary_attr_name = 'Postpaid TN'\r\n        AND sa.status_cd='Active' \r\n        AND sa2.status_cd='Active'\r\n        AND ou_type_cd = 'Residential'\r\n    GROUP BY sa2.x_primary_attr_value_phonenbr,\r\n        ac.ou_num,\r\n        sa2.x_wsc_admin_flg\r\n)\r\n\r\nSELECT \r\n    sub_msisdn,\r\n    cust_id,\r\n    wsc_admin\r\nFROM wsc_admin", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.int_lt_subscriptions_data_joined": {"database": "bdh_lt", "schema": "VALDCERE", "name": "int_lt_subscriptions_data_joined", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriptions_data_residential\\int_lt_subscriptions_data_joined.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\intermediate\\lt_residential\\lt_subscriptions_data_residential\\int_lt_subscriptions_data_joined.sql", "unique_id": "model.bdh_dbt_models.int_lt_subscriptions_data_joined", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "intermediate", "lt_residential", "lt_subscriptions_data_residential", "int_lt_subscriptions_data_joined"], "alias": "int_lt_subscriptions_data_joined", "checksum": {"name": "sha256", "checksum": "33abffff8a490729939b99a9de9fa1e797c0c3209063a1d982ce3e988453d73c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0539987, "relation_name": null, "raw_code": "with v_assets as (\r\n    select\r\n        row_id,\r\n        prod_id,\r\n        x_activation_dt,\r\n        end_dt,\r\n        status_cd,\r\n        par_asset_id,\r\n        bill_accnt_id,\r\n        x_primary_attr_value_phonenbr,\r\n        x_primary_attr_name\r\n    from\r\n        {{ ref(\"stg_tmp_assets\") }}\r\n),\r\nv_assets_x as (\r\n    select\r\n        row_id,\r\n        attrib_32\r\n    from\r\n        {{ ref(\"stg_tmp_assets_x\") }}\r\n),\r\nv_assets_xa as (\r\n    select\r\n        asset_id\r\n    from\r\n        {{ ref(\"stg_tmp_assets_xa\") }}\r\n),\r\nv_accounts as (\r\n    select\r\n        row_id,\r\n        x_soc_sec_num,\r\n        ou_num,\r\n        name,\r\n        ou_type_cd\r\n    from\r\n        {{ ref(\"stg_tmp_accounts\") }}\r\n),\r\nv_accounts_x as (\r\n    select\r\n        row_id,\r\n        attrib_35\r\n    from\r\n        {{ ref(\"stg_tmp_accounts_x\") }}\r\n),\r\nv_product as (\r\n    select\r\n        row_id,\r\n        type,\r\n        name\r\n    from\r\n        {{ ref(\"stg_tmp_product\") }}\r\n)\r\n\r\nselect\r\n        sa.end_dt as bucket_deactivation,\r\n        sa.status_cd as status,\r\n        sa.x_activation_dt as bucket_activation,\r\n        ac.x_soc_sec_num as asmens_kodas,\r\n        ac.ou_num as cust_id,\r\n        ac.name as pavadinimas,\r\n        ac.ou_type_cd as segmentas,\r\n        ac2.attrib_35 as sub_type,\r\n        substring(sa2.x_primary_attr_value_phonenbr, 4, 8) as sub_msisdn,\r\n        xa.attrib_32 as sutarties_pabaiga,\r\n        sa.prod_id,\r\n        pr.type,\r\n        pr2.name as service_type,\r\n        pr.name as bucket_name,\r\n        lower(pr.name) as bucket_name_formatted\r\n    from\r\n        v_accounts ac\r\n        inner join v_assets sa on ac.row_id = sa.bill_accnt_id\r\n        left join v_assets sa2 on sa.par_asset_id = sa2.row_id\r\n        inner join v_product pr on sa.prod_id = pr.row_id\r\n        inner join v_product pr2 on sa2.prod_id = pr2.row_id\r\n        inner join v_assets_x xa on sa2.row_id = xa.row_id\r\n        inner join v_assets_xa x on x.asset_id = sa.row_id\r\n        inner join v_accounts_x ac2 on ac.row_id = ac2.row_id\r\nwhere ac.ou_type_cd = 'Residential'\r\n  and pr.type in ('Data Bucket')\r\n  and sa2.x_primary_attr_name = 'Postpaid TN'", "language": "sql", "refs": [{"name": "stg_tmp_assets", "package": null, "version": null}, {"name": "stg_tmp_assets_x", "package": null, "version": null}, {"name": "stg_tmp_assets_xa", "package": null, "version": null}, {"name": "stg_tmp_accounts", "package": null, "version": null}, {"name": "stg_tmp_accounts_x", "package": null, "version": null}, {"name": "stg_tmp_product", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_accounts_x", "model.bdh_dbt_models.stg_tmp_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.lt_subscriber_snapshot_business": {"database": "bdh_lt", "schema": "business_dm", "name": "lt_subscriber_snapshot_business", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\marts\\lt_business\\lt_subscriber_snapshot_business\\lt_subscriber_snapshot_business.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_business\\lt_subscriber_snapshot_business\\lt_subscriber_snapshot_business.sql", "unique_id": "model.bdh_dbt_models.lt_subscriber_snapshot_business", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_business", "lt_subscriber_snapshot_business", "lt_subscriber_snapshot_business"], "alias": "lt_subscriber_snapshot_business", "checksum": {"name": "sha256", "checksum": "5fcc928946adda52ecc3de0d120b0edca178854c34e4a208e057a3f87599b7fc"}, "config": {"enabled": true, "alias": null, "schema": "business_dm", "database": "bdh_lt", "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": ["lt_customer_360_profile", "test"], "description": "incremental table for subscribers of business", "columns": {"sub_billing_id,": {"name": "sub_billing_id,", "description": "Description for sub_billing_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_id,": {"name": "cust_id,", "description": "Description for cust_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_msisdn,": {"name": "sub_msisdn,", "description": "Description for sub_msisdn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_status,": {"name": "sub_status,", "description": "Description for sub_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_status_original,": {"name": "sub_status_original,", "description": "Description for sub_status_original,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_acquisition_date,": {"name": "sub_acquisition_date,", "description": "Description for sub_acquisition_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_acquisition_type,": {"name": "sub_acquisition_type,", "description": "Description for sub_acquisition_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_port_in_carrier,": {"name": "sub_port_in_carrier,", "description": "Description for sub_port_in_carrier,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_deactivation_date,": {"name": "sub_deactivation_date,", "description": "Description for sub_deactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_deactivation_reason,": {"name": "sub_deactivation_reason,", "description": "Description for sub_deactivation_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_port_out_carrier,": {"name": "sub_port_out_carrier,", "description": "Description for sub_port_out_carrier,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_contract_start_date,": {"name": "sub_contract_start_date,", "description": "Description for sub_contract_start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_contract_end_date,": {"name": "sub_contract_end_date,", "description": "Description for sub_contract_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_balance_amt,": {"name": "sub_balance_amt,", "description": "Description for sub_balance_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_rate_plan_name,": {"name": "sub_rate_plan_name,", "description": "Description for sub_rate_plan_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_rate_plan_monthly_fee,": {"name": "sub_rate_plan_monthly_fee,", "description": "Description for sub_rate_plan_monthly_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_bad_debt,": {"name": "sub_bad_debt,", "description": "Description for sub_bad_debt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_network_active,": {"name": "sub_network_active,", "description": "Description for sub_network_active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_email,": {"name": "sub_email,", "description": "Description for sub_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_prefered_channel,": {"name": "sub_prefered_channel,", "description": "Description for sub_prefered_channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_call,": {"name": "sub_do_not_call,", "description": "Description for sub_do_not_call,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_sms,": {"name": "sub_do_not_sms,", "description": "Description for sub_do_not_sms,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_email,": {"name": "sub_do_not_email,", "description": "Description for sub_do_not_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_contact,": {"name": "sub_do_not_contact,", "description": "Description for sub_do_not_contact,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscriber_type,": {"name": "subscriber_type,", "description": "Description for subscriber_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_segment,": {"name": "primary_segment,", "description": "Description for primary_segment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "Description for dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_business\\lt_subscriber_snapshot_business\\_lt_subscriber_snapshot_business.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "incremental", "database": "bdh_lt", "schema": "business_dm", "enabled": true, "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.8687198, "relation_name": "bdh_lt.business_dm.lt_subscriber_snapshot_business", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nwith subscriber_snapshot_bus as (select * from {{ref(\"int_lt_subscriber_snapshot_bus\")}})\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_status,\r\n    sub_status_original,\r\n    sub_acquisition_date,\r\n    sub_acquisition_type,\r\n    sub_port_in_carrier,\r\n    sub_deactivation_date,\r\n    sub_deactivation_reason,\r\n    sub_port_out_carrier,\r\n    sub_contract_start_date,\r\n    sub_contract_end_date,\r\n    sub_type,\r\n    sub_balance_amt,\r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee,\r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email,\r\n    sub_prefered_channel,\r\n    sub_do_not_call, \r\n    sub_do_not_sms,\r\n    sub_do_not_email,\r\n    sub_do_not_contact,\r\n    subscriber_type,\r\n    primary_segment,\r\n    dt\r\nFROM subscriber_snapshot_bus", "language": "sql", "refs": [{"name": "int_lt_subscriber_snapshot_bus", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_bus"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.lt_churned_daily_residential": {"database": "bdh_lt", "schema": "private_dm", "name": "lt_churned_daily_residential", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_churned_residential\\lt_churned_daily_residential.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_churned_residential\\lt_churned_daily_residential.sql", "unique_id": "model.bdh_dbt_models.lt_churned_daily_residential", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_churned_residential", "lt_churned_daily_residential"], "alias": "lt_churned_daily_residential", "checksum": {"name": "sha256", "checksum": "c7f2156fa026275bbc237f11a8a99ee4b05e1d8376479259d78a0d1c5f5162a5"}, "config": {"enabled": true, "alias": null, "schema": "private_dm", "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "incremental", "database": "bdh_lt", "schema": "private_dm", "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.0599964, "relation_name": "bdh_lt.private_dm.lt_churned_daily_residential", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nwith churn_daily as (select * from {{ref(\"int_lt_churned_daily_res\")}})\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    churned,\r\n    dt\r\nFROM churn_daily", "language": "sql", "refs": [{"name": "int_lt_churned_daily_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_lt_churned_daily_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.lt_subscriber_snapshot_residential": {"database": "bdh_lt", "schema": "private_dm", "name": "lt_subscriber_snapshot_residential", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriber_snapshot_residential\\lt_subscriber_snapshot_residential.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriber_snapshot_residential\\lt_subscriber_snapshot_residential.sql", "unique_id": "model.bdh_dbt_models.lt_subscriber_snapshot_residential", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_subscriber_snapshot_residential", "lt_subscriber_snapshot_residential"], "alias": "lt_subscriber_snapshot_residential", "checksum": {"name": "sha256", "checksum": "00c3db460271fa68b50185969aada20bd572b014d95e3e0554ca1c4a4005c889"}, "config": {"enabled": true, "alias": null, "schema": "private_dm", "database": "bdh_lt", "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": ["lt_customer_360_profile", "test"], "description": "incremental table for subscribers of residential", "columns": {"sub_billing_id,": {"name": "sub_billing_id,", "description": "Description for sub_billing_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_id,": {"name": "cust_id,", "description": "Description for cust_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_msisdn,": {"name": "sub_msisdn,", "description": "Description for sub_msisdn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_status,": {"name": "sub_status,", "description": "Description for sub_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_status_original,": {"name": "sub_status_original,", "description": "Description for sub_status_original,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_acquisition_date,": {"name": "sub_acquisition_date,", "description": "Description for sub_acquisition_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_acquisition_type,": {"name": "sub_acquisition_type,", "description": "Description for sub_acquisition_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_port_in_carrier,": {"name": "sub_port_in_carrier,", "description": "Description for sub_port_in_carrier,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_deactivation_date,": {"name": "sub_deactivation_date,", "description": "Description for sub_deactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_deactivation_reason,": {"name": "sub_deactivation_reason,", "description": "Description for sub_deactivation_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_port_out_carrier,": {"name": "sub_port_out_carrier,", "description": "Description for sub_port_out_carrier,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_contract_start_date,": {"name": "sub_contract_start_date,", "description": "Description for sub_contract_start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_contract_end_date,": {"name": "sub_contract_end_date,", "description": "Description for sub_contract_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_balance_amt,": {"name": "sub_balance_amt,", "description": "Description for sub_balance_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_rate_plan_name,": {"name": "sub_rate_plan_name,", "description": "Description for sub_rate_plan_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_rate_plan_monthly_fee,": {"name": "sub_rate_plan_monthly_fee,", "description": "Description for sub_rate_plan_monthly_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_bad_debt,": {"name": "sub_bad_debt,", "description": "Description for sub_bad_debt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_network_active,": {"name": "sub_network_active,", "description": "Description for sub_network_active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_email,": {"name": "sub_email,", "description": "Description for sub_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_prefered_channel,": {"name": "sub_prefered_channel,", "description": "Description for sub_prefered_channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_call,": {"name": "sub_do_not_call,", "description": "Description for sub_do_not_call,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_sms,": {"name": "sub_do_not_sms,", "description": "Description for sub_do_not_sms,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_email,": {"name": "sub_do_not_email,", "description": "Description for sub_do_not_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_do_not_contact,": {"name": "sub_do_not_contact,", "description": "Description for sub_do_not_contact,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscriber_type,": {"name": "subscriber_type,", "description": "Description for subscriber_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_segment,": {"name": "primary_segment,", "description": "Description for primary_segment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wsc_admin,": {"name": "wsc_admin,", "description": "Description for wsc_admin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "Description for dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriber_snapshot_residential\\_lt_subscriber_snapshot_residential.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "incremental", "database": "bdh_lt", "schema": "private_dm", "enabled": true, "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt"}, "created_at": 1718885161.8772466, "relation_name": "bdh_lt.private_dm.lt_subscriber_snapshot_residential", "raw_code": "{{ insert_overwrite_config() }}\r\n\r\nwith subscriber_snapshot as (select * from {{ref(\"int_lt_subscriber_snapshot_res\")}})\r\n\r\nSELECT \r\n    sub_billing_id,\r\n    cust_id,\r\n    sub_msisdn,\r\n    sub_status,\r\n    sub_status_original,\r\n    sub_acquisition_date,\r\n    sub_acquisition_type,\r\n    sub_port_in_carrier,\r\n    sub_deactivation_date,\r\n    sub_deactivation_reason,\r\n    sub_port_out_carrier,\r\n    sub_contract_start_date,\r\n    sub_contract_end_date,\r\n    sub_type,\r\n    sub_balance_amt,\r\n    sub_rate_plan_name,\r\n    sub_rate_plan_monthly_fee,\r\n    sub_bad_debt,\r\n    sub_network_active,\r\n    sub_email,\r\n    sub_prefered_channel,\r\n    sub_do_not_call, \r\n    sub_do_not_sms,\r\n    sub_do_not_email,\r\n    sub_do_not_contact,\r\n    subscriber_type,\r\n    primary_segment,\r\n    wsc_admin,\r\n    dt\r\nFROM subscriber_snapshot", "language": "sql", "refs": [{"name": "int_lt_subscriber_snapshot_res", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.bdh_dbt_models.insert_overwrite_config"], "nodes": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_res"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.lt_subscriptions_data_residential_mbb": {"database": "bdh_lt", "schema": "private_dm", "name": "lt_subscriptions_data_residential_mbb", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriptions_data_residential\\lt_subscriptions_data_residential_mbb.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriptions_data_residential\\lt_subscriptions_data_residential_mbb.sql", "unique_id": "model.bdh_dbt_models.lt_subscriptions_data_residential_mbb", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_subscriptions_data_residential", "lt_subscriptions_data_residential_mbb"], "alias": "lt_subscriptions_data_residential_mbb", "checksum": {"name": "sha256", "checksum": "27e4dc510f73a41f6c78837a1cca3a85e1fa8bda6d54282eb9183a0453ce0563"}, "config": {"enabled": true, "alias": null, "schema": "private_dm", "database": "bdh_lt", "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": ["lt_customer_360_profile", "test"], "description": "subscriptions_data for residential mbb", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "Description for sub_billing_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "cust_id": {"name": "cust_id", "description": "Description for cust_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_msisdn": {"name": "sub_msisdn", "description": "Description for sub_msisdn", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_type": {"name": "sub_type", "description": "Description for sub_type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "service_type": {"name": "service_type", "description": "Description for service_type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bucket_name": {"name": "bucket_name", "description": "Description for bucket_name", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bucket_price": {"name": "bucket_price", "description": "Description for bucket_price", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "bucket_size": {"name": "bucket_size", "description": "Description for bucket_size", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "Description for status", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bucket_activation": {"name": "bucket_activation", "description": "Description for bucket_activation", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "bucket_deactivation": {"name": "bucket_deactivation", "description": "Description for bucket_deactivation", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "Description for dt", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriptions_data_residential\\_lt_subscriptions_data_residential_mbb.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "table", "database": "bdh_lt", "schema": "private_dm", "enabled": true, "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}}, "created_at": 1718885161.8822455, "relation_name": "bdh_lt.private_dm.lt_subscriptions_data_residential_mbb", "raw_code": "with users_with_subscriptions as (\r\n    select * \r\n    from {{ ref(\"int_lt_subscriptions_data_joined\") }} \r\n    where service_type = 'Mobile broad band services'\r\n    and bucket_name like 'M\u0117nesinis%'\r\n    group by\r\n        bucket_deactivation,\r\n        status,\r\n        bucket_activation,\r\n        asmens_kodas,\r\n        cust_id,\r\n        segmentas,\r\n        sub_type,\r\n        sub_msisdn,\r\n        sutarties_pabaiga,\r\n        prod_id,\r\n        type,\r\n        bucket_name,\r\n        bucket_name_formatted,\r\n        service_type,\r\n        pavadinimas),\r\n\r\nextracting_price_and_gb as (\r\n    select\r\n        bucket_deactivation,\r\n        status,\r\n        bucket_activation,\r\n        asmens_kodas,\r\n        cust_id,\r\n        pavadinimas,\r\n        segmentas,\r\n        sub_type,\r\n        sub_msisdn,\r\n        sutarties_pabaiga,\r\n        prod_id,\r\n        type,\r\n        service_type,\r\n        bucket_name,\r\n        bucket_name_formatted,\r\n        case\r\n            --matches a number with dot or comma before eur symbol (1.11 eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) eur', 1, 1, 'e', 1 ) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) eur', 1, 1, 'e', 1 ), ',', '.' ) as decimal(10, 2)) \r\n            --matches a number with dot or comma before eur symbol without space (1.11eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)eur', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)eur', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before eur symbol (1 eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*) eur', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*) eur', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before eur symbol without space (1eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*)eur', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*)eur', 1, 1, 'e', 1), ',', '.') as decimal(10, 2))\r\n            else null\r\n        end as bucket_price,\r\n        case\r\n            --matches a number with dot or comma before gb symbol (1.11 gb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number with dot or comma before gb symbol without space (1.11gb)\r\n            when regexp_substr( bucket_name_formatted, '([0-9]*[.,][0-9]*)gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before gb symbol (1 gb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*) gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*) gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before gb symbol without space (gb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*)gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*)gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number with dot or comma before mb symbol (1.11 mb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) mb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) mb', 1, 1, 'e', 1),',', '.') as decimal(10, 2)) / 1024 \r\n            --matches a number with dot or comma before mb symbol without space (1.11mb)\r\n            when regexp_substr(bucket_name_formatted,'([0-9]*[.,][0-9]*)mb',1,1,'e',1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)mb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) / 1024 \r\n            --matches a number without dot or comma before mb symbol (1 mb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*) mb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*) mb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) / 1024 \r\n            --matches a number without dot or comma before mb symbol without space (1mb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*)mb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*)mb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) / 1024 else null\r\n        end as bucket_size_gb\r\n    from\r\n        users_with_subscriptions\r\n) \r\n\r\nselect\r\n    concat(extracting_price_and_gb.cust_id, extracting_price_and_gb.sub_msisdn) as sub_billing_id,\r\n    extracting_price_and_gb.cust_id,\r\n    extracting_price_and_gb.sub_msisdn,\r\n    extracting_price_and_gb.sub_type,\r\n    extracting_price_and_gb.service_type,\r\n    extracting_price_and_gb.bucket_name,\r\n    round(extracting_price_and_gb.bucket_price / 1.21, 2, 'HALF_TO_EVEN') as bucket_price, -- bucket prices are displayed without vat\r\n    to_number(extracting_price_and_gb.bucket_size_gb, 10, 2) as bucket_size,\r\n    extracting_price_and_gb.status,\r\n    extracting_price_and_gb.bucket_activation,\r\n    extracting_price_and_gb.bucket_deactivation,\r\n    substring(extracting_price_and_gb.bucket_activation, 1, 10) as dt\r\nfrom\r\n    extracting_price_and_gb", "language": "sql", "refs": [{"name": "int_lt_subscriptions_data_joined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.int_lt_subscriptions_data_joined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.lt_subscriptions_data_residential_voice": {"database": "bdh_lt", "schema": "private_dm", "name": "lt_subscriptions_data_residential_voice", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriptions_data_residential\\lt_subscriptions_data_residential_voice.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriptions_data_residential\\lt_subscriptions_data_residential_voice.sql", "unique_id": "model.bdh_dbt_models.lt_subscriptions_data_residential_voice", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_subscriptions_data_residential", "lt_subscriptions_data_residential_voice"], "alias": "lt_subscriptions_data_residential_voice", "checksum": {"name": "sha256", "checksum": "94c2259f6f05c6c98fa3f6f5d44e1d6389f3e47db8fd70b24561143a79b4b015"}, "config": {"enabled": true, "alias": null, "schema": "private_dm", "database": "bdh_lt", "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": ["lt_customer_360_profile", "test"], "description": "subscriptions_data for residential voice", "columns": {"sub_billing_id": {"name": "sub_billing_id", "description": "Description for sub_billing_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "cust_id": {"name": "cust_id", "description": "Description for cust_id", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_msisdn": {"name": "sub_msisdn", "description": "Description for sub_msisdn", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "sub_type": {"name": "sub_type", "description": "Description for sub_type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "service_type": {"name": "service_type", "description": "Description for service_type", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bucket_name": {"name": "bucket_name", "description": "Description for bucket_name", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bucket_price": {"name": "bucket_price", "description": "Description for bucket_price", "meta": {}, "data_type": "float", "constraints": [], "quote": null, "tags": []}, "bucket_size": {"name": "bucket_size", "description": "Description for bucket_size", "meta": {}, "data_type": "number", "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "Description for status", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}, "bucket_activation": {"name": "bucket_activation", "description": "Description for bucket_activation", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "bucket_deactivation": {"name": "bucket_deactivation", "description": "Description for bucket_deactivation", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "Description for dt", "meta": {}, "data_type": "varchar", "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD LT", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriptions_data_residential\\_lt_subscriptions_data_residential_voice.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "table", "database": "bdh_lt", "schema": "private_dm", "enabled": true, "tags": ["lt_customer_360_profile", "test"], "meta": {"owner": "TBD LT", "model_maturity": "in dev"}}, "created_at": 1718885161.8861, "relation_name": "bdh_lt.private_dm.lt_subscriptions_data_residential_voice", "raw_code": "with users_with_subscriptions as (\r\n    select * \r\n    from {{ ref(\"int_lt_subscriptions_data_joined\") }} \r\n    where service_type = 'Mobile voice services'\r\n    and (bucket_name like 'Papildomas%'\r\n            or bucket_name in (\r\n                'Internetas 1GB Verslui (1 Eur)',\r\n                'Internetas 4GB Verslui (2.5 Eur)',\r\n                'Internetas 7GB Verslui (4 Eur)'\r\n            )\r\n            )\r\n    group by\r\n        bucket_deactivation,\r\n        status,\r\n        bucket_activation,\r\n        asmens_kodas,\r\n        cust_id,\r\n        segmentas,\r\n        sub_type,\r\n        sub_msisdn,\r\n        sutarties_pabaiga,\r\n        prod_id,\r\n        type,\r\n        bucket_name,\r\n        bucket_name_formatted,\r\n        service_type,\r\n        pavadinimas),\r\n\r\nextracting_price_and_gb as (\r\n    select\r\n        bucket_deactivation,\r\n        status,\r\n        bucket_activation,\r\n        asmens_kodas,\r\n        cust_id,\r\n        pavadinimas,\r\n        segmentas,\r\n        sub_type,\r\n        sub_msisdn,\r\n        sutarties_pabaiga,\r\n        prod_id,\r\n        type,\r\n        service_type,\r\n        bucket_name,\r\n        bucket_name_formatted,\r\n        case\r\n            --matches a number with dot or comma before eur symbol (1.11 eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) eur', 1, 1, 'e', 1 ) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) eur', 1, 1, 'e', 1 ), ',', '.' ) as decimal(10, 2)) \r\n            --matches a number with dot or comma before eur symbol without space (1.11eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)eur', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)eur', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before eur symbol (1 eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*) eur', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*) eur', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before eur symbol without space (1eur)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*)eur', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*)eur', 1, 1, 'e', 1), ',', '.') as decimal(10, 2))\r\n            else null\r\n        end as bucket_price,\r\n        case\r\n            --matches a number with dot or comma before gb symbol (1.11 gb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number with dot or comma before gb symbol without space (1.11gb)\r\n            when regexp_substr( bucket_name_formatted, '([0-9]*[.,][0-9]*)gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before gb symbol (1 gb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*) gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*) gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number without dot or comma before gb symbol without space (gb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*)gb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*)gb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) \r\n            --matches a number with dot or comma before mb symbol (1.11 mb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) mb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*) mb', 1, 1, 'e', 1),',', '.') as decimal(10, 2)) / 1024 \r\n            --matches a number with dot or comma before mb symbol without space (1.11mb)\r\n            when regexp_substr(bucket_name_formatted,'([0-9]*[.,][0-9]*)mb',1,1,'e',1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*[.,][0-9]*)mb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) / 1024 \r\n            --matches a number without dot or comma before mb symbol (1 mb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*) mb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*) mb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) / 1024 \r\n            --matches a number without dot or comma before mb symbol without space (1mb)\r\n            when regexp_substr(bucket_name_formatted, '([0-9]*)mb', 1, 1, 'e', 1) != '' then \r\n            cast(regexp_replace(regexp_substr(bucket_name_formatted, '([0-9]*)mb', 1, 1, 'e', 1), ',', '.') as decimal(10, 2)) / 1024 else null\r\n        end as bucket_size_gb\r\n    from\r\n        users_with_subscriptions\r\n) \r\n\r\nselect\r\n    concat(extracting_price_and_gb.cust_id, extracting_price_and_gb.sub_msisdn) as sub_billing_id,\r\n    extracting_price_and_gb.cust_id,\r\n    extracting_price_and_gb.sub_msisdn,\r\n    extracting_price_and_gb.sub_type,\r\n    extracting_price_and_gb.service_type,\r\n    extracting_price_and_gb.bucket_name,\r\n    round(extracting_price_and_gb.bucket_price / 1.21, 2, 'HALF_TO_EVEN') as bucket_price, -- bucket prices are displayed without vat\r\n    to_number(extracting_price_and_gb.bucket_size_gb, 10, 2) as bucket_size,\r\n    extracting_price_and_gb.status,\r\n    extracting_price_and_gb.bucket_activation,\r\n    extracting_price_and_gb.bucket_deactivation,\r\n    substring(extracting_price_and_gb.bucket_activation, 1, 10) as dt\r\nfrom\r\n    extracting_price_and_gb", "language": "sql", "refs": [{"name": "int_lt_subscriptions_data_joined", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.int_lt_subscriptions_data_joined"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_lt_darbuotojai": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_lt_darbuotojai", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_darbuotojai.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_darbuotojai.sql", "unique_id": "model.bdh_dbt_models.stg_lt_darbuotojai", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_sales_tool", "stg_lt_darbuotojai"], "alias": "stg_lt_darbuotojai", "checksum": {"name": "sha256", "checksum": "d32492e41be03298c48750ec2a787b2eec45a098f9ace1dbcc8e2f28b13c421b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0740561, "relation_name": null, "raw_code": "with v_darbuotojai as (select * from {{ source('bdh_lt_sales_tool', 'darbuotojai') }})\r\n\r\nselect\r\n    id,\r\n    concat(vardas, ' ', pavarde) as employee_name\r\nfrom v_darbuotojai", "language": "sql", "refs": [], "sources": [["bdh_lt_sales_tool", "darbuotojai"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_lt_mokejimo_planai": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_lt_mokejimo_planai", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_mokejimo_planai.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_mokejimo_planai.sql", "unique_id": "model.bdh_dbt_models.stg_lt_mokejimo_planai", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_sales_tool", "stg_lt_mokejimo_planai"], "alias": "stg_lt_mokejimo_planai", "checksum": {"name": "sha256", "checksum": "bef4471a423333d7e30deef90e3ce6707220f68a7b24a4565de23113cf593bd7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0750563, "relation_name": null, "raw_code": "with v_mokejimo_planai as (select * from {{ source('bdh_lt_sales_tool', 'mokejimo_planai') }})\r\n\r\nselect\r\n    id,\r\n    pavadinimas,\r\n    spausdinamas_pavadinimas\r\nfrom v_mokejimo_planai", "language": "sql", "refs": [], "sources": [["bdh_lt_sales_tool", "mokejimo_planai"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_lt_mokejimo_planai_services": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_lt_mokejimo_planai_services", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_mokejimo_planai_services.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_mokejimo_planai_services.sql", "unique_id": "model.bdh_dbt_models.stg_lt_mokejimo_planai_services", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_sales_tool", "stg_lt_mokejimo_planai_services"], "alias": "stg_lt_mokejimo_planai_services", "checksum": {"name": "sha256", "checksum": "e1da277e58ec6b44b6b9120051062018d7fd6580ab7a9e0f2d8d9824c7572c71"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0770562, "relation_name": null, "raw_code": "with v_mokejimo_planai_services as (select * from {{ source('bdh_lt_sales_tool', 'mokejimo_planai_services') }})\r\n\r\nselect\r\n    id,\r\n    plan_id,\r\n    akp_id,\r\n    package,\r\n    hide\r\nfrom v_mokejimo_planai_services", "language": "sql", "refs": [], "sources": [["bdh_lt_sales_tool", "mokejimo_planai_services"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_services"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_lt_package_codes": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_lt_package_codes", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_package_codes.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_sales_tool\\stg_lt_package_codes.sql", "unique_id": "model.bdh_dbt_models.stg_lt_package_codes", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_sales_tool", "stg_lt_package_codes"], "alias": "stg_lt_package_codes", "checksum": {"name": "sha256", "checksum": "b5794213c004278f7358424008c48cb873b973ea047ced42fe94371f65b5faac"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0790555, "relation_name": null, "raw_code": "with v_package_codes as (select * from {{ source('bdh_lt_sales_tool', 'package_codes') }})\r\n\r\nselect\r\n    id,\r\n    package_code,\r\n    active,\r\n    siebel_code\r\nfrom v_package_codes", "language": "sql", "refs": [], "sources": [["bdh_lt_sales_tool", "package_codes"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_sales_tool.package_codes"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_accounts": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_accounts", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_accounts.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_accounts.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_accounts", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_accounts"], "alias": "stg_tmp_accounts", "checksum": {"name": "sha256", "checksum": "555e20ed426c565c3d42451e283a1410b28793ac1d651f62aa13d910eea1a581"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.081056, "relation_name": null, "raw_code": "with v_accounts as (select * from {{ source('bdh_lt_siebel', 'v_accounts') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    last_upd,\r\n    good_standing_flg,\r\n    last_updated,\r\n    name,\r\n    x_bad_debt,\r\n    cust_end_dt,\r\n    ou_type_cd,\r\n    cust_since_dt,\r\n    pr_con_id,\r\n    ou_num,\r\n    x_primary_postpaid_seg_cd,\r\n    x_deactivation_dt,\r\n    x_soc_sec_num,\r\n    dt,\r\n    cust_stat_cd\r\nfrom v_accounts", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_accounts"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_accounts_x": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_accounts_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_accounts_x.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_accounts_x.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_accounts_x", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_accounts_x"], "alias": "stg_tmp_accounts_x", "checksum": {"name": "sha256", "checksum": "b008fedeedd4eb0380574a2554caf248d2f3f238f2864edc041381b6693e3a84"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0830605, "relation_name": null, "raw_code": "with v_accounts_x as (select * from {{ source('bdh_lt_siebel', 'v_accounts_x') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    created_by,\r\n    last_upd,\r\n    last_upd_by,\r\n    attrib_35,\r\n    x_auto_crd_lm_inc_flg,\r\n    attrib_55,\r\n    attrib_07,\r\n    x_brand_cd,\r\n    attrib_65,\r\n    x_credit_class_cd,\r\n    x_credit_limit_cd,\r\n    attrib_51,\r\n    attrib_49,\r\n    attrib_09,\r\n    x_vip_status_flg,\r\n    par_row_id,\r\n    file_name,\r\n    dt\r\nfrom v_accounts_x", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_accounts_x"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_assets": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_assets", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_assets.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_assets.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_assets", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_assets"], "alias": "stg_tmp_assets", "checksum": {"name": "sha256", "checksum": "0257bfe9103777afec007f3c043d01c472ce970a382ce8ba0034598218fee964"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.084062, "relation_name": null, "raw_code": "with v_assets as (select * from {{ source('bdh_lt_siebel', 'v_assets') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    last_upd,\r\n    last_upd_by,\r\n    asset_num,\r\n    end_dt,\r\n    x_package_code,\r\n    status_cd,\r\n    x_activation_dt,\r\n    x_primary_attr_name,\r\n    case when x_primary_attr_name in ('Postpaid TN', 'Prepaid TN', 'Group Reference') then x_primary_attr_value else null end as x_primary_attr_value_phonenbr,\r\n    prod_id,\r\n    owner_accnt_id,\r\n    owner_con_id,\r\n    bill_accnt_id,\r\n    bill_profile_id,\r\n    par_asset_id,\r\n    root_asset_id,\r\n    pr_con_id,\r\n    x_planned_disc_date, \r\n    x_wsc_admin_flg,\r\n    dt\r\nfrom v_assets", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_assets_x": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_assets_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_assets_x.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_assets_x.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_assets_x", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_assets_x"], "alias": "stg_tmp_assets_x", "checksum": {"name": "sha256", "checksum": "ca09d01b2080a2279941c0bd26c0081432937bd36dc8d56d2e4827e4cd3dea3f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0850563, "relation_name": null, "raw_code": "with v_assets_x as (select * from {{ source('bdh_lt_siebel', 'v_assets_x') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    created_by,\r\n    last_upd,\r\n    last_upd_by,\r\n    attrib_32,\r\n    x_bind_period,\r\n    attrib_31,\r\n    x_invoice_flg,\r\n    attrib_01,\r\n    attrib_09,\r\n    x_ref,\r\n    attrib_07,\r\n    attrib_34,\r\n    attrib_03,\r\n    attrib_27,\r\n    attrib_26,\r\n    file_name,\r\n    dt\r\nfrom v_assets_x", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets_x"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_assets_xa": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_assets_xa", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_assets_xa.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_assets_xa.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_assets_xa", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_assets_xa"], "alias": "stg_tmp_assets_xa", "checksum": {"name": "sha256", "checksum": "de700f435347482ce623515bb7db1b826d9381921b3ef5342daae964b473d1cd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0870566, "relation_name": null, "raw_code": "with v_assets_xa as (select * from {{ source('bdh_lt_siebel', 'v_assets_xa') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    created_by,\r\n    last_upd,\r\n    last_upd_by,\r\n    attr_name,\r\n    display_name,\r\n    hidden_flg,\r\n    data_type_cd,\r\n    case when attr_name = 'Telephone Number' then char_val else null end as char_val_phonenbr,\r\n    case when attr_name = 'Telephone Number' then substring(char_val, 4, 3) else null end as char_val_phonenbr_0_2,\r\n    case when attr_name = 'Telephone Number' then substring(char_val, 1, 3) else null end as char_val_phonenbr_cc,\r\n    case when attr_name in ('IMSI', 'IMSI2') then char_val else null end as char_val_imsi,\r\n    case when attr_name in ('IMSI') then char_val else null end as char_val_imsi_mcc,\r\n    case when attr_name in ('IMSI') then char_val else null end as char_val_imsi_mnc,\r\n    case when attr_name in ('IMSI') then char_val else null end as char_val_imsi_grp,\r\n    case when attr_name in ('IMEI') then char_val else null end as char_val_imei,\r\n    case when attr_name in ('IMEI') then char_val else null end as char_val_imei_tac,\r\n    case when attr_name in ('ICCID') then char_val else null end as char_val_iccid,\r\n    case when attr_name in ('Contract Number', 'Prepaid Service ID') then char_val else null end as char_val_internalid,\r\n    case when attr_name in ('E-mail', 'Email') then char_val else null end as char_val_email,\r\n    case when attr_name in ('Email', 'E-mail') then char_val else null end as char_val_email_domain,\r\n    case when attr_name in ('PIN1', 'PIN2') then char_val else null end as char_val_pin,\r\n    case when attr_name in ('PUK2', 'PUK1') then char_val else null end as char_val_puk,\r\n    case when attr_name not in ('Contract Number', 'Email', 'E-mail', 'ICCID', 'Prepaid Service ID',\r\n        'PUK2', 'Telephone Number', 'IMSI', 'IMEI', 'PIN1', 'PUK1', 'IMSI2', 'PIN2') then char_val else null end as char_val_other,\r\n    num_val,\r\n    date_val,\r\n    attr_id,\r\n    asset_id,\r\n    file_name,\r\n    dt\r\nfrom v_assets_xa", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets_xa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_billing_profile": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_billing_profile", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_billing_profile.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_billing_profile.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_billing_profile", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_billing_profile"], "alias": "stg_tmp_billing_profile", "checksum": {"name": "sha256", "checksum": "9e040e243015723a07e767d483ba5f25461ad68cdb8ad4b5bfbf27655d210624"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0890565, "relation_name": null, "raw_code": "with v_billing_profile as (select * from {{ source('bdh_lt_siebel', 'v_billing_profile') }})\r\n\r\nselect\r\n    last_upd,\r\n    accnt_id,\r\n    dt\r\nfrom v_billing_profile", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_billing_profile"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_contact": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_contact", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_contact.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_contact.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_contact", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_contact"], "alias": "stg_tmp_contact", "checksum": {"name": "sha256", "checksum": "8ed8e979ec226d09a53021e9a33abc5d60ffc47a0a5c22e20f2a933e4533004f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0910532, "relation_name": null, "raw_code": "with v_contact as (select * from {{ source('bdh_lt_siebel', 'v_contact') }})\r\n\r\nselect\r\n    row_id,\r\n    last_upd,\r\n    email_addr,\r\n    SPLIT_PART(email_addr, '@', 2) AS email_addr_domain,\r\n    dt\r\nfrom v_contact", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_contact"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_contact"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_orders": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_orders", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_orders.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_orders.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_orders", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_orders"], "alias": "stg_tmp_orders", "checksum": {"name": "sha256", "checksum": "23a23874cb2c0bbc15f79e240d87198c03e8d56c92cedded2472be5fb38f93c6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0920563, "relation_name": null, "raw_code": "with v_orders as (select * from {{ source('bdh_lt_siebel', 'v_orders') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    created_by,\r\n    last_upd,\r\n    last_upd_by,\r\n    active_flg,\r\n    status_dt,\r\n    eai_order_num,\r\n    order_dt,\r\n    order_num,\r\n    req_ship_dt,\r\n    rev_num,\r\n    status_cd,\r\n    x_agent_code,\r\n    x_error_code,\r\n    x_error_message,\r\n    x_external_inv_code,\r\n    x_handling_mthd_cd,\r\n    x_order_type,\r\n    x_parent_order_num,\r\n    x_partner_code,\r\n    x_order_source,\r\n    accnt_id,\r\n    bill_accnt_id,\r\n    contact_id,\r\n    customer_id,\r\n    x_billing_addr_id,\r\n    x_ca_addr_id,\r\n    x_order_channel,\r\n    x_ship_addr_id,\r\n    root_order_id,\r\n    x_st_external_ref,\r\n    file_name,\r\n    dt\r\nfrom v_orders", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_orders"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_orders"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_order_line_items": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_order_line_items", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_order_line_items.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_order_line_items.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_order_line_items", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_order_line_items"], "alias": "stg_tmp_order_line_items", "checksum": {"name": "sha256", "checksum": "d5653496772a11fd52019a20e4d2e2bfc0b19b1efb2b0c440707ce7383956196"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.0930564, "relation_name": null, "raw_code": "with v_order_line_items as (select * from {{ source('bdh_lt_siebel', 'v_order_line_items') }})\r\n\r\nselect\r\n    order_id,\r\n    case when x_primary_attrib_name = 'Postpaid TN' then x_primary_attrib_val else null end as x_primary_attrib_val_phonenbr,\r\n    x_primary_attrib_name,\r\n    last_upd,\r\n    dt,\r\n    x_binding_end,\r\n    action_cd\r\nfrom v_order_line_items", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_order_line_items"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_tmp_product": {"database": "bdh_lt", "schema": "VALDCERE", "name": "stg_tmp_product", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_product.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\staging\\lt_siebel\\stg_tmp_product.sql", "unique_id": "model.bdh_dbt_models.stg_tmp_product", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "staging", "lt_siebel", "stg_tmp_product"], "alias": "stg_tmp_product", "checksum": {"name": "sha256", "checksum": "e28ed92436f757cdd6efb49ae3b8f69ab957ded87ed593d59162de5f6d45580b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "bdh_lt", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "ephemeral", "database": "bdh_lt"}, "created_at": 1718885161.095056, "relation_name": null, "raw_code": "with v_product as (select * from {{ source('bdh_lt_siebel', 'v_product') }})\r\n\r\nselect\r\n    row_id,\r\n    created,\r\n    created_by,\r\n    last_upd,\r\n    last_upd_by,\r\n    desc_text,\r\n    name,\r\n    orderable_flg,\r\n    part_num,\r\n    type,\r\n    crt_ast_rec_flg,\r\n    uom_cd,\r\n    status_cd,\r\n    file_name,\r\n    dt\r\nfrom v_product", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_product"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_product"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.lv_subscribers_snapshot": {"database": "bdh_lv", "schema": "test", "name": "lv_subscribers_snapshot", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\marts\\lv_snapshots\\lv_subscribers_snapshot.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\marts\\lv_snapshots\\lv_subscribers_snapshot.sql", "unique_id": "model.bdh_dbt_models.lv_subscribers_snapshot", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "marts", "lv_snapshots", "lv_subscribers_snapshot"], "alias": "lv_subscribers_snapshot", "checksum": {"name": "sha256", "checksum": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "table", "database": "bdh_lv", "schema": "test"}, "created_at": 1718885161.1090674, "relation_name": "bdh_lv.test.lv_subscribers_snapshot", "raw_code": "", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_raw_lv_assets": {"database": "bdh_lv", "schema": "test", "name": "stg_raw_lv_assets", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_assets.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_assets.sql", "unique_id": "model.bdh_dbt_models.stg_raw_lv_assets", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "staging", "lv_raw_siebel", "stg_raw_lv_assets"], "alias": "stg_raw_lv_assets", "checksum": {"name": "sha256", "checksum": "ecad4c155218915ab2e9ecb58d25bbd7b31b553c03f60c82cf5ddfd5074e2851"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "ephemeral", "database": "bdh_lv", "schema": "test"}, "created_at": 1718885161.1110675, "relation_name": null, "raw_code": "{% set dt = var('lv_execution_date') %}\r\n{% set lv_hist_recalculation = var('lv_hist_recalculation', false) %}\r\n\r\nSELECT row_id,\r\n       created_on,\r\n       created_by_id,\r\n       updated_on,\r\n       updated_by_id,\r\n       asset_description,\r\n       asset_num,\r\n       actual_disconnect,\r\n       status,\r\n       activation_date,\r\n       application_country,\r\n       asset_details,\r\n       brand,\r\n       company_card,\r\n       dual_card,\r\n       pending_order,\r\n       planned_disconnect,\r\n       price_plan_code,\r\n       primary_attribute_name,\r\n       primary_attribute_value,\r\n       promotion_end_date,\r\n       reactivation_date,\r\n       version_date,\r\n       uom,\r\n       allow_port_out,\r\n       call_specification,\r\n       notice_period,\r\n       notice_period_end_date,\r\n       package_code,\r\n       pin,\r\n       planned_disconnect_reason,\r\n       price_plan_start_date,\r\n       puk1,\r\n       regret_end,\r\n       service_sub_type,\r\n       wsc_admin,\r\n       install_date,\r\n       registered_date,\r\n       start_date,\r\n       integration_id,\r\n       entitlement_id,\r\n       agreement_id,\r\n       product_id,\r\n       customer_account_id,\r\n       billing_account_id,\r\n       service_account_id,\r\n       billing_profile_id,\r\n       parent_asset_id,\r\n       root_asset_id,\r\n       primary_contact_id,\r\n       address_id,\r\n       owner_contact_id,\r\n       promotion_id,\r\n       promotion_start_date,\r\n       subscriber_integration_id\r\n{% if lv_hist_recalculation %}\r\n    FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_assets_s_asset') }}\r\n    WHERE updated_on < '{{ dt }}'\r\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY row_id ORDER BY updated_on DESC) = 1\r\n{% else %}\r\n    FROM {{ source('bdh_lv_postp_dm', 'stg_lv_v_assets') }}\r\n{% endif %}", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_assets"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_raw_lv_assets_xa": {"database": "bdh_lv", "schema": "test", "name": "stg_raw_lv_assets_xa", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_assets_xa.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_assets_xa.sql", "unique_id": "model.bdh_dbt_models.stg_raw_lv_assets_xa", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "staging", "lv_raw_siebel", "stg_raw_lv_assets_xa"], "alias": "stg_raw_lv_assets_xa", "checksum": {"name": "sha256", "checksum": "46c56c65bcca248e01a54963dcc45dd3106f2b7f5495f906eda64a09bf0e2593"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "ephemeral", "database": "bdh_lv", "schema": "test"}, "created_at": 1718885161.1160698, "relation_name": null, "raw_code": "{% set dt = var('lv_execution_date') %}\r\n{% set lv_hist_recalculation = var('lv_hist_recalculation', false) %}\r\n\r\nSELECT row_id,\r\n       created_on,\r\n       created_by_id,\r\n       updated_on,\r\n       updated_by_id,\r\n       attribute_name,\r\n       display_name,\r\n       hidden_flag,\r\n       data_type,\r\n       character_value,\r\n       number_value,\r\n       date_value,\r\n       attribute_id,\r\n       asset_id\r\n{% if lv_hist_recalculation %}\r\n    FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_asset_attributes_s_asset_xa') }}\r\n    WHERE updated_on < '{{ dt }}'\r\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY row_id ORDER BY updated_on DESC) = 1\r\n{% else %}\r\n    FROM {{ source('bdh_lv_postp_dm', 'stg_lv_v_assets_xa') }}\r\n{% endif %}", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_assets_xa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_raw_lv_order_line_items": {"database": "bdh_lv", "schema": "test", "name": "stg_raw_lv_order_line_items", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_order_line_items.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_order_line_items.sql", "unique_id": "model.bdh_dbt_models.stg_raw_lv_order_line_items", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "staging", "lv_raw_siebel", "stg_raw_lv_order_line_items"], "alias": "stg_raw_lv_order_line_items", "checksum": {"name": "sha256", "checksum": "57bc953ce7c281445725c05c208160cf61777463af932cf3c88ec99e2f3dec17"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "ephemeral", "database": "bdh_lv", "schema": "test"}, "created_at": 1718885161.1205807, "relation_name": null, "raw_code": "{% set dt = var('lv_execution_date') %}\r\n{% set lv_hist_recalculation = var('lv_hist_recalculation', false) %}\r\n\r\nSELECT row_id,\r\n       created_on,\r\n       created_by_id,\r\n       updated_on,\r\n       updated_by_id,\r\n       action,\r\n       status_as_of,\r\n       list_price,\r\n       billable,\r\n       ship_carrier,\r\n       currency,\r\n       comments,\r\n       due_date,\r\n       override_policy_discounts,\r\n       line_num,\r\n       loaner,\r\n       mrc_subtotal,\r\n       customer_note,\r\n       nrc_subtotal,\r\n       partial_ship,\r\n       pricing_comments,\r\n       product_status,\r\n       qty,\r\n       qty_shipped,\r\n       port_in_date,\r\n       revenue_type,\r\n       ship_date,\r\n       ship_complete,\r\n       ship_via,\r\n       ship_together,\r\n       status,\r\n       action_type,\r\n       binding_period_end,\r\n       binding_period_start,\r\n       credit_check_result,\r\n       credit_control_number,\r\n       additional_discount_reason,\r\n       error_code,\r\n       error_message,\r\n       expected_delivery_date,\r\n       loc_name,\r\n       loc_ssn,\r\n       notice_period,\r\n       password,\r\n       penalty_override_amount,\r\n       planned_disconnect_date,\r\n       portin_deadline,\r\n       postal_tracking_id,\r\n       primary_attribute_name,\r\n       primary_attribute_value,\r\n       promotion_end_date,\r\n       reactivation_date,\r\n       status_code,\r\n       sub_status,\r\n       wsc_admin,\r\n       warranty_recovery,\r\n       write_in_product,\r\n       order_id,\r\n       adj_unit_pri,\r\n       net_price,\r\n       pri_adj_amt,\r\n       asset_id,\r\n       asset_integration_id,\r\n       billing_account_id,\r\n       bo_order_num,\r\n       contact_id,\r\n       integration_id,\r\n       parent_order_item_id,\r\n       product_id,\r\n       root_order_item_id,\r\n       service_num,\r\n       service_account_id,\r\n       disconnect_reason,\r\n       product_description,\r\n       binding_period,\r\n       version_date,\r\n       base_item_id,\r\n       owner_account_id,\r\n       x_expected_pred_id,\r\n       x_previous_number\r\n{% if lv_hist_recalculation %}\r\n    FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_order_line_items_s_order_item') }}\r\n    WHERE updated_on <= '{{ dt }}'\r\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY row_id ORDER BY updated_on DESC) = 1\r\n{% else %}\r\n    FROM {{ source('bdh_lv_postp_dm', 'stg_lv_v_order_line_items') }}\r\n{% endif %}", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_order_line_items"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.stg_raw_lv_products": {"database": "bdh_lv", "schema": "test", "name": "stg_raw_lv_products", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_products.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\staging\\lv_raw_siebel\\stg_raw_lv_products.sql", "unique_id": "model.bdh_dbt_models.stg_raw_lv_products", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "staging", "lv_raw_siebel", "stg_raw_lv_products"], "alias": "stg_raw_lv_products", "checksum": {"name": "sha256", "checksum": "5366d3faf974fa2a8d9a0ed431feeb9b7509e066fd226f508e598a8cdb7242f1"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "ephemeral", "database": "bdh_lv", "schema": "test"}, "created_at": 1718885161.1265934, "relation_name": null, "raw_code": "{% set dt = var('lv_execution_date') %}\r\n{% set lv_hist_recalculation = var('lv_hist_recalculation', false) %}\r\n\r\nSELECT row_id,\r\n      created_on,\r\n      created_by_id,\r\n      updated_on,\r\n      updated_by_id,\r\n      description,\r\n      product,\r\n      orderable,\r\n      part_num,\r\n      type,\r\n      track_as_asset,\r\n      unit_of_measure,\r\n      status,\r\n      adjustment_value\r\n{% if lv_hist_recalculation %}\r\n  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_products_s_prod_int') }}\r\n  WHERE updated_on < '{{ dt }}'\r\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY row_id ORDER BY updated_on DESC) = 1\r\n{% else %}\r\n  FROM {{ source('bdh_lv_postp_dm', 'stg_lv_v_products') }}\r\n{% endif %}", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_products"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.v_address_x": {"database": "bdh_raw", "schema": "demo_source", "name": "v_address_x", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_raw\\demo_source\\v_address_x.sql", "original_file_path": "models\\bdh_raw\\demo_source\\v_address_x.sql", "unique_id": "model.bdh_dbt_models.v_address_x", "fqn": ["bdh_dbt_models", "bdh_raw", "demo_source", "v_address_x"], "alias": "raw_sbl_addresses_intersection_s_con_addr", "checksum": {"name": "sha256", "checksum": "cced815453efe9afd0e6638d1ae36fb3080c6e002821147b9d338bb80da6fd30"}, "config": {"enabled": true, "alias": "raw_sbl_addresses_intersection_s_con_addr", "schema": "demo_source", "database": "bdh_raw", "tags": ["hourly", "demo_source"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LT_WH"}, "tags": ["hourly", "demo_source"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LT_WH", "materialized": "table", "database": "bdh_raw", "schema": "demo_source", "tags": ["hourly", "demo_source"], "enabled": true, "alias": "raw_sbl_addresses_intersection_s_con_addr"}, "created_at": 1718885161.131595, "relation_name": "bdh_raw.demo_source.raw_sbl_addresses_intersection_s_con_addr", "raw_code": "{{ config(\r\n    enabled=true,\r\n    alias='raw_sbl_addresses_intersection_s_con_addr',\r\n    materialized='table'\r\n) }}\r\n\r\nwith cte_raw as (\r\n    select *\r\n    from {{ source('bdh_raw_lt_siebel', 'raw_sbl_addresses_intersection_s_con_addr') }}\r\n)\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nADDR_PER_ID,\r\nACCNT_ID,\r\nCONTACT_ID,\r\nADDR_TYPE_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    BDH_SOURCE_DATE as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom cte_raw", "language": "sql", "refs": [], "sources": [["bdh_raw_lt_siebel", "raw_sbl_addresses_intersection_s_con_addr"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_intersection_s_con_addr"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.v_raw_demo_csv_file": {"database": "bdh_raw", "schema": "demo_source", "name": "v_raw_demo_csv_file", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_raw\\demo_source\\v_raw_demo_csv_file.sql", "original_file_path": "models\\bdh_raw\\demo_source\\v_raw_demo_csv_file.sql", "unique_id": "model.bdh_dbt_models.v_raw_demo_csv_file", "fqn": ["bdh_dbt_models", "bdh_raw", "demo_source", "v_raw_demo_csv_file"], "alias": "v_raw_demo_csv_file", "checksum": {"name": "sha256", "checksum": "f998590fd481ea00f5ac0898732679bef5b305404b02a67578c36a830e936bb6"}, "config": {"enabled": true, "alias": "v_raw_demo_csv_file", "schema": "demo_source", "database": "bdh_raw", "tags": ["hourly", "demo_source", "demo_source", "test"], "meta": {"owner": "Manoj Rane", "model_maturity": "in dev"}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANFSORM_LV_WH"}, "tags": ["hourly", "demo_source", "test"], "description": "view based on raw files received from demo source", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "col_1": {"name": "col_1", "description": "Description for col_1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "col_2": {"name": "col_2", "description": "Description for col_2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_column": {"name": "custom_column", "description": "Description for custom_column", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "Manoj Rane", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_raw\\demo_source\\v_raw_demo_csv_file.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANFSORM_LV_WH", "materialized": "table", "database": "bdh_raw", "schema": "demo_source", "tags": ["demo_source", "test"], "enabled": true, "meta": {"owner": "Manoj Rane", "model_maturity": "in dev"}, "alias": "v_raw_demo_csv_file"}, "created_at": 1718885161.9156902, "relation_name": "bdh_raw.demo_source.v_raw_demo_csv_file", "raw_code": "{{ config(\r\n    enabled=true,\r\n    alias='v_raw_demo_csv_file',\r\n    materialized='table'\r\n) }}\r\n\r\nwith cte_raw as (\r\n    select *\r\n    from {{ source('bdh_raw_demo_source', 'raw_demo_csv_file') }}\r\n)\r\n\r\nselect\r\n    BDH_RAW_RECORD,\r\n    BDH_ROW_NUMBER,\r\n    BDH_SOURCE_ID,\r\n    BDH_FILE_TYPE_ID,\r\n    BDH_FILE_PATH_AND_NAME,\r\n    BDH_SOURCE_FILE_TIMESTAMP,\r\n    BDH_SOURCE_DATE,\r\n    BDH_LOAD_STAGE_TIMESTAMP,\r\n    BDH_LOAD_RAW_TIMESTAMP,\r\n    BDH_EXECUTION_LOG_ID,\r\n    BDH_FILE_LOG_ID,\r\n    COL_1,\r\n    COL_2,\r\n    CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS CUSTOM_COLUMN\r\nfrom cte_raw", "language": "sql", "refs": [], "sources": [["bdh_raw_demo_source", "raw_demo_csv_file"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_csv_file"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot": {"database": "bdh_lv", "schema": "test", "name": "t2lv_cbm_postp_accounts_snapshot", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\t2lv_cbm_postpaid_data_model\\marts\\t2lv_cbm_postp_accounts_snapshot.py", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\marts\\t2lv_cbm_postp_accounts_snapshot.py", "unique_id": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "marts", "t2lv_cbm_postp_accounts_snapshot"], "alias": "t2lv_cbm_postp_accounts_snapshot", "checksum": {"name": "sha256", "checksum": "769fd0f904385a3294e6aaf6b2c3f538ab299c5fc152382bf27e2f35842f8ffd"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": ["demo_siebel", "test"], "meta": {"owner": "TBD LV", "model_maturity": "in dev"}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "dt", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH", "config_keys_used": ["execution_date"], "config_keys_defaults": [null], "execution_date": "CURRENT_DATE()"}, "tags": ["demo_siebel", "test"], "description": "incremental table based for daily active accounts", "columns": {"billing_account_nr": {"name": "billing_account_nr", "description": "Description for billing_account_nr", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ssn": {"name": "ssn", "description": "Description for ssn", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_msisdn": {"name": "primary_msisdn", "description": "Description for primary_msisdn", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "Description for status", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "acquisition_date": {"name": "acquisition_date", "description": "Description for acquisition_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_age": {"name": "customer_age", "description": "Description for customer_age", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_type": {"name": "account_type", "description": "Description for account_type", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "b2b_customer_manager": {"name": "b2b_customer_manager", "description": "Description for b2b_customer_manager", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "b2b_segment": {"name": "b2b_segment", "description": "Description for b2b_segment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_account_name": {"name": "billing_account_name", "description": "Description for billing_account_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eligible_for_fbb_flag": {"name": "eligible_for_fbb_flag", "description": "Description for eligible_for_fbb_flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intercompany_flag": {"name": "intercompany_flag", "description": "Description for intercompany_flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_bad_debt_flag": {"name": "sub_bad_debt_flag", "description": "Description for sub_bad_debt_flag", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postal_code": {"name": "postal_code", "description": "Description for postal_code", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_address_id": {"name": "primary_address_id", "description": "Description for primary_address_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_billing_address_id": {"name": "primary_billing_address_id", "description": "Description for primary_billing_address_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_account_id": {"name": "billing_account_id", "description": "Description for billing_account_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_email": {"name": "contact_email", "description": "Description for contact_email", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_email": {"name": "billing_email", "description": "Description for billing_email", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dt": {"name": "dt", "description": "Description for dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"owner": "TBD LV", "model_maturity": "in dev"}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "bdh_dbt_models://models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "incremental", "database": "bdh_lv", "schema": "test", "execution_date": "CURRENT_DATE()", "enabled": true, "tags": ["demo_siebel", "test"], "meta": {"owner": "TBD LV", "model_maturity": "in dev"}, "incremental_strategy": "delete+insert", "unique_key": "dt", "config_keys_used": ["execution_date"], "config_keys_defaults": [null]}, "created_at": 1718885161.8906705, "relation_name": "bdh_lv.test.t2lv_cbm_postp_accounts_snapshot", "raw_code": "import snowflake.snowpark.functions as F\r\nfrom snowflake.snowpark.window import Window\r\nimport datetime\r\n\r\n\r\ndef model(dbt, session):\r\n\r\n    dbt.config(materialized=\"incremental\")\r\n    dbt.config(incremental_strategy=\"delete+insert\")\r\n    dbt.config(unique_key=\"dt\")\r\n\r\n    dt = dbt.config.get(\"execution_date\")\r\n\r\n    # Log the execution date to the dbt run output\r\n    accounts = (\r\n        dbt.source(\"bdh_raw_lv_siebel\", \"raw_sbl_accounts_s_org_ext\")\r\n        .select(\r\n            \"row_id\",\r\n            \"status\",\r\n            \"good_standing\",\r\n            \"primary_postpaid_segment\",\r\n            \"customer_since\",\r\n            \"account_class\",\r\n            \"account\",\r\n            \"name\",\r\n            \"ssn_org__\",\r\n            \"account_type\",\r\n            \"primary_contact_id\",\r\n            \"primary_address_id\",\r\n            \"primary_billing_address_id\",\r\n            \"account_id\",\r\n            \"source\",\r\n            \"updated_on\",\r\n        )\r\n        .filter(\r\n            (F.col(\"updated_on\") < dt)\r\n            & (F.col(\"account_class\") == \"Billing\")\r\n            & (F.col(\"source\") == \"Singl.eView\")\r\n        )\r\n    )\r\n\r\n    accounts_x = (\r\n        dbt.source(\"bdh_raw_lv_siebel\", \"raw_sbl_accounts_s_org_ext_x\")\r\n        .select(\"row_id\", \"account_sub_type\", \"updated_on\")\r\n        .filter((F.col(\"updated_on\") < dt))\r\n    )\r\n\r\n    contact = (\r\n        dbt.source(\"bdh_raw_lv_siebel\", \"raw_sbl_contacts_s_contact\")\r\n        .select(\r\n            \"row_id\",\r\n            \"x_foreign_flag\",\r\n            \"mobile_phone__\",\r\n            \"email\",\r\n            \"updated_on\",\r\n            \"status\",\r\n        )\r\n        .filter(((F.col(\"updated_on\") < dt)))\r\n    )\r\n\r\n    billing = (\r\n        dbt.source(\"bdh_raw_lv_siebel\", \"raw_sbl_billing_profile_s_inv_prof\")\r\n        .select(\"row_id\", \"account_id\", \"email_bill_to\", \"updated_on\")\r\n        .filter(((F.col(\"updated_on\") < dt)))\r\n    )\r\n\r\n    address = (\r\n        dbt.source(\"bdh_raw_lv_siebel\", \"raw_sbl_addresses_s_addr_per\")\r\n        .select(\r\n            \"row_id\",\r\n            \"integration_id\",\r\n            \"zip_code\",\r\n            \"city\",\r\n            \"village\",\r\n            \"address_line\",\r\n            \"house_number\",\r\n            \"updated_on\",\r\n        )\r\n        .filter(((F.col(\"updated_on\") < dt)))\r\n    )\r\n\r\n    fbb_address = dbt.source(\r\n        \"bdh_test_lv_one_time_load\", \"baltcom_fbb_addresses\"\r\n    ).select(\r\n        \"vzd\",\r\n        \"int_speed\",\r\n        F.upper(\r\n            F.concat_ws(F.lit(\" \"), F.col(\"city\"), F.col(\"street\"), F.col(\"house\"))\r\n        ).alias(\"fbb_address\"),\r\n    )\r\n\r\n    b2b_mng = (\r\n        dbt.source(\"bdh_test_lv_one_time_load\", \"t2lv_monthly_b2b_mng_hist\")\r\n        .select(\"ssn_org\", \"account_owner\", \"dt\")\r\n        .filter(F.col(\"dt\") < dt)\r\n    )\r\n\r\n    ######################################################################################\r\n    #####################  PREPARING AND TRANSFORMING TO VIEWS  ##########################\r\n    ######################################################################################\r\n\r\n    v_accounts = (\r\n        accounts.withColumn(\r\n            \"rn\",\r\n            F.row_number().over(\r\n                Window.partitionBy(\"row_id\").orderBy(F.col(\"updated_on\").desc())\r\n            ),\r\n        )\r\n        .filter(F.col(\"rn\") == 1)\r\n        .filter(F.col(\"status\") == \"Active\")\r\n    ).drop(\"rn\")\r\n\r\n    v_accounts_x = (\r\n        accounts_x.withColumn(\r\n            \"rn\",\r\n            F.row_number().over(\r\n                Window.partitionBy(\"row_id\").orderBy(F.col(\"updated_on\").desc())\r\n            ),\r\n        ).filter(F.col(\"rn\") == 1)\r\n    ).drop(\"rn\")\r\n\r\n    v_contact = (\r\n        contact.withColumn(\r\n            \"rn\",\r\n            F.row_number().over(\r\n                Window.partitionBy(\"row_id\").orderBy(F.col(\"updated_on\").desc())\r\n            ),\r\n        )\r\n        .filter(F.col(\"rn\") == 1)\r\n        .filter(F.col(\"status\") == \"Active\")\r\n    ).drop(\"rn\")\r\n\r\n    v_billing = (\r\n        billing.withColumn(\r\n            \"rn\",\r\n            F.row_number().over(\r\n                Window.partitionBy(\"row_id\").orderBy(F.col(\"updated_on\").desc())\r\n            ),\r\n        ).filter(\r\n            (F.col(\"rn\") == 1)\r\n            & (F.col(\"email_bill_to\").isNotNull())\r\n            & (F.col(\"email_bill_to\") != \"\")\r\n        )\r\n    ).drop(\"rn\")\r\n\r\n    v_address = (\r\n        address.withColumn(\r\n            \"rn\",\r\n            F.row_number().over(\r\n                Window.partitionBy(\"row_id\").orderBy(F.col(\"updated_on\").desc())\r\n            ),\r\n        ).filter(F.col(\"rn\") == 1)\r\n    ).drop(\"rn\")\r\n\r\n    v_b2b_mng = (\r\n        b2b_mng.withColumn(\r\n            \"rn\",\r\n            F.row_number().over(\r\n                Window.partitionBy(\"ssn_org\").orderBy(F.col(\"dt\").desc())\r\n            ),\r\n        ).filter(F.col(\"rn\") == 1)\r\n    ).drop(\"rn\")\r\n\r\n    ######################################################################################\r\n    #########################  INTERCOMPANY ACCOUNTS    ##################################\r\n    ######################################################################################\r\n\r\n    accounts_intercompany_df = (\r\n        v_accounts_x.filter(\r\n            (\r\n                F.col(\"account_sub_type\").isin(\r\n                    \"T2 Employee\", \"Intercompany\", \"Roaming Test\"\r\n                )\r\n            )\r\n        )\r\n        .select(F.col(\"row_id\").alias(\"intercompany_row_id\"))\r\n        .drop_duplicates()\r\n    )\r\n\r\n    address_fix_df = v_address.with_column(\r\n        \"place\",\r\n        F.when(v_address[\"city\"] == \"\", v_address[\"village\"]).otherwise(\r\n            v_address[\"city\"]\r\n        ),\r\n    )\r\n\r\n    address_df = (\r\n        address_fix_df.with_column_renamed(\"place\", \"PLACE\").with_column(\r\n            \"full_address\",\r\n            F.upper(\r\n                F.concat_ws(\r\n                    F.lit(\" \"),\r\n                    address_fix_df[\"place\"],\r\n                    address_fix_df[\"address_line\"],\r\n                    address_fix_df[\"house_number\"],\r\n                )\r\n            ),\r\n        )\r\n    ).drop(\"place\")\r\n\r\n    ######################################################################################\r\n    #########################          SNAPSHOT BASE           ###########################\r\n    ######################################################################################\r\n\r\n    accounts_df_base = (\r\n        v_accounts.join(\r\n            accounts_intercompany_df,\r\n            v_accounts[\"row_id\"] == accounts_intercompany_df[\"intercompany_row_id\"],\r\n            \"left\",\r\n        )\r\n        .join(\r\n            v_contact,\r\n            v_accounts[\"primary_contact_id\"] == v_contact[\"row_id\"],\r\n            \"left\",\r\n        )\r\n        .join(\r\n            v_billing,\r\n            \"account_id\",\r\n            \"left\",\r\n        )\r\n        .join(\r\n            address_df,\r\n            v_accounts[\"primary_address_id\"] == address_df[\"row_id\"],\r\n            \"left\",\r\n        )\r\n        .join(\r\n            fbb_address,\r\n            address_df[\"full_address\"] == fbb_address[\"fbb_address\"],\r\n            \"left\",\r\n        )\r\n        .join(\r\n            v_b2b_mng,\r\n            v_accounts[\"ssn_org__\"] == b2b_mng[\"ssn_org\"],\r\n            \"left\",\r\n        )\r\n        .withColumn(\r\n            \"account_type_adjusted\",\r\n            F.when(F.col(\"account_type\") == \"Residential\", \"Residential\")\r\n            .when(F.col(\"account_type\") == \"Business\", \"Business\")\r\n            .otherwise(\"Residential\"),\r\n        )\r\n        .withColumn(\r\n            \"b2b_segment\",\r\n            F.when(\r\n                F.col(\"account_type\") == \"Business\",\r\n                F.col(\"primary_postpaid_segment\"),\r\n            ).otherwise(None),\r\n        )\r\n        .withColumn(\r\n            \"billing_account_name_adjusted\",\r\n            F.when(\r\n                (F.col(\"account_type\") == \"Business\")\r\n                & (F.col(\"account_class\") == \"Billing\"),\r\n                F.col(\"name\"),\r\n            ),\r\n        )\r\n        .withColumn(\r\n            \"sub_bad_debt_flag\",\r\n            F.when(F.col(\"good_standing\") != \"Y\", 1).otherwise(0),\r\n        )\r\n        .withColumn(\r\n            \"intercompany_flag\",\r\n            F.when(\r\n                F.is_null(accounts_intercompany_df[\"intercompany_row_id\"]), 0\r\n            ).otherwise(1),\r\n        )\r\n        .withColumn(\r\n            \"customer_age\",\r\n            (\r\n                (\r\n                    F.months_between(\r\n                        F.to_date(F.lit(dt), \"AUTO\"),\r\n                        F.to_date(\r\n                            F.substring(v_contact[\"x_foreign_flag\"], 1, 10), \"AUTO\"\r\n                        ),\r\n                    )\r\n                )\r\n                / 12\r\n            ).cast(\"int\"),\r\n        )\r\n        .withColumn(\r\n            \"primary_msisdn\",\r\n            F.regexp_replace(v_contact[\"mobile_phone__\"], \"\\+\", \"\"),\r\n        )\r\n        .withColumn(\r\n            \"eligible_for_fbb\",\r\n            F.when(F.is_null(fbb_address[\"int_speed\"]), 0).otherwise(1),\r\n        )\r\n        .select(\r\n            v_accounts[\"row_id\"].alias(\"account_id\"),\r\n            F.col(\"good_standing\"),\r\n            F.col(\"primary_postpaid_segment\"),\r\n            F.to_date(F.col(\"customer_since\")).alias(\"acquisition_date\"),\r\n            F.col(\"billing_account_name_adjusted\").alias(\"billing_account_name\"),\r\n            F.col(\"name\").alias(\"billing_name\"),\r\n            F.col(\"account_class\"),\r\n            F.col(\"account\").alias(\"billing_account_nr\"),\r\n            F.col(\"ssn_org__\").alias(\"ssn\"),\r\n            F.col(\"primary_contact_id\"),\r\n            F.col(\"primary_address_id\"),\r\n            F.col(\"primary_billing_address_id\"),\r\n            F.col(\"account_id\").alias(\"billing_account_id\"),\r\n            v_accounts[\"status\"].alias(\"status\"),\r\n            F.col(\"account_type_adjusted\").alias(\"account_type\"),\r\n            F.col(\"b2b_segment\"),\r\n            F.col(\"account_owner\").alias(\"b2b_customer_manager\"),\r\n            F.col(\"sub_bad_debt_flag\"),\r\n            F.col(\"intercompany_flag\"),\r\n            F.col(\"customer_age\"),\r\n            F.col(\"primary_msisdn\"),\r\n            v_contact[\"email\"].alias(\"contact_email\"),\r\n            v_billing[\"email_bill_to\"].alias(\"billing_email\"),\r\n            v_address[\"zip_code\"].alias(\"postal_code\"),\r\n            F.col(\"eligible_for_fbb\").alias(\"eligible_for_fbb_flag\"),\r\n            F.lit(dt).alias(\"dt\"),\r\n        )\r\n        .filter(\r\n            (F.col(\"intercompany_flag\") == 0)\r\n            | (\r\n                (F.col(\"intercompany_flag\") == 1)\r\n                & (\r\n                    (\r\n                        (~(F.lower(F.col(\"billing_name\")).like(\"%test%\")))\r\n                        | (~(F.lower(F.col(\"billing_name\")).like(\"%tele2%\")))\r\n                    )\r\n                    & (F.col(\"billing_name\") != \"\")\r\n                )\r\n            )\r\n        )\r\n    )\r\n\r\n    daily_accounts_snapshot = accounts_df_base.filter(\r\n        (~F.col(\"billing_account_nr\").isin([\"203322187\", \"203751884\"]))\r\n    )\r\n\r\n    out = daily_accounts_snapshot.filter(\r\n        (~F.col(\"ssn\").isin([\"555555-55555\", \"111111-12345\", \"55555555555\"]))\r\n    ).select(\r\n        \"billing_account_nr\",\r\n        \"ssn\",\r\n        \"primary_msisdn\",\r\n        \"status\",\r\n        \"acquisition_date\",\r\n        \"customer_age\",\r\n        \"account_type\",\r\n        \"b2b_customer_manager\",\r\n        \"b2b_segment\",\r\n        \"billing_account_name\",\r\n        \"eligible_for_fbb_flag\",\r\n        \"intercompany_flag\",\r\n        \"sub_bad_debt_flag\",\r\n        \"postal_code\",\r\n        \"primary_address_id\",\r\n        \"primary_billing_address_id\",\r\n        \"billing_account_id\",\r\n        \"contact_email\",\r\n        \"billing_email\",\r\n        \"dt\",\r\n    )\r\n\r\n    if dbt.is_incremental:\r\n        out\r\n    else:\r\n        out\r\n\r\n    return out", "language": "python", "refs": [], "sources": [["bdh_raw_lv_siebel", "raw_sbl_accounts_s_org_ext"], ["bdh_raw_lv_siebel", "raw_sbl_accounts_s_org_ext_x"], ["bdh_raw_lv_siebel", "raw_sbl_contacts_s_contact"], ["bdh_raw_lv_siebel", "raw_sbl_billing_profile_s_inv_prof"], ["bdh_raw_lv_siebel", "raw_sbl_addresses_s_addr_per"], ["bdh_test_lv_one_time_load", "baltcom_fbb_addresses"], ["bdh_test_lv_one_time_load", "t2lv_monthly_b2b_mng_hist"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext_x", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_billing_profile_s_inv_prof", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_s_addr_per", "source.bdh_dbt_models.bdh_test_lv_one_time_load.baltcom_fbb_addresses", "source.bdh_dbt_models.bdh_test_lv_one_time_load.t2lv_monthly_b2b_mng_hist"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "snapshot.bdh_dbt_models.ee_accounts": {"database": "bdh_ee", "schema": "siebel", "name": "ee_accounts", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_accounts_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_accounts_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_accounts", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_accounts_snapshot", "ee_accounts"], "alias": "accounts", "checksum": {"name": "sha256", "checksum": "d0e65d37011fafed6febca1cab695bed15e6549bb27893a6d488f7ca23604f33"}, "config": {"enabled": true, "alias": "accounts", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "accounts", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.1475925, "relation_name": "bdh_ee.siebel.accounts", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"accounts\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'accounts').database,\r\n      schema=source('bdh_ee_siebel', 'accounts').schema,\r\n      identifier=source('bdh_ee_siebel', 'accounts').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCUST_STAT_CD,\r\nACCNT_TYPE_CD,\r\nALT_EMAIL_ADDR,\r\nEAI_SYNC_DT,\r\nGOOD_STANDING_FLG,\r\nHSHLD_SIZE,\r\nLAST_UPDATED,\r\nMAIN_PH_NUM,\r\nNAME,\r\nX_BAD_DEBT,\r\nCUST_END_DT,\r\nX_CSR_EDIT,\r\nX_CUST_SOURCE,\r\nX_DISABLE_LEGAL_CHK,\r\nX_GOOD_STANDING_OVEERIDE,\r\nX_LEG_NUM,\r\nX_LOYALTY_CD,\r\nX_SOC_SEC_NUM,\r\nX_REASON_VAT_EXEMPTION,\r\nX_SEC_ANS,\r\nX_SEC_QUES,\r\nX_VAT_NUMBER,\r\nOU_TYPE_CD,\r\nCUST_SINCE_DT,\r\nPR_ADDR_ID,\r\nPR_BL_ADDR_ID,\r\nPR_CON_ID,\r\nPR_SHIP_ADDR_ID,\r\nX_LEGAL_CHK,\r\nCURR_PRI_LST_ID,\r\nINTEGRATION_ID,\r\nMASTER_OU_ID,\r\nOU_NUM,\r\nX_SEC_CUST,\r\nPR_POSTN_ID,\r\nPAR_OU_ID,\r\nX_PRIMARY_POSTPAID_SEG_CD,\r\nACTIVE_WINBACK_CASE,\r\nCURR_COND,\r\nMANAGER,\r\nACCOUNT_ID,\r\nTAX_CLASS,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_accounts_s_org_ext') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCUST_STAT_CD,\r\nACCNT_TYPE_CD,\r\nALT_EMAIL_ADDR,\r\nEAI_SYNC_DT,\r\nGOOD_STANDING_FLG,\r\nHSHLD_SIZE,\r\nLAST_UPDATED,\r\nMAIN_PH_NUM,\r\nNAME,\r\nX_BAD_DEBT,\r\nCUST_END_DT,\r\nX_CSR_EDIT,\r\nX_CUST_SOURCE,\r\nX_DISABLE_LEGAL_CHK,\r\nX_GOOD_STANDING_OVEERIDE,\r\nX_LEG_NUM,\r\nX_LOYALTY_CD,\r\nX_SOC_SEC_NUM,\r\nX_REASON_VAT_EXEMPTION,\r\nX_SEC_ANS,\r\nX_SEC_QUES,\r\nX_VAT_NUMBER,\r\nOU_TYPE_CD,\r\nCUST_SINCE_DT,\r\nPR_ADDR_ID,\r\nPR_BL_ADDR_ID,\r\nPR_CON_ID,\r\nPR_SHIP_ADDR_ID,\r\nX_LEGAL_CHK,\r\nCURR_PRI_LST_ID,\r\nINTEGRATION_ID,\r\nMASTER_OU_ID,\r\nOU_NUM,\r\nX_SEC_CUST,\r\nPR_POSTN_ID,\r\nPAR_OU_ID,\r\nX_PRIMARY_POSTPAID_SEG_CD,\r\nACTIVE_WINBACK_CASE,\r\nCURR_COND,\r\nMANAGER,\r\nACCOUNT_ID,\r\nTAX_CLASS,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'accounts_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "accounts"], ["bdh_ee_siebel", "accounts"], ["bdh_ee_siebel", "accounts"], ["bdh_ee_siebel", "accounts_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.accounts", "source.bdh_dbt_models.bdh_ee_siebel.accounts_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_accounts_x": {"database": "bdh_ee", "schema": "siebel", "name": "ee_accounts_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_accounts_x_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_accounts_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_accounts_x", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_accounts_x_snapshot", "ee_accounts_x"], "alias": "accounts_x", "checksum": {"name": "sha256", "checksum": "9de29ec8e6c490230c458cf8c94ec60ba79d888c30db2a413953d9113fcb3f5d"}, "config": {"enabled": true, "alias": "accounts_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "accounts_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.1565893, "relation_name": "bdh_ee.siebel.accounts_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"accounts_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'accounts_x').database,\r\n      schema=source('bdh_ee_siebel', 'accounts_x').schema,\r\n      identifier=source('bdh_ee_siebel', 'accounts_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_35,\r\nX_AUTO_CRD_LM_INC_FLG,\r\nATTRIB_55,\r\nATTRIB_07,\r\nX_BRAND_CD,\r\nATTRIB_65,\r\nX_CREDIT_CLASS_CD,\r\nX_CREDIT_LIMIT_CD,\r\nATTRIB_51,\r\nATTRIB_49,\r\nATTRIB_09,\r\nX_VIP_STATUS_FLG,\r\nPAR_ROW_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_accounts_s_org_ext_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_35,\r\nX_AUTO_CRD_LM_INC_FLG,\r\nATTRIB_55,\r\nATTRIB_07,\r\nX_BRAND_CD,\r\nATTRIB_65,\r\nX_CREDIT_CLASS_CD,\r\nX_CREDIT_LIMIT_CD,\r\nATTRIB_51,\r\nATTRIB_49,\r\nATTRIB_09,\r\nX_VIP_STATUS_FLG,\r\nPAR_ROW_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'accounts_x_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "accounts_x"], ["bdh_ee_siebel", "accounts_x"], ["bdh_ee_siebel", "accounts_x"], ["bdh_ee_siebel", "accounts_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.accounts_x", "source.bdh_dbt_models.bdh_ee_siebel.accounts_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_activities": {"database": "bdh_ee", "schema": "siebel", "name": "ee_activities", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_activities_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_activities_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_activities", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_activities_snapshot", "ee_activities"], "alias": "activities", "checksum": {"name": "sha256", "checksum": "66a49ed1c3e2001b0aba885bba2b57ce6c995a1053bfa92bbf4f06b4d672aa71"}, "config": {"enabled": true, "alias": "activities", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "activities", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.1654367, "relation_name": "bdh_ee.siebel.activities", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"activities\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'activities').database,\r\n      schema=source('bdh_ee_siebel', 'activities').schema,\r\n      identifier=source('bdh_ee_siebel', 'activities').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nX_TASKS,\r\nX_SUB_TYPE,\r\nX_SR_INVOICE_NUM,\r\nX_SESSION_ID,\r\nX_SCREEN_POPUP,\r\nX_PROD_AREA,\r\nX_IVR_DONE_TIME,\r\nX_INTENSIONS,\r\nX_INPUT_PARAMETERS,\r\nX_ERROR_MESSAGE,\r\nX_ERROR_CODE,\r\nX_EA_DOC_TYPE,\r\nX_EA_DOC_SEG,\r\nX_COMPLETED_BY,\r\nX_APP_COUNTRY,\r\nX_AMOUNT,\r\nTODO_PLAN_START_DT,\r\nTODO_DUE_DT,\r\nTODO_CD,\r\nTODO_ACTL_START_DT,\r\nTODO_ACTL_END_DT,\r\nSUBTYPE_CD,\r\nSRA_RESOLUTION_CD,\r\nPREV_ACT_ID,\r\nPAR_EVT_ID,\r\nNAME,\r\nEVT_STAT_CD,\r\nEVT_PRIORITY_CD,\r\nEMAIL_TO_LINE,\r\nEMAIL_SNDR_ADDR,\r\nBILLABLE_FLG,\r\nAPPT_REPT_FLG,\r\nALARM_FLAG,\r\nOWNER_OU_ID,\r\nOWNER_PER_ID,\r\nOWNER_POSTN_ID,\r\nTARGET_OU_ADDR_ID,\r\nTARGET_OU_ID,\r\nTARGET_PER_ADDR_ID,\r\nTARGET_PER_ID,\r\nX_CREATED_BY_GRP_ID,\r\nX_SR_COMMITTED_DT,\r\nSR_ID,\r\nASSET_ID,\r\nOFFER_RESPONSE,\r\nCAMPAIGN_ID,\r\nEVENT,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_activities_s_evt_act') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nX_TASKS,\r\nX_SUB_TYPE,\r\nX_SR_INVOICE_NUM,\r\nX_SESSION_ID,\r\nX_SCREEN_POPUP,\r\nX_PROD_AREA,\r\nX_IVR_DONE_TIME,\r\nX_INTENSIONS,\r\nX_INPUT_PARAMETERS,\r\nX_ERROR_MESSAGE,\r\nX_ERROR_CODE,\r\nX_EA_DOC_TYPE,\r\nX_EA_DOC_SEG,\r\nX_COMPLETED_BY,\r\nX_APP_COUNTRY,\r\nX_AMOUNT,\r\nTODO_PLAN_START_DT,\r\nTODO_DUE_DT,\r\nTODO_CD,\r\nTODO_ACTL_START_DT,\r\nTODO_ACTL_END_DT,\r\nSUBTYPE_CD,\r\nSRA_RESOLUTION_CD,\r\nPREV_ACT_ID,\r\nPAR_EVT_ID,\r\nNAME,\r\nEVT_STAT_CD,\r\nEVT_PRIORITY_CD,\r\nEMAIL_TO_LINE,\r\nEMAIL_SNDR_ADDR,\r\nBILLABLE_FLG,\r\nAPPT_REPT_FLG,\r\nALARM_FLAG,\r\nOWNER_OU_ID,\r\nOWNER_PER_ID,\r\nOWNER_POSTN_ID,\r\nTARGET_OU_ADDR_ID,\r\nTARGET_OU_ID,\r\nTARGET_PER_ADDR_ID,\r\nTARGET_PER_ID,\r\nX_CREATED_BY_GRP_ID,\r\nX_SR_COMMITTED_DT,\r\nSR_ID,\r\nASSET_ID,\r\nOFFER_RESPONSE,\r\nCAMPAIGN_ID,\r\nEVENT,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'activities_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "activities"], ["bdh_ee_siebel", "activities"], ["bdh_ee_siebel", "activities"], ["bdh_ee_siebel", "activities_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.activities", "source.bdh_dbt_models.bdh_ee_siebel.activities_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_activities_x": {"database": "bdh_ee", "schema": "siebel", "name": "ee_activities_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_activities_x_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_activities_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_activities_x", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_activities_x_snapshot", "ee_activities_x"], "alias": "activities_x", "checksum": {"name": "sha256", "checksum": "569a1988b0e68b9f55d2680778ed97778048e2332f01d7442ba82b00a09be65c"}, "config": {"enabled": true, "alias": "activities_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "activities_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.173436, "relation_name": "bdh_ee.siebel.activities_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"activities_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'activities_x').database,\r\n      schema=source('bdh_ee_siebel', 'activities_x').schema,\r\n      identifier=source('bdh_ee_siebel', 'activities_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nCOMMENT_,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_activities_s_evt_act_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nCOMMENT_,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'activities_x_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "activities_x"], ["bdh_ee_siebel", "activities_x"], ["bdh_ee_siebel", "activities_x"], ["bdh_ee_siebel", "activities_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.activities_x", "source.bdh_dbt_models.bdh_ee_siebel.activities_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_address": {"database": "bdh_ee", "schema": "siebel", "name": "ee_address", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_address_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_address_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_address", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_address_snapshot", "ee_address"], "alias": "address", "checksum": {"name": "sha256", "checksum": "7c21c2eb4861e490de4fe0256912d2237913da321efe53c7836f32b8e3bfcd09"}, "config": {"enabled": true, "alias": "address", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "address", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.1814363, "relation_name": "bdh_ee.siebel.address", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"address\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'address').database,\r\n      schema=source('bdh_ee_siebel', 'address').schema,\r\n      identifier=source('bdh_ee_siebel', 'address').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nADDR_LINE_4,\r\nPREMISE_FLG,\r\nSTART_DT,\r\nX_INT_SOURCE,\r\nX_COORD_QLTY,\r\nADDR_NUM,\r\nX_MUNICIPALITY,\r\nX_CONG_CODE,\r\nADDR,\r\nX_SYSTEM_SOURCE,\r\nX_CONGREGATION,\r\nX_ADDR_QLTY,\r\nINTEGRATION_ID,\r\nX_APART_NUM,\r\nADDR_LINE_5,\r\nLONGITUDE,\r\nX_REAL_ESTATE,\r\nX_COUNTY_CODE,\r\nCITY,\r\nZIPCODE,\r\nINTEGRATION2_ID,\r\nX_STREET_LETTER,\r\nLATITUDE,\r\nCOUNTRY,\r\nCOUNTY,\r\nPAR_ADDR_ID,\r\nX_MUN_CODE,\r\nEND_DT,\r\nADDR_TYPE_CD,\r\nADDR_NAME,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_addresses_s_addr_per') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nADDR_LINE_4,\r\nPREMISE_FLG,\r\nSTART_DT,\r\nX_INT_SOURCE,\r\nX_COORD_QLTY,\r\nADDR_NUM,\r\nX_MUNICIPALITY,\r\nX_CONG_CODE,\r\nADDR,\r\nX_SYSTEM_SOURCE,\r\nX_CONGREGATION,\r\nX_ADDR_QLTY,\r\nINTEGRATION_ID,\r\nX_APART_NUM,\r\nADDR_LINE_5,\r\nLONGITUDE,\r\nX_REAL_ESTATE,\r\nX_COUNTY_CODE,\r\nCITY,\r\nZIPCODE,\r\nINTEGRATION2_ID,\r\nX_STREET_LETTER,\r\nLATITUDE,\r\nCOUNTRY,\r\nCOUNTY,\r\nPAR_ADDR_ID,\r\nX_MUN_CODE,\r\nEND_DT,\r\nADDR_TYPE_CD,\r\nADDR_NAME,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'address_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "address"], ["bdh_ee_siebel", "address"], ["bdh_ee_siebel", "address"], ["bdh_ee_siebel", "address_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.address", "source.bdh_dbt_models.bdh_ee_siebel.address_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_address_x": {"database": "bdh_ee", "schema": "siebel", "name": "ee_address_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_address_x_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_address_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_address_x", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_address_x_snapshot", "ee_address_x"], "alias": "address_x", "checksum": {"name": "sha256", "checksum": "600139b83e14247fa2ed4b06ea3e7e75aa9722dac0e2a7532247f8dd163361e1"}, "config": {"enabled": true, "alias": "address_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "address_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.1874378, "relation_name": "bdh_ee.siebel.address_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"address_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'address_x').database,\r\n      schema=source('bdh_ee_siebel', 'address_x').schema,\r\n      identifier=source('bdh_ee_siebel', 'address_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nADDR_PER_ID,\r\nACCNT_ID,\r\nCONTACT_ID,\r\nADDR_TYPE_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_addresses_intersection_s_con_addr') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nADDR_PER_ID,\r\nACCNT_ID,\r\nCONTACT_ID,\r\nADDR_TYPE_CD,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'address_x_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "address_x"], ["bdh_ee_siebel", "address_x"], ["bdh_ee_siebel", "address_x"], ["bdh_ee_siebel", "address_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.address_x", "source.bdh_dbt_models.bdh_ee_siebel.address_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_assets": {"database": "bdh_ee", "schema": "siebel", "name": "ee_assets", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_assets_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_assets_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_assets", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_assets_snapshot", "ee_assets"], "alias": "assets", "checksum": {"name": "sha256", "checksum": "b3da359a70f09c22582f9906a611a12b15d17237c993849706313e9ac9fbcc03"}, "config": {"enabled": true, "alias": "assets", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "assets", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.1954331, "relation_name": "bdh_ee.siebel.assets", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"assets\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'assets').database,\r\n      schema=source('bdh_ee_siebel', 'assets').schema,\r\n      identifier=source('bdh_ee_siebel', 'assets').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nASSET_NUM,\r\nEND_DT,\r\nSTATUS_CD,\r\nX_ACTIVATION_DT,\r\nX_APP_COUNTRY,\r\nX_ASSET_DETAILS,\r\nX_BRAND_CD,\r\nX_COMPANY_CARD,\r\nX_DUAL_CARD,\r\nX_PENDING_ORDER,\r\nX_PLANNED_DISC_DATE,\r\nX_PRICE_PLAN_CODE,\r\nX_PRIMARY_ATTR_NAME,\r\nX_PRIMARY_ATTR_VALUE,\r\nX_T2_PRODUCT_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_VERSION_DT,\r\nUOM_CD,\r\nX_ALLOW_PORT_OUT,\r\nX_CALL_SPECIFICATION,\r\nX_NOTICE_PERIOD,\r\nX_NOTICE_PERIOD_END_DATE,\r\nX_PACKAGE_CODE,\r\nX_PIN,\r\nX_PLANNED_DISC_REASON,\r\nX_PRICE_PLAN_DATE,\r\nX_PUK1,\r\nX_REGRET_END_DT,\r\nX_SERVICE_SUB_TYPE,\r\nX_WSC_ADMIN_FLG,\r\nINSTALL_DT,\r\nPURCH_DT,\r\nREGISTERED_DT,\r\nSTART_DT,\r\nINTEGRATION_ID,\r\nX_ENTITLEMENT_ID,\r\nCUR_AGREE_ID,\r\nPROD_ID,\r\nOWNER_ACCNT_ID,\r\nBILL_ACCNT_ID,\r\nSERV_ACCT_ID,\r\nBILL_PROFILE_ID,\r\nPAR_ASSET_ID,\r\nROOT_ASSET_ID,\r\nPR_CON_ID,\r\nOU_ADDR_ID,\r\nOWNER_CON_ID,\r\nPROMOTION_ID,\r\nPASSWORD,\r\nX_PKG_CODE,\r\nX_PROMOTION_START_DATE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_assets_s_asset') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nASSET_NUM,\r\nEND_DT,\r\nSTATUS_CD,\r\nX_ACTIVATION_DT,\r\nX_APP_COUNTRY,\r\nX_ASSET_DETAILS,\r\nX_BRAND_CD,\r\nX_COMPANY_CARD,\r\nX_DUAL_CARD,\r\nX_PENDING_ORDER,\r\nX_PLANNED_DISC_DATE,\r\nX_PRICE_PLAN_CODE,\r\nX_PRIMARY_ATTR_NAME,\r\nX_PRIMARY_ATTR_VALUE,\r\nX_T2_PRODUCT_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_VERSION_DT,\r\nUOM_CD,\r\nX_ALLOW_PORT_OUT,\r\nX_CALL_SPECIFICATION,\r\nX_NOTICE_PERIOD,\r\nX_NOTICE_PERIOD_END_DATE,\r\nX_PACKAGE_CODE,\r\nX_PIN,\r\nX_PLANNED_DISC_REASON,\r\nX_PRICE_PLAN_DATE,\r\nX_PUK1,\r\nX_REGRET_END_DT,\r\nX_SERVICE_SUB_TYPE,\r\nX_WSC_ADMIN_FLG,\r\nINSTALL_DT,\r\nPURCH_DT,\r\nREGISTERED_DT,\r\nSTART_DT,\r\nINTEGRATION_ID,\r\nX_ENTITLEMENT_ID,\r\nCUR_AGREE_ID,\r\nPROD_ID,\r\nOWNER_ACCNT_ID,\r\nBILL_ACCNT_ID,\r\nSERV_ACCT_ID,\r\nBILL_PROFILE_ID,\r\nPAR_ASSET_ID,\r\nROOT_ASSET_ID,\r\nPR_CON_ID,\r\nOU_ADDR_ID,\r\nOWNER_CON_ID,\r\nPROMOTION_ID,\r\nPASSWORD,\r\nX_PKG_CODE,\r\nX_PROMOTION_START_DATE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'assets_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "assets"], ["bdh_ee_siebel", "assets"], ["bdh_ee_siebel", "assets"], ["bdh_ee_siebel", "assets_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.assets", "source.bdh_dbt_models.bdh_ee_siebel.assets_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_assets_xa": {"database": "bdh_ee", "schema": "siebel", "name": "ee_assets_xa", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_assets_xa_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_assets_xa_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_assets_xa", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_assets_xa_snapshot", "ee_assets_xa"], "alias": "assets_xa", "checksum": {"name": "sha256", "checksum": "c4ed694aba3ce4460ec655b44c8d3a1a5278176758e12f889ece9c1f367b771e"}, "config": {"enabled": true, "alias": "assets_xa", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "assets_xa", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.201442, "relation_name": "bdh_ee.siebel.assets_xa", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"assets_xa\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'assets_xa').database,\r\n      schema=source('bdh_ee_siebel', 'assets_xa').schema,\r\n      identifier=source('bdh_ee_siebel', 'assets_xa').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTR_NAME,\r\nDISPLAY_NAME,\r\nHIDDEN_FLG,\r\nDATA_TYPE_CD,\r\nCHAR_VAL,\r\nNUM_VAL,\r\nDATE_VAL,\r\nATTR_ID,\r\nASSET_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_asset_attributes_s_asset_xa') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTR_NAME,\r\nDISPLAY_NAME,\r\nHIDDEN_FLG,\r\nDATA_TYPE_CD,\r\nCHAR_VAL,\r\nNUM_VAL,\r\nDATE_VAL,\r\nATTR_ID,\r\nASSET_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'assets_xa_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "assets_xa"], ["bdh_ee_siebel", "assets_xa"], ["bdh_ee_siebel", "assets_xa"], ["bdh_ee_siebel", "assets_xa_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.assets_xa", "source.bdh_dbt_models.bdh_ee_siebel.assets_xa_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_assets_x": {"database": "bdh_ee", "schema": "siebel", "name": "ee_assets_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_assets_x_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_assets_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_assets_x", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_assets_x_snapshot", "ee_assets_x"], "alias": "assets_x", "checksum": {"name": "sha256", "checksum": "13b121a88d988408851c8cc9f2747e50cbdc27b77913e24de6ac0946231191cd"}, "config": {"enabled": true, "alias": "assets_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "assets_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2104487, "relation_name": "bdh_ee.siebel.assets_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"assets_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'assets_x').database,\r\n      schema=source('bdh_ee_siebel', 'assets_x').schema,\r\n      identifier=source('bdh_ee_siebel', 'assets_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_32,\r\nX_BIND_PERIOD,\r\nATTRIB_31,\r\nX_INVOICE_FLG,\r\nATTRIB_01,\r\nATTRIB_09,\r\nX_REF,\r\nATTRIB_07,\r\nATTRIB_34,\r\nATTRIB_03,\r\nATTRIB_27,\r\nATTRIB_26,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_assets_s_asset_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_32,\r\nX_BIND_PERIOD,\r\nATTRIB_31,\r\nX_INVOICE_FLG,\r\nATTRIB_01,\r\nATTRIB_09,\r\nX_REF,\r\nATTRIB_07,\r\nATTRIB_34,\r\nATTRIB_03,\r\nATTRIB_27,\r\nATTRIB_26,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'assets_x_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "assets_x"], ["bdh_ee_siebel", "assets_x"], ["bdh_ee_siebel", "assets_x"], ["bdh_ee_siebel", "assets_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.assets_x", "source.bdh_dbt_models.bdh_ee_siebel.assets_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_audit_item": {"database": "bdh_ee", "schema": "siebel", "name": "ee_audit_item", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_audit_item_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_audit_item_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_audit_item", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_audit_item_snapshot", "ee_audit_item"], "alias": "audit_item", "checksum": {"name": "sha256", "checksum": "696cc5bb775a30f2f7b4d70ab003fe0e26de23ca1ee44b7423c5e8f1bb3a2b70"}, "config": {"enabled": true, "alias": "audit_item", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "audit_item", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2174494, "relation_name": "bdh_ee.siebel.audit_item", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"audit_item\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'audit_item').database,\r\n      schema=source('bdh_ee_siebel', 'audit_item').schema,\r\n      identifier=source('bdh_ee_siebel', 'audit_item').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nBUSCOMP_NAME,\r\nOPERATION_CD,\r\nRECORD_ID,\r\nUSER_ID,\r\nAUDIT_LOG,\r\nOPERATION_DT,\r\nBC_BASE_TBL,\r\nCHILD_BC_BASE_TBL,\r\nCHILD_BC_NAME,\r\nCHILD_RECORD_ID,\r\nFIELD_NAME,\r\nGROUP_NUM,\r\nLINK_NAME,\r\nNEW_VAL,\r\nNODE_NAME,\r\nOLD_VAL,\r\nSRC_DEST_ID,\r\nTBL_NAME,\r\nTBL_RECORD_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_audit_trail_s_audit_item') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nBUSCOMP_NAME,\r\nOPERATION_CD,\r\nRECORD_ID,\r\nUSER_ID,\r\nAUDIT_LOG,\r\nOPERATION_DT,\r\nBC_BASE_TBL,\r\nCHILD_BC_BASE_TBL,\r\nCHILD_BC_NAME,\r\nCHILD_RECORD_ID,\r\nFIELD_NAME,\r\nGROUP_NUM,\r\nLINK_NAME,\r\nNEW_VAL,\r\nNODE_NAME,\r\nOLD_VAL,\r\nSRC_DEST_ID,\r\nTBL_NAME,\r\nTBL_RECORD_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'audit_item_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "audit_item"], ["bdh_ee_siebel", "audit_item"], ["bdh_ee_siebel", "audit_item"], ["bdh_ee_siebel", "audit_item_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.audit_item", "source.bdh_dbt_models.bdh_ee_siebel.audit_item_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_billing_profile": {"database": "bdh_ee", "schema": "siebel", "name": "ee_billing_profile", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_billing_profile_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_billing_profile_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_billing_profile", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_billing_profile_snapshot", "ee_billing_profile"], "alias": "billing_profile", "checksum": {"name": "sha256", "checksum": "c9fdd31c736c7db1eaf77c47113f5a95c4248e8b8d3df443a2c8d0c34342c7e8"}, "config": {"enabled": true, "alias": "billing_profile", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "billing_profile", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.223972, "relation_name": "bdh_ee.siebel.billing_profile", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"billing_profile\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'billing_profile').database,\r\n      schema=source('bdh_ee_siebel', 'billing_profile').schema,\r\n      identifier=source('bdh_ee_siebel', 'billing_profile').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nBILL_CYCLE_DAY,\r\nBILL_FREQ_CD,\r\nBILL_PREF_CD,\r\nEMAIL_ADDR,\r\nMEDIA_TYPE_CD,\r\nPAYMT_METH_CD,\r\nX_BILL_CYCLE,\r\nX_BILLING_REPORT_LEVEL,\r\nX_CUSTOMER_INVOICE_REFERNECE,\r\nX_DD_EXP_DATE,\r\nX_INVOICE_FEE,\r\nX_INVOICE_INFORMATION,\r\nX_MAX_DD_TRANS_AMOUNT,\r\nX_NO_POST_FLG,\r\nX_NOTIF_LANG_CD,\r\nX_OVERDUE_INTEREST_WAIVED,\r\nX_PAY_METHOD_PROVIDER,\r\nX_PAYMENT_TERM,\r\nX_SPECIFICATION_FEE,\r\nX_TREATMENT_CATEGORY,\r\nACCNT_ID,\r\nADDR_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_billing_profile_s_inv_prof') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nBILL_CYCLE_DAY,\r\nBILL_FREQ_CD,\r\nBILL_PREF_CD,\r\nEMAIL_ADDR,\r\nMEDIA_TYPE_CD,\r\nPAYMT_METH_CD,\r\nX_BILL_CYCLE,\r\nX_BILLING_REPORT_LEVEL,\r\nX_CUSTOMER_INVOICE_REFERNECE,\r\nX_DD_EXP_DATE,\r\nX_INVOICE_FEE,\r\nX_INVOICE_INFORMATION,\r\nX_MAX_DD_TRANS_AMOUNT,\r\nX_NO_POST_FLG,\r\nX_NOTIF_LANG_CD,\r\nX_OVERDUE_INTEREST_WAIVED,\r\nX_PAY_METHOD_PROVIDER,\r\nX_PAYMENT_TERM,\r\nX_SPECIFICATION_FEE,\r\nX_TREATMENT_CATEGORY,\r\nACCNT_ID,\r\nADDR_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'billing_profile_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "billing_profile"], ["bdh_ee_siebel", "billing_profile"], ["bdh_ee_siebel", "billing_profile"], ["bdh_ee_siebel", "billing_profile_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.billing_profile", "source.bdh_dbt_models.bdh_ee_siebel.billing_profile_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_campaigns": {"database": "bdh_ee", "schema": "siebel", "name": "ee_campaigns", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_campaigns_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_campaigns_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_campaigns", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_campaigns_snapshot", "ee_campaigns"], "alias": "campaigns", "checksum": {"name": "sha256", "checksum": "f1e96c4a8b084fae44afccf1e950594497251ef3cbfe3eb5464f695457d3890d"}, "config": {"enabled": true, "alias": "campaigns", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "campaigns", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2309783, "relation_name": "bdh_ee.siebel.campaigns", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"campaigns\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'campaigns').database,\r\n      schema=source('bdh_ee_siebel', 'campaigns').schema,\r\n      identifier=source('bdh_ee_siebel', 'campaigns').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nNAME,\r\nDESCRIPTION,\r\nPRIORITY,\r\nPLANNED_SND,\r\nPLANNED_START,\r\nCAMPAIGN_CODE,\r\nSUBTYPE,\r\nTYPE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_campaigns_s_src') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nNAME,\r\nDESCRIPTION,\r\nPRIORITY,\r\nPLANNED_SND,\r\nPLANNED_START,\r\nCAMPAIGN_CODE,\r\nSUBTYPE,\r\nTYPE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'campaigns_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "campaigns"], ["bdh_ee_siebel", "campaigns"], ["bdh_ee_siebel", "campaigns"], ["bdh_ee_siebel", "campaigns_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.campaigns", "source.bdh_dbt_models.bdh_ee_siebel.campaigns_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_consent": {"database": "bdh_ee", "schema": "siebel", "name": "ee_consent", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_consent_snapshot_e.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_consent_snapshot_e.sql", "unique_id": "snapshot.bdh_dbt_models.ee_consent", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_consent_snapshot_e", "ee_consent"], "alias": "consent", "checksum": {"name": "sha256", "checksum": "8ca94c71f825d3bb18652caa6285976488eafa3cc4d9d0a7f05272f22c6c24a6"}, "config": {"enabled": true, "alias": "consent", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "consent", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2389781, "relation_name": "bdh_ee.siebel.consent", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"consent\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'consent').database,\r\n      schema=source('bdh_ee_siebel', 'consent').schema,\r\n      identifier=source('bdh_ee_siebel', 'consent').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nCOUNTRY,\r\nCONSENTLEVEL,\r\nACCOUNTID,\r\nACCOUNTSTATUS,\r\nACCOUNTBUSINESSKEY,\r\nACCOUNTBUSINESSKEYTYPE,\r\nASSETID,\r\nASSETSTATUS,\r\nASSETBUSINESSKEY,\r\nASSETBUSINESSKEYTYPE,\r\nCONSENTTITLE,\r\nCUSTOMERCONSENTVALUE,\r\nCONSENTVERSION,\r\nCONSENTSTATUS,\r\nCUSTOMERCONSENTUPDATETIME,\r\nPRIMARYPOSTPAIDSEGMENT,\r\nSETBY,\r\nSOURCE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nFROM {{ source('bdh_raw_ee_siebel', 'raw_ee_consent_exacaster_') }}\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n COUNTRY,\r\nCONSENTLEVEL,\r\nACCOUNTID,\r\nACCOUNTSTATUS,\r\nACCOUNTBUSINESSKEY,\r\nACCOUNTBUSINESSKEYTYPE,\r\nASSETID,\r\nASSETSTATUS,\r\nASSETBUSINESSKEY,\r\nASSETBUSINESSKEYTYPE,\r\nCONSENTTITLE,\r\nCUSTOMERCONSENTVALUE,\r\nCONSENTVERSION,\r\nCONSENTSTATUS,\r\nCUSTOMERCONSENTUPDATETIME,\r\nPRIMARYPOSTPAIDSEGMENT,\r\nSETBY,\r\nSOURCE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'consent_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "consent"], ["bdh_ee_siebel", "consent"], ["bdh_ee_siebel", "consent"], ["bdh_ee_siebel", "consent_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.consent", "source.bdh_dbt_models.bdh_ee_siebel.consent_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_contact": {"database": "bdh_ee", "schema": "siebel", "name": "ee_contact", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_contact_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_contact_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_contact", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_contact_snapshot", "ee_contact"], "alias": "contact", "checksum": {"name": "sha256", "checksum": "40300a88812c8a8986be42d6f78ee0d1bee85797a6b16141934e659c493847c3"}, "config": {"enabled": true, "alias": "contact", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "contact", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.245975, "relation_name": "bdh_ee.siebel.contact", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"contact\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'contact').database,\r\n      schema=source('bdh_ee_siebel', 'contact').schema,\r\n      identifier=source('bdh_ee_siebel', 'contact').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nINTEGRATION_ID,\r\nPR_PER_ADDR_ID,\r\nX_LEGAL_ADDR_ID,\r\nX_LEGAL_CHECK,\r\nCELL_PH_NUM,\r\nCUST_END_DT,\r\nEMAIL_ADDR,\r\nALT_EMAIL_ADDR,\r\nEMAIL_SR_UPD_FLG,\r\nFST_NAME,\r\nLAST_NAME,\r\nPREF_COMM_METH_CD,\r\nPREF_COMM_MEDIA_CD,\r\nSOC_SECURITY_NUM,\r\nCUST_STAT_CD,\r\nSUPPRESS_CALL_FLG,\r\nSUPPRESS_MAIL_FLG,\r\nX_ADDNL_PHONE_1,\r\nX_ADDNL_PHONE_2,\r\nX_CON_SRC,\r\nX_DISABLE_SSN_FLG,\r\nX_INS_ALT_EMAIL,\r\nX_INSPECT_EMAIL,\r\nX_EMAIL_OFFERS_FLG,\r\nX_PRIMARY_PHONE_NUM,\r\nX_SEC_CUST,\r\nX_SELF_SERVICE_PORTAL,\r\nCON_TYPE,\r\nWORK_PH_NUM,\r\nPR_ACC_ID,\r\nPOSITION_ID,\r\nCONTACT_ID,\r\nBIRTHDAY,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_contacts_s_contact') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nINTEGRATION_ID,\r\nPR_PER_ADDR_ID,\r\nX_LEGAL_ADDR_ID,\r\nX_LEGAL_CHECK,\r\nCELL_PH_NUM,\r\nCUST_END_DT,\r\nEMAIL_ADDR,\r\nALT_EMAIL_ADDR,\r\nEMAIL_SR_UPD_FLG,\r\nFST_NAME,\r\nLAST_NAME,\r\nPREF_COMM_METH_CD,\r\nPREF_COMM_MEDIA_CD,\r\nSOC_SECURITY_NUM,\r\nCUST_STAT_CD,\r\nSUPPRESS_CALL_FLG,\r\nSUPPRESS_MAIL_FLG,\r\nX_ADDNL_PHONE_1,\r\nX_ADDNL_PHONE_2,\r\nX_CON_SRC,\r\nX_DISABLE_SSN_FLG,\r\nX_INS_ALT_EMAIL,\r\nX_INSPECT_EMAIL,\r\nX_EMAIL_OFFERS_FLG,\r\nX_PRIMARY_PHONE_NUM,\r\nX_SEC_CUST,\r\nX_SELF_SERVICE_PORTAL,\r\nCON_TYPE,\r\nWORK_PH_NUM,\r\nPR_ACC_ID,\r\nPOSITION_ID,\r\nCONTACT_ID,\r\nBIRTHDAY,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'contact_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "contact"], ["bdh_ee_siebel", "contact"], ["bdh_ee_siebel", "contact"], ["bdh_ee_siebel", "contact_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.contact", "source.bdh_dbt_models.bdh_ee_siebel.contact_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_contact_x": {"database": "bdh_ee", "schema": "siebel", "name": "ee_contact_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_contact_x_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_contact_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_contact_x", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_contact_x_snapshot", "ee_contact_x"], "alias": "contact_x", "checksum": {"name": "sha256", "checksum": "d1eb153bf1ca1f3e7ed068625ac2ce8bd4488ee1da7add27eb9812e7f0da4564"}, "config": {"enabled": true, "alias": "contact_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "contact_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2539759, "relation_name": "bdh_ee.siebel.contact_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"contact_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'contact_x').database,\r\n      schema=source('bdh_ee_siebel', 'contact_x').schema,\r\n      identifier=source('bdh_ee_siebel', 'contact_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_11,\r\nATTRIB_10,\r\nATTRIB_44,\r\nATTRIB_43,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_contacts_s_contact_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_11,\r\nATTRIB_10,\r\nATTRIB_44,\r\nATTRIB_43,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'contact_x_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "contact_x"], ["bdh_ee_siebel", "contact_x"], ["bdh_ee_siebel", "contact_x"], ["bdh_ee_siebel", "contact_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.contact_x", "source.bdh_dbt_models.bdh_ee_siebel.contact_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_cx_nt_acc_pref": {"database": "bdh_ee", "schema": "siebel", "name": "ee_cx_nt_acc_pref", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_cx_nt_acc_pref_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_cx_nt_acc_pref_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_cx_nt_acc_pref", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_cx_nt_acc_pref_snapshot", "ee_cx_nt_acc_pref"], "alias": "cx_nt_acc_pref", "checksum": {"name": "sha256", "checksum": "37fdcbeef59174906340595f5f8c0a744f95d1ef24241e96b342d46bb6ed16d9"}, "config": {"enabled": true, "alias": "cx_nt_acc_pref", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "cx_nt_acc_pref", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2609775, "relation_name": "bdh_ee.siebel.cx_nt_acc_pref", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"cx_nt_acc_pref\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'cx_nt_acc_pref').database,\r\n      schema=source('bdh_ee_siebel', 'cx_nt_acc_pref').schema,\r\n      identifier=source('bdh_ee_siebel', 'cx_nt_acc_pref').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nID,\r\nPREFERENCE_NAME,\r\nACCOUNT_ID,\r\nVALUE,\r\nASSET_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_notification_cx_nt_acc_pref') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ID,\r\nPREFERENCE_NAME,\r\nACCOUNT_ID,\r\nVALUE,\r\nASSET_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'cx_nt_acc_pref_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "cx_nt_acc_pref"], ["bdh_ee_siebel", "cx_nt_acc_pref"], ["bdh_ee_siebel", "cx_nt_acc_pref"], ["bdh_ee_siebel", "cx_nt_acc_pref_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref", "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_cx_pay_schedule": {"database": "bdh_ee", "schema": "siebel", "name": "ee_cx_pay_schedule", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_cx_pay_schedule_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_cx_pay_schedule_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_cx_pay_schedule", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_cx_pay_schedule_snapshot", "ee_cx_pay_schedule"], "alias": "cx_pay_schedule", "checksum": {"name": "sha256", "checksum": "7d82d62ee41c9205739df3e7ea852dad3e4170e6aeb08eb43891bac12efca36e"}, "config": {"enabled": true, "alias": "cx_pay_schedule", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "cx_pay_schedule", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2699761, "relation_name": "bdh_ee.siebel.cx_pay_schedule", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"cx_pay_schedule\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'cx_pay_schedule').database,\r\n      schema=source('bdh_ee_siebel', 'cx_pay_schedule').schema,\r\n      identifier=source('bdh_ee_siebel', 'cx_pay_schedule').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nID,\r\nCREATED,\r\nCREATEDBY,\r\nUPDATED,\r\nUPDATEDBY,\r\nSCHEDULETYPE,\r\nSCHEDULESTATUS,\r\nSCHEDULEDURATION,\r\nSCHEDULESTARTDATE,\r\nACCOUNTBALANCE,\r\nBARREDNUMBERS,\r\nDIGITALSIGNATUREFLAG,\r\nPROCESSFEEFLAG,\r\nFIRSTPAYMENTAMOUNT,\r\nFIRSTPAYMENTDATE,\r\nACCOUNTID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_paymentschedule_cx_pay_schedule') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ID,\r\nCREATED,\r\nCREATEDBY,\r\nUPDATED,\r\nUPDATEDBY,\r\nSCHEDULETYPE,\r\nSCHEDULESTATUS,\r\nSCHEDULEDURATION,\r\nSCHEDULESTARTDATE,\r\nACCOUNTBALANCE,\r\nBARREDNUMBERS,\r\nDIGITALSIGNATUREFLAG,\r\nPROCESSFEEFLAG,\r\nFIRSTPAYMENTAMOUNT,\r\nFIRSTPAYMENTDATE,\r\nACCOUNTID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'cx_pay_schedule_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "cx_pay_schedule"], ["bdh_ee_siebel", "cx_pay_schedule"], ["bdh_ee_siebel", "cx_pay_schedule"], ["bdh_ee_siebel", "cx_pay_schedule_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule", "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_cx_vas_provider": {"database": "bdh_ee", "schema": "siebel", "name": "ee_cx_vas_provider", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_cx_vas_provider.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_cx_vas_provider.sql", "unique_id": "snapshot.bdh_dbt_models.ee_cx_vas_provider", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_cx_vas_provider", "ee_cx_vas_provider"], "alias": "cx_vas_provider", "checksum": {"name": "sha256", "checksum": "4609e9558e6abdc02c20a480f72bb439d43424fff39da5577590c89d8a298e2a"}, "config": {"enabled": true, "alias": "cx_vas_provider", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "cx_vas_provider", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2769759, "relation_name": "bdh_ee.siebel.cx_vas_provider", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"cx_vas_provider\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'cx_vas_provider').database,\r\n      schema=source('bdh_ee_siebel', 'cx_vas_provider').schema,\r\n      identifier=source('bdh_ee_siebel', 'cx_vas_provider').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nLANGUAGE_ID,\r\nMONTHLY_FEE,\r\nPARTNER_NAME,\r\nPRICE,\r\nPRICING_INCREMENT,\r\nPRICING_RULE,\r\nSHORT_NUMBER,\r\nACTIVE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_vas_providers_cx_vas_provider') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nLANGUAGE_ID,\r\nMONTHLY_FEE,\r\nPARTNER_NAME,\r\nPRICE,\r\nPRICING_INCREMENT,\r\nPRICING_RULE,\r\nSHORT_NUMBER,\r\nACTIVE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'cx_vas_provider_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "cx_vas_provider"], ["bdh_ee_siebel", "cx_vas_provider"], ["bdh_ee_siebel", "cx_vas_provider"], ["bdh_ee_siebel", "cx_vas_provider_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider", "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_dd_contract": {"database": "bdh_ee", "schema": "siebel", "name": "ee_dd_contract", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_dd_contract.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_dd_contract.sql", "unique_id": "snapshot.bdh_dbt_models.ee_dd_contract", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_dd_contract", "ee_dd_contract"], "alias": "dd_contract", "checksum": {"name": "sha256", "checksum": "263f6d01a782f8a9e4ff3b14f7b3b4facc29642c29ac6c10116085971952330a"}, "config": {"enabled": true, "alias": "dd_contract", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "x_account_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "x_account_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "dd_contract", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2839777, "relation_name": "bdh_ee.siebel.dd_contract", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='x_account_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"dd_contract\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'dd_contract').database,\r\n      schema=source('bdh_ee_siebel', 'dd_contract').schema,\r\n      identifier=source('bdh_ee_siebel', 'dd_contract').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nX_ACCOUNT_ID,\r\nX_BA_NUM,\r\nX_CONTRACT_NUM,\r\nX_INVOICE_TYPE,\r\nX_BANK_NAME,\r\nX_BANK_ACC_NUM,\r\nX_CONTRACT_START_DT,\r\nX_CONTRACT_STATE_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY X_ACCOUNT_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_dd_cx_dd_contract') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\nX_ACCOUNT_ID,\r\nX_BA_NUM,\r\nX_CONTRACT_NUM,\r\nX_INVOICE_TYPE,\r\nX_BANK_NAME,\r\nX_BANK_ACC_NUM,\r\nX_CONTRACT_START_DT,\r\nX_CONTRACT_STATE_CD,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'dd_contract_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "dd_contract"], ["bdh_ee_siebel", "dd_contract"], ["bdh_ee_siebel", "dd_contract"], ["bdh_ee_siebel", "dd_contract_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.dd_contract", "source.bdh_dbt_models.bdh_ee_siebel.dd_contract_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_invc_adj_item": {"database": "bdh_ee", "schema": "siebel", "name": "ee_invc_adj_item", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_invc_adj_item.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_invc_adj_item.sql", "unique_id": "snapshot.bdh_dbt_models.ee_invc_adj_item", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_invc_adj_item", "ee_invc_adj_item"], "alias": "invc_adj_item", "checksum": {"name": "sha256", "checksum": "e028dc11dae55fbc76d84c315b106736ac4f2d5413a6fcf1d9f071ea69373cc6"}, "config": {"enabled": true, "alias": "invc_adj_item", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "invc_adj_item", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2919755, "relation_name": "bdh_ee.siebel.invc_adj_item", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"invc_adj_item\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'invc_adj_item').database,\r\n      schema=source('bdh_ee_siebel', 'invc_adj_item').schema,\r\n      identifier=source('bdh_ee_siebel', 'invc_adj_item').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nINVOICE_ADJUSTMENT_ID,\r\nINVOICE_ITEM_ID,\r\nADJUSTMENT_VALUE,\r\nADJUSTMENT_EFFECTIVE_DATE,\r\nADJUSTMENT_PERCENTAGE,\r\nAPPROVED_AMOUNT,\r\nAPPROVED_ADJUSTMENT_PERCENTAGE,\r\nAPPROVED_EXCHANGE_DATE,\r\nAPPROVED_PERCENTAGE,\r\nORIGINAL_VALUE,\r\nREQUESTED_AMOUNT,\r\nREQUEST_EXCHANGE_DATE,\r\nREQUESTED_PERCENTAGE,\r\nREQUESTED_VALUE,\r\nTAX_VALUE,\r\nADJUSTMENT_TYPE,\r\nAPPROVED_CURRENCY,\r\nDECISION_DESCRIPTION,\r\nINTEGRATION_ID,\r\nINVOICE_ITEM_DETAIL_ID,\r\nNOTES,\r\nREASON,\r\nREQUESTED_CURRENCY,\r\nREQUEST_DESCRIPTION,\r\nRESOURCE_TO_ADJUSTMENT,\r\nSTATUS,\r\nSTATUS_DESCRIPTION,\r\nSUB_STATUS,\r\nTAX_TREATMENT,\r\nACCOUNT_ID,\r\nPRODUCT_TYPE,\r\nREASON_TYPE,\r\nSUB_TYPE,\r\nTYPE,\r\nUNIQUE_NOTE,\r\nASSET_ID,\r\nINVOICE_ID,\r\nCOLUMN42,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_adjustment_items_s_invc_adj_item') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nINVOICE_ADJUSTMENT_ID,\r\nINVOICE_ITEM_ID,\r\nADJUSTMENT_VALUE,\r\nADJUSTMENT_EFFECTIVE_DATE,\r\nADJUSTMENT_PERCENTAGE,\r\nAPPROVED_AMOUNT,\r\nAPPROVED_ADJUSTMENT_PERCENTAGE,\r\nAPPROVED_EXCHANGE_DATE,\r\nAPPROVED_PERCENTAGE,\r\nORIGINAL_VALUE,\r\nREQUESTED_AMOUNT,\r\nREQUEST_EXCHANGE_DATE,\r\nREQUESTED_PERCENTAGE,\r\nREQUESTED_VALUE,\r\nTAX_VALUE,\r\nADJUSTMENT_TYPE,\r\nAPPROVED_CURRENCY,\r\nDECISION_DESCRIPTION,\r\nINTEGRATION_ID,\r\nINVOICE_ITEM_DETAIL_ID,\r\nNOTES,\r\nREASON,\r\nREQUESTED_CURRENCY,\r\nREQUEST_DESCRIPTION,\r\nRESOURCE_TO_ADJUSTMENT,\r\nSTATUS,\r\nSTATUS_DESCRIPTION,\r\nSUB_STATUS,\r\nTAX_TREATMENT,\r\nACCOUNT_ID,\r\nPRODUCT_TYPE,\r\nREASON_TYPE,\r\nSUB_TYPE,\r\nTYPE,\r\nUNIQUE_NOTE,\r\nASSET_ID,\r\nINVOICE_ID,\r\nCOLUMN42,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'invc_adj_item_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "invc_adj_item"], ["bdh_ee_siebel", "invc_adj_item"], ["bdh_ee_siebel", "invc_adj_item"], ["bdh_ee_siebel", "invc_adj_item_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item", "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_invoice_adj": {"database": "bdh_ee", "schema": "siebel", "name": "ee_invoice_adj", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_invoice_adj.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_invoice_adj.sql", "unique_id": "snapshot.bdh_dbt_models.ee_invoice_adj", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_invoice_adj", "ee_invoice_adj"], "alias": "invoice_adj", "checksum": {"name": "sha256", "checksum": "8fc1257f92b635b00e9979d65210cbeb8351a6d92fa657a0b0dd6c280a7ebe7a"}, "config": {"enabled": true, "alias": "invoice_adj", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "invoice_adj", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.2999759, "relation_name": "bdh_ee.siebel.invoice_adj", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"invoice_adj\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'invoice_adj').database,\r\n      schema=source('bdh_ee_siebel', 'invoice_adj').schema,\r\n      identifier=source('bdh_ee_siebel', 'invoice_adj').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nINVOICE_ID,\r\nSEQUENCE_NO,\r\nADJUSTMENT_EFFECTIVE_DATE,\r\nAPPROVED_AMOUNT,\r\nAPPROVED_DATE,\r\nAPPROVED_EXCHANGE_DATE,\r\nAPPROVED_PERCENTAGE,\r\nCUSTOMER_DECISION_DATE,\r\nREQUEST_AMOUNT,\r\nREQUEST_DATE,\r\nREQUEST_EXCHANGE_DATE,\r\nREQUEST_PERCENTAGE,\r\nTAX_VALUE,\r\nADJUSTMENT_CLASS,\r\nADJUSTMENT_LEVEL,\r\nALERT_ID,\r\nAPPROVED_CURRENCY,\r\nBILLING_PROFILE_ID,\r\nCUSTOMER_DECISION,\r\nDECISION_DESCRIPTION,\r\nEXTERNAL_BILLING__,\r\nINTEGRATION_ID,\r\nREASON_TYPE,\r\nREQUESTED_CURRENCY,\r\nREQUEST_DESCRIPTION,\r\nSERVICE_ACCOUNT_ID,\r\nSTATUS,\r\nSTATUS_DESCRIPTION,\r\nACCOUNT_ID,\r\nADJUSTMENT_TYPE,\r\nBILLING_ACCOUNT_ID,\r\nMASTER_ACCOUNT_ID,\r\nSERVICE_REQUEST_ID,\r\nRESPONSIBLE_ID,\r\nSMS_CALL_QUANTITY,\r\nUSER_RESPONSIBLE_AMOUNT,\r\nVAS_PROVIDER,\r\nTAX_TREATMENT,\r\nTYPE,\r\nADJUSTMENT_ALLOCATION,\r\nAPPROVED_BY,\r\nASSET_ID,\r\nCREDIT_DEBIT,\r\nINT_STATUS,\r\nPRODUCT_TYPE,\r\nREFUND,\r\nREJECT_REASON,\r\nSEND_MEMO_NOTE,\r\nSUB_TYPE,\r\nUNIQUE_NOTE,\r\nVAT_AMOUNT_INCLUDED,\r\nHIERARCHICAL_FLAG,\r\nSEND_NOTIFICATION_FLAG,\r\nAGENT_NAME,\r\nVAS_PROVIDER_NAME,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_adjustments_s_invoice_adj') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nINVOICE_ID,\r\nSEQUENCE_NO,\r\nADJUSTMENT_EFFECTIVE_DATE,\r\nAPPROVED_AMOUNT,\r\nAPPROVED_DATE,\r\nAPPROVED_EXCHANGE_DATE,\r\nAPPROVED_PERCENTAGE,\r\nCUSTOMER_DECISION_DATE,\r\nREQUEST_AMOUNT,\r\nREQUEST_DATE,\r\nREQUEST_EXCHANGE_DATE,\r\nREQUEST_PERCENTAGE,\r\nTAX_VALUE,\r\nADJUSTMENT_CLASS,\r\nADJUSTMENT_LEVEL,\r\nALERT_ID,\r\nAPPROVED_CURRENCY,\r\nBILLING_PROFILE_ID,\r\nCUSTOMER_DECISION,\r\nDECISION_DESCRIPTION,\r\nEXTERNAL_BILLING__,\r\nINTEGRATION_ID,\r\nREASON_TYPE,\r\nREQUESTED_CURRENCY,\r\nREQUEST_DESCRIPTION,\r\nSERVICE_ACCOUNT_ID,\r\nSTATUS,\r\nSTATUS_DESCRIPTION,\r\nACCOUNT_ID,\r\nADJUSTMENT_TYPE,\r\nBILLING_ACCOUNT_ID,\r\nMASTER_ACCOUNT_ID,\r\nSERVICE_REQUEST_ID,\r\nRESPONSIBLE_ID,\r\nSMS_CALL_QUANTITY,\r\nUSER_RESPONSIBLE_AMOUNT,\r\nVAS_PROVIDER,\r\nTAX_TREATMENT,\r\nTYPE,\r\nADJUSTMENT_ALLOCATION,\r\nAPPROVED_BY,\r\nASSET_ID,\r\nCREDIT_DEBIT,\r\nINT_STATUS,\r\nPRODUCT_TYPE,\r\nREFUND,\r\nREJECT_REASON,\r\nSEND_MEMO_NOTE,\r\nSUB_TYPE,\r\nUNIQUE_NOTE,\r\nVAT_AMOUNT_INCLUDED,\r\nHIERARCHICAL_FLAG,\r\nSEND_NOTIFICATION_FLAG,\r\nAGENT_NAME,\r\nVAS_PROVIDER_NAME,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'invoice_adj_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "invoice_adj"], ["bdh_ee_siebel", "invoice_adj"], ["bdh_ee_siebel", "invoice_adj"], ["bdh_ee_siebel", "invoice_adj_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.invoice_adj", "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_list_of_values": {"database": "bdh_ee", "schema": "siebel", "name": "ee_list_of_values", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_list_of_values_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_list_of_values_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_list_of_values", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_list_of_values_snapshot", "ee_list_of_values"], "alias": "list_of_values", "checksum": {"name": "sha256", "checksum": "ca109677614c009549985fc4c4565045361ad0ccd651c5f46e923de08d925b06"}, "config": {"enabled": true, "alias": "list_of_values", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "list_of_values", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3079886, "relation_name": "bdh_ee.siebel.list_of_values", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"list_of_values\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'list_of_values').database,\r\n      schema=source('bdh_ee_siebel', 'list_of_values').schema,\r\n      identifier=source('bdh_ee_siebel', 'list_of_values').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nDFLT_LIC_FLG,\r\nDESC_TEXT,\r\nHIGH,\r\nLOW,\r\nSUB_TYPE,\r\nMULTI_LINGUAL_FLG,\r\nNAME,\r\nORDER_BY,\r\nRPLCTN_LVL_CD,\r\nTRANSLATE_FLG,\r\nVAL,\r\nLANG_ID,\r\nTYPE,\r\nPAR_ROW_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_list_of_values_s_lst_of_val') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nDFLT_LIC_FLG,\r\nDESC_TEXT,\r\nHIGH,\r\nLOW,\r\nSUB_TYPE,\r\nMULTI_LINGUAL_FLG,\r\nNAME,\r\nORDER_BY,\r\nRPLCTN_LVL_CD,\r\nTRANSLATE_FLG,\r\nVAL,\r\nLANG_ID,\r\nTYPE,\r\nPAR_ROW_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'list_of_values_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "list_of_values"], ["bdh_ee_siebel", "list_of_values"], ["bdh_ee_siebel", "list_of_values"], ["bdh_ee_siebel", "list_of_values_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.list_of_values", "source.bdh_dbt_models.bdh_ee_siebel.list_of_values_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_logs": {"database": "bdh_ee", "schema": "siebel", "name": "ee_logs", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_logs_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_logs_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_logs", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_logs_snapshot", "ee_logs"], "alias": "logs", "checksum": {"name": "sha256", "checksum": "7a1af13279ab7b759d0eff6e322d6e25f545001e4c86eacda4667057f5946714"}, "config": {"enabled": true, "alias": "logs", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "logs", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3149886, "relation_name": "bdh_ee.siebel.logs", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"logs\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'logs').database,\r\n      schema=source('bdh_ee_siebel', 'logs').schema,\r\n      identifier=source('bdh_ee_siebel', 'logs').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCHANNEL,\r\nDESC_TEXT,\r\nDETAILS,\r\nDIVISION,\r\nFUNC_PROC,\r\nOPERATION_DATE,\r\nOUTCOME,\r\nPRIMARY_ATTR_VALUE,\r\nPRIMARY_ATTR_NAME,\r\nSOURCE,\r\nUSR,\r\nSTATUS,\r\nENTITY,\r\nFUNC_AREA,\r\nPUBLIC_FLG,\r\nCODE,\r\nACCOUNT_ID,\r\nASSET_ID,\r\nCONTACT_ID,\r\nINVOICE_ID,\r\nMASTER_ACCOUNT_ID,\r\nORDER_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_logs_cx_bus_log') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCHANNEL,\r\nDESC_TEXT,\r\nDETAILS,\r\nDIVISION,\r\nFUNC_PROC,\r\nOPERATION_DATE,\r\nOUTCOME,\r\nPRIMARY_ATTR_VALUE,\r\nPRIMARY_ATTR_NAME,\r\nSOURCE,\r\nUSR,\r\nSTATUS,\r\nENTITY,\r\nFUNC_AREA,\r\nPUBLIC_FLG,\r\nCODE,\r\nACCOUNT_ID,\r\nASSET_ID,\r\nCONTACT_ID,\r\nINVOICE_ID,\r\nMASTER_ACCOUNT_ID,\r\nORDER_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'logs_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "logs"], ["bdh_ee_siebel", "logs"], ["bdh_ee_siebel", "logs"], ["bdh_ee_siebel", "logs_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.logs", "source.bdh_dbt_models.bdh_ee_siebel.logs_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_notification_settings": {"database": "bdh_ee", "schema": "siebel", "name": "ee_notification_settings", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_notification_settings_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_notification_settings_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_notification_settings", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_notification_settings_snapshot", "ee_notification_settings"], "alias": "notification_settings", "checksum": {"name": "sha256", "checksum": "8f02ed2daa139c9453a41676edcb9870e1d5b83e1df56b2369427bd26bdf2212"}, "config": {"enabled": true, "alias": "notification_settings", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "notification_settings", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3216972, "relation_name": "bdh_ee.siebel.notification_settings", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"notification_settings\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'notification_settings').database,\r\n      schema=source('bdh_ee_siebel', 'notification_settings').schema,\r\n      identifier=source('bdh_ee_siebel', 'notification_settings').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nNAME,\r\nX_OVERRIDE_DEST,\r\nACTIVE,\r\nCONTACT_METH_CD,\r\nTYPE,\r\nCONTACT_ID,\r\nACCNT_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_notification_settings_cx_add_info_xm') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nNAME,\r\nX_OVERRIDE_DEST,\r\nACTIVE,\r\nCONTACT_METH_CD,\r\nTYPE,\r\nCONTACT_ID,\r\nACCNT_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'notification_settings_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "notification_settings"], ["bdh_ee_siebel", "notification_settings"], ["bdh_ee_siebel", "notification_settings"], ["bdh_ee_siebel", "notification_settings_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.notification_settings", "source.bdh_dbt_models.bdh_ee_siebel.notification_settings_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_orders": {"database": "bdh_ee", "schema": "siebel", "name": "ee_orders", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_orders_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_orders_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_orders", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_orders_snapshot", "ee_orders"], "alias": "orders", "checksum": {"name": "sha256", "checksum": "9c07e714bb60e123fad1df913de43f88793b99b9d414472da2882f7160a23327"}, "config": {"enabled": true, "alias": "orders", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "orders", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3327012, "relation_name": "bdh_ee.siebel.orders", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"orders\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'orders').database,\r\n      schema=source('bdh_ee_siebel', 'orders').schema,\r\n      identifier=source('bdh_ee_siebel', 'orders').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nSTATUS_DT,\r\nEAI_ORDER_NUM,\r\nORDER_DT,\r\nORDER_NUM,\r\nREQ_SHIP_DT,\r\nREV_NUM,\r\nSTATUS_CD,\r\nX_AGENT_CODE,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXTERNAL_INV_CODE,\r\nX_HANDLING_MTHD_CD,\r\nX_ORDER_TYPE,\r\nX_PARENT_ORDER_NUM,\r\nX_PARTNER_CODE,\r\nX_ORDER_SOURCE,\r\nACCNT_ID,\r\nBILL_ACCNT_ID,\r\nCONTACT_ID,\r\nCUSTOMER_ID,\r\nX_BILLING_ADDR_ID,\r\nX_CA_ADDR_ID,\r\nX_ORDER_CHANNEL,\r\nX_SHIP_ADDR_ID,\r\nROOT_ORDER_ID,\r\nX_ST_EXTERNAL_REF,\r\nX_AGENT_NAME,\r\nX_TM_ORDER_STARTDATE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_orders_s_order') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nSTATUS_DT,\r\nEAI_ORDER_NUM,\r\nORDER_DT,\r\nORDER_NUM,\r\nREQ_SHIP_DT,\r\nREV_NUM,\r\nSTATUS_CD,\r\nX_AGENT_CODE,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXTERNAL_INV_CODE,\r\nX_HANDLING_MTHD_CD,\r\nX_ORDER_TYPE,\r\nX_PARENT_ORDER_NUM,\r\nX_PARTNER_CODE,\r\nX_ORDER_SOURCE,\r\nACCNT_ID,\r\nBILL_ACCNT_ID,\r\nCONTACT_ID,\r\nCUSTOMER_ID,\r\nX_BILLING_ADDR_ID,\r\nX_CA_ADDR_ID,\r\nX_ORDER_CHANNEL,\r\nX_SHIP_ADDR_ID,\r\nROOT_ORDER_ID,\r\nX_ST_EXTERNAL_REF,\r\nX_AGENT_NAME,\r\nX_TM_ORDER_STARTDATE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'orders_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "orders"], ["bdh_ee_siebel", "orders"], ["bdh_ee_siebel", "orders"], ["bdh_ee_siebel", "orders_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.orders", "source.bdh_dbt_models.bdh_ee_siebel.orders_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_order_line_items": {"database": "bdh_ee", "schema": "siebel", "name": "ee_order_line_items", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_order_line_items_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_order_line_items_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_order_line_items", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_order_line_items_snapshot", "ee_order_line_items"], "alias": "order_line_items", "checksum": {"name": "sha256", "checksum": "79877eaa3bdc98a1f301d8db29e2f80532d649c1a38321a56ef6e6e1de6b788d"}, "config": {"enabled": true, "alias": "order_line_items", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "order_line_items", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.340546, "relation_name": "bdh_ee.siebel.order_line_items", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"order_line_items\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'order_line_items').database,\r\n      schema=source('bdh_ee_siebel', 'order_line_items').schema,\r\n      identifier=source('bdh_ee_siebel', 'order_line_items').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTION_CD,\r\nSTATUS_DT,\r\nBASE_UNIT_PRI,\r\nBILLABLE_FLG,\r\nCARRIER_CD,\r\nORDER_ITM_CURCY_CD,\r\nDESC_TEXT,\r\nREQ_SHIP_DT,\r\nEXCL_PRICING_FLG,\r\nLN_NUM,\r\nLOANER_FLG,\r\nPER_MTH_CHG_SUBTOT,\r\nLINE_NOTE,\r\nONETIME_CHG_SUBTOT,\r\nALW_PART_SHIP_FLG,\r\nPRICING_COMMENT,\r\nPROD_STATUS_CD,\r\nQTY_REQ,\r\nQTY_SHIPPED,\r\nRQST_PORT_DATE,\r\nREVENUE_TYPE_CD,\r\nMUST_DLVR_BY_DT,\r\nSHIP_COMPLETE_FLG,\r\nSHIP_METH_CD,\r\nSHIP_TOGETHER_FLG,\r\nSTATUS_CD,\r\nX_ACTION_TYPE,\r\nX_BINDING_END,\r\nX_BINDING_START,\r\nX_CRED_CHK,\r\nX_CREDIT_CONTROL_NUMBER,\r\nX_DISCNT_REASON,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXPECTED_DELIVERY_DATE,\r\nX_LOC_NAME,\r\nX_LOC_SSN,\r\nX_NOTICE_PERIOD_PROD,\r\nX_PASSWORD,\r\nX_PENALTY_OVER_AMT,\r\nX_PLANNED_DISCONNECT_DATE,\r\nX_PORTIN_DEADLN_DT,\r\nX_POSTAL_TRACKING_ID,\r\nX_PRIMARY_ATTRIB_NAME,\r\nX_PRIMARY_ATTRIB_VAL,\r\nX_PROMOTION_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_STATUS_CODE,\r\nX_SUBSTATUS,\r\nX_WSC_ADMIN_FLG,\r\nWRNTY_RCVR_FLG,\r\nPROD_NAME,\r\nORDER_ID,\r\nADJ_UNIT_PRI,\r\nNET_PRI,\r\nPRI_ADJ_AMT,\r\nASSET_ID,\r\nASSET_INTEG_ID,\r\nBILL_ACCNT_ID,\r\nBO_ORDER_NUM,\r\nCONTACT_ID,\r\nINTEGRATION_ID,\r\nPAR_ORDER_ITEM_ID,\r\nPROD_ID,\r\nROOT_ORDER_ITEM_ID,\r\nSERVICE_NUM,\r\nSERV_ACCNT_ID,\r\nX_PLANNED_DISC_REASON,\r\nX_PRODUCT_DESCRIPTION,\r\nX_ROOT_BIND_PERIOD,\r\nX_VERSION_DATE,\r\nBASE_ITEM_ID,\r\nOWNER_ACCOUNT_ID,\r\nX_EXPECTED_PRED_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_order_line_items_s_order_item') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTION_CD,\r\nSTATUS_DT,\r\nBASE_UNIT_PRI,\r\nBILLABLE_FLG,\r\nCARRIER_CD,\r\nORDER_ITM_CURCY_CD,\r\nDESC_TEXT,\r\nREQ_SHIP_DT,\r\nEXCL_PRICING_FLG,\r\nLN_NUM,\r\nLOANER_FLG,\r\nPER_MTH_CHG_SUBTOT,\r\nLINE_NOTE,\r\nONETIME_CHG_SUBTOT,\r\nALW_PART_SHIP_FLG,\r\nPRICING_COMMENT,\r\nPROD_STATUS_CD,\r\nQTY_REQ,\r\nQTY_SHIPPED,\r\nRQST_PORT_DATE,\r\nREVENUE_TYPE_CD,\r\nMUST_DLVR_BY_DT,\r\nSHIP_COMPLETE_FLG,\r\nSHIP_METH_CD,\r\nSHIP_TOGETHER_FLG,\r\nSTATUS_CD,\r\nX_ACTION_TYPE,\r\nX_BINDING_END,\r\nX_BINDING_START,\r\nX_CRED_CHK,\r\nX_CREDIT_CONTROL_NUMBER,\r\nX_DISCNT_REASON,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXPECTED_DELIVERY_DATE,\r\nX_LOC_NAME,\r\nX_LOC_SSN,\r\nX_NOTICE_PERIOD_PROD,\r\nX_PASSWORD,\r\nX_PENALTY_OVER_AMT,\r\nX_PLANNED_DISCONNECT_DATE,\r\nX_PORTIN_DEADLN_DT,\r\nX_POSTAL_TRACKING_ID,\r\nX_PRIMARY_ATTRIB_NAME,\r\nX_PRIMARY_ATTRIB_VAL,\r\nX_PROMOTION_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_STATUS_CODE,\r\nX_SUBSTATUS,\r\nX_WSC_ADMIN_FLG,\r\nWRNTY_RCVR_FLG,\r\nPROD_NAME,\r\nORDER_ID,\r\nADJ_UNIT_PRI,\r\nNET_PRI,\r\nPRI_ADJ_AMT,\r\nASSET_ID,\r\nASSET_INTEG_ID,\r\nBILL_ACCNT_ID,\r\nBO_ORDER_NUM,\r\nCONTACT_ID,\r\nINTEGRATION_ID,\r\nPAR_ORDER_ITEM_ID,\r\nPROD_ID,\r\nROOT_ORDER_ITEM_ID,\r\nSERVICE_NUM,\r\nSERV_ACCNT_ID,\r\nX_PLANNED_DISC_REASON,\r\nX_PRODUCT_DESCRIPTION,\r\nX_ROOT_BIND_PERIOD,\r\nX_VERSION_DATE,\r\nBASE_ITEM_ID,\r\nOWNER_ACCOUNT_ID,\r\nX_EXPECTED_PRED_ID,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'order_line_items_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "order_line_items"], ["bdh_ee_siebel", "order_line_items"], ["bdh_ee_siebel", "order_line_items"], ["bdh_ee_siebel", "order_line_items_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.order_line_items", "source.bdh_dbt_models.bdh_ee_siebel.order_line_items_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_order_items_xa": {"database": "bdh_ee", "schema": "siebel", "name": "ee_order_items_xa", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_order_line_items_xa_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_order_line_items_xa_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_order_items_xa", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_order_line_items_xa_snapshot", "ee_order_items_xa"], "alias": "order_items_xa", "checksum": {"name": "sha256", "checksum": "4ecc5c691027bd69d59e204f71a46adac409992f6e658f0d33c4857c4fda1498"}, "config": {"enabled": true, "alias": "order_items_xa", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "rowid", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "rowid", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "order_items_xa", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3485477, "relation_name": "bdh_ee.siebel.order_items_xa", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='rowid',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"order_items_xa\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'order_items_xa').database,\r\n      schema=source('bdh_ee_siebel', 'order_items_xa').schema,\r\n      identifier=source('bdh_ee_siebel', 'order_items_xa').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROWID,\r\nCREATEDON,\r\nCREATEDBYID,\r\nUPDATEDON,\r\nUPDATEDBYID,\r\nMODIFICATIONNUM,\r\nCONFLICTID,\r\nATTRIBUTENAME,\r\nHIDDENFLAG,\r\nORDERITEMID,\r\nREADONLYFLAG,\r\nREQUIREDFLAG,\r\nDATEVALUE,\r\nDBLASTUPDATEDON,\r\nNUMVALUE,\r\nPREVDATEVALUE,\r\nPREVNUMVALUE,\r\nSEQNUMBER,\r\nACTION,\r\nATTRIBUTEID,\r\nCFGSTATE,\r\nCHARVALUE,\r\nDATATYPE_,\r\nDBLASTUPDATEDSOURCE,\r\nDESCRIPTION,\r\nDISPLAYNAME,\r\nINTEGRATIONNO,\r\nPREVIOUSVALUE,\r\nUOM,\r\nVALIDATION,\r\nVALIDATIONLOV,\r\nDISPLAYVALUE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROWID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_order_line_items_s_order_item_xa') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROWID,\r\nCREATEDON,\r\nCREATEDBYID,\r\nUPDATEDON,\r\nUPDATEDBYID,\r\nMODIFICATIONNUM,\r\nCONFLICTID,\r\nATTRIBUTENAME,\r\nHIDDENFLAG,\r\nORDERITEMID,\r\nREADONLYFLAG,\r\nREQUIREDFLAG,\r\nDATEVALUE,\r\nDBLASTUPDATEDON,\r\nNUMVALUE,\r\nPREVDATEVALUE,\r\nPREVNUMVALUE,\r\nSEQNUMBER,\r\nACTION,\r\nATTRIBUTEID,\r\nCFGSTATE,\r\nCHARVALUE,\r\nDATATYPE_,\r\nDBLASTUPDATEDSOURCE,\r\nDESCRIPTION,\r\nDISPLAYNAME,\r\nINTEGRATIONNO,\r\nPREVIOUSVALUE,\r\nUOM,\r\nVALIDATION,\r\nVALIDATIONLOV,\r\nDISPLAYVALUE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'order_items_xa_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "order_items_xa"], ["bdh_ee_siebel", "order_items_xa"], ["bdh_ee_siebel", "order_items_xa"], ["bdh_ee_siebel", "order_items_xa_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.order_items_xa", "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_payment_claim": {"database": "bdh_ee", "schema": "siebel", "name": "ee_payment_claim", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_payment_claim_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_payment_claim_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_payment_claim", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_payment_claim_snapshot", "ee_payment_claim"], "alias": "payment_claim", "checksum": {"name": "sha256", "checksum": "7febd96a9bf03ad8c7124ecc0bf651d3c88506af920222ce980194eb7cf384b5"}, "config": {"enabled": true, "alias": "payment_claim", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "payment_claim", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.355542, "relation_name": "bdh_ee.siebel.payment_claim", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"payment_claim\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'payment_claim').database,\r\n      schema=source('bdh_ee_siebel', 'payment_claim').schema,\r\n      identifier=source('bdh_ee_siebel', 'payment_claim').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nUPDATED_ON,\r\nACCOUNT,\r\nCHANNEL,\r\nAMOUNT,\r\nPAYMENT_DATE,\r\nPAYMENT_LOCATION,\r\nEXPIRATION_DATE,\r\nSTATUS,\r\nCOMMENTS,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_payment_claim_cx_pay_claim') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nUPDATED_ON,\r\nACCOUNT,\r\nCHANNEL,\r\nAMOUNT,\r\nPAYMENT_DATE,\r\nPAYMENT_LOCATION,\r\nEXPIRATION_DATE,\r\nSTATUS,\r\nCOMMENTS,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'payment_claim_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "payment_claim"], ["bdh_ee_siebel", "payment_claim"], ["bdh_ee_siebel", "payment_claim"], ["bdh_ee_siebel", "payment_claim_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.payment_claim", "source.bdh_dbt_models.bdh_ee_siebel.payment_claim_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_postn": {"database": "bdh_ee", "schema": "siebel", "name": "ee_postn", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_postn_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_postn_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_postn", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_postn_snapshot", "ee_postn"], "alias": "postn", "checksum": {"name": "sha256", "checksum": "ad8f646fddc00d795abc4872ac9d1951b71f64cc2f2b91ff407149fefbb24d99"}, "config": {"enabled": true, "alias": "postn", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "postn", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.363545, "relation_name": "bdh_ee.siebel.postn", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"postn\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'postn').database,\r\n      schema=source('bdh_ee_siebel', 'postn').schema,\r\n      identifier=source('bdh_ee_siebel', 'postn').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nPDEMP,\r\nDIVISION_ID,\r\nNAME,\r\nLAST_UPDATE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_positions_s_postn') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nPDEMP,\r\nDIVISION_ID,\r\nNAME,\r\nLAST_UPDATE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'postn_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "postn"], ["bdh_ee_siebel", "postn"], ["bdh_ee_siebel", "postn"], ["bdh_ee_siebel", "postn_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.postn", "source.bdh_dbt_models.bdh_ee_siebel.postn_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_product": {"database": "bdh_ee", "schema": "siebel", "name": "ee_product", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_product_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_product_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_product", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_product_snapshot", "ee_product"], "alias": "product", "checksum": {"name": "sha256", "checksum": "d907bb7f7a9e8a5186bd753661abfca343b5fd36c1d75399629a575247e74858"}, "config": {"enabled": true, "alias": "product", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "product", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3695452, "relation_name": "bdh_ee.siebel.product", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"product\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'product').database,\r\n      schema=source('bdh_ee_siebel', 'product').schema,\r\n      identifier=source('bdh_ee_siebel', 'product').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nNAME,\r\nORDERABLE_FLG,\r\nPART_NUM,\r\nTYPE,\r\nCRT_AST_REC_FLG,\r\nUOM_CD,\r\nSTATUS_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_products_s_prod_int') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nNAME,\r\nORDERABLE_FLG,\r\nPART_NUM,\r\nTYPE,\r\nCRT_AST_REC_FLG,\r\nUOM_CD,\r\nSTATUS_CD,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'product_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "product"], ["bdh_ee_siebel", "product"], ["bdh_ee_siebel", "product"], ["bdh_ee_siebel", "product_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.product", "source.bdh_dbt_models.bdh_ee_siebel.product_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_service_request": {"database": "bdh_ee", "schema": "siebel", "name": "ee_service_request", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_service_request_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_service_request_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_service_request", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_service_request_snapshot", "ee_service_request"], "alias": "service_request", "checksum": {"name": "sha256", "checksum": "02a549374004ed54692c16eb31ccc5418672e8eb494bb92af80326043d8fd6a0"}, "config": {"enabled": true, "alias": "service_request", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "service_request", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3775458, "relation_name": "bdh_ee.siebel.service_request", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"service_request\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'service_request').database,\r\n      schema=source('bdh_ee_siebel', 'service_request').schema,\r\n      identifier=source('bdh_ee_siebel', 'service_request').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR_NR,\r\nSR_CREATION_DATE_ON,\r\nSR_STATUS,\r\nSR_SUB_STATUS,\r\nSUMMARY,\r\nPRODUCT_LEVEL_1_,\r\nTYPE,\r\nAREA,\r\nSUB_AREA,\r\nNOTES,\r\nCASE_LEVEL_1,\r\nCASE_LEVEL_2,\r\nCASE_LEVEL_3,\r\nPRODUCT_LEVEL_1,\r\nPRODUCT_LEVEL_2,\r\nPRODUCT_LEVEL_3,\r\nSUPPRESS_NOTIFICATION,\r\nRESOLUTION_CODE,\r\nROOT_CAUSE,\r\nPRIORITY,\r\nIMPACT,\r\nSEVERITY,\r\nCOMMITTED_DATE,\r\nDATE_OPENED,\r\nON_HOLD_TILL,\r\nGROUP_,\r\nSR_OWNER,\r\nRESPONSIBLE_GROUP,\r\nGROUP_ON_RESUME,\r\nCUSTOMER_ID,\r\nCONTACT_ID,\r\nCREATED_BY_GROUP,\r\nASSET_NR,\r\nSOURCE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_service_request_s_srv_req') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR_NR,\r\nSR_CREATION_DATE_ON,\r\nSR_STATUS,\r\nSR_SUB_STATUS,\r\nSUMMARY,\r\nPRODUCT_LEVEL_1_,\r\nTYPE,\r\nAREA,\r\nSUB_AREA,\r\nNOTES,\r\nCASE_LEVEL_1,\r\nCASE_LEVEL_2,\r\nCASE_LEVEL_3,\r\nPRODUCT_LEVEL_1,\r\nPRODUCT_LEVEL_2,\r\nPRODUCT_LEVEL_3,\r\nSUPPRESS_NOTIFICATION,\r\nRESOLUTION_CODE,\r\nROOT_CAUSE,\r\nPRIORITY,\r\nIMPACT,\r\nSEVERITY,\r\nCOMMITTED_DATE,\r\nDATE_OPENED,\r\nON_HOLD_TILL,\r\nGROUP_,\r\nSR_OWNER,\r\nRESPONSIBLE_GROUP,\r\nGROUP_ON_RESUME,\r\nCUSTOMER_ID,\r\nCONTACT_ID,\r\nCREATED_BY_GROUP,\r\nASSET_NR,\r\nSOURCE,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'service_request_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "service_request"], ["bdh_ee_siebel", "service_request"], ["bdh_ee_siebel", "service_request"], ["bdh_ee_siebel", "service_request_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.service_request", "source.bdh_dbt_models.bdh_ee_siebel.service_request_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_service_request_x": {"database": "bdh_ee", "schema": "siebel", "name": "ee_service_request_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_service_request_x_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_service_request_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_service_request_x", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_service_request_x_snapshot", "ee_service_request_x"], "alias": "service_request_x", "checksum": {"name": "sha256", "checksum": "388ba4caa40138002f9d65be0874efaffb24609d587df9774fc4364f7d426676"}, "config": {"enabled": true, "alias": "service_request_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "service_request_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.3865447, "relation_name": "bdh_ee.siebel.service_request_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"service_request_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'service_request_x').database,\r\n      schema=source('bdh_ee_siebel', 'service_request_x').schema,\r\n      identifier=source('bdh_ee_siebel', 'service_request_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR_RESOLUTION_DATE,\r\nAUTO_SERVICE_NOTIFICATION_PREFERENCE,\r\nRESOLUTION,\r\nCAUSED_BY,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_service_request_s_srv_req_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR_RESOLUTION_DATE,\r\nAUTO_SERVICE_NOTIFICATION_PREFERENCE,\r\nRESOLUTION,\r\nCAUSED_BY,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'service_request_x_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "service_request_x"], ["bdh_ee_siebel", "service_request_x"], ["bdh_ee_siebel", "service_request_x"], ["bdh_ee_siebel", "service_request_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.service_request_x", "source.bdh_dbt_models.bdh_ee_siebel.service_request_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.ee_user": {"database": "bdh_ee", "schema": "siebel", "name": "ee_user", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_ee\\siebel\\siebel_v_user_snapshot.sql", "original_file_path": "snapshots\\bdh_ee\\siebel\\siebel_v_user_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.ee_user", "fqn": ["bdh_dbt_models", "bdh_ee", "siebel", "siebel_v_user_snapshot", "ee_user"], "alias": "user", "checksum": {"name": "sha256", "checksum": "f62b4c54d0e322fb84d8908fb1458fdbad2e6bb6ebe53c33ea23e7a10c19b6c7"}, "config": {"enabled": true, "alias": "user", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_ee", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_ee", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "user", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.395546, "relation_name": "bdh_ee.siebel.user", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_ee',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"user\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_ee_siebel', 'user').database,\r\n      schema=source('bdh_ee_siebel', 'user').schema,\r\n      identifier=source('bdh_ee_siebel', 'user').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nPAR_ROW_ID,\r\nLOGIN,\r\nX_ROLE,\r\nSTATUS_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_ee_siebel', 'raw_sbl_users_s_user') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nPAR_ROW_ID,\r\nLOGIN,\r\nX_ROLE,\r\nSTATUS_CD,\r\n    FILE_NAME,\r\n\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom {{ source('bdh_ee_siebel', 'user_cdl') }}\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_ee_siebel", "user"], ["bdh_ee_siebel", "user"], ["bdh_ee_siebel", "user"], ["bdh_ee_siebel", "user_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_ee_siebel.user", "source.bdh_dbt_models.bdh_ee_siebel.user_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_accounts": {"database": "bdh_lt", "schema": "siebel", "name": "v_accounts", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_accounts_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_accounts_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_accounts", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_accounts_snapshot", "v_accounts"], "alias": "v_accounts", "checksum": {"name": "sha256", "checksum": "974c1678cfbfac7d6bad1a050306fc8cefc01c740258c5f6c6de526b0185e714"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4028666, "relation_name": "bdh_lt.siebel.v_accounts", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_accounts').database,\r\n      schema=source('bdh_lt_siebel', 'v_accounts').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_accounts').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\n    ROW_ID,\r\n    CREATED,\r\n    CREATED_BY,\r\n    LAST_UPD,\r\n    LAST_UPD_BY,\r\n    CUST_STAT_CD,\r\n    ACCNT_TYPE_CD,\r\n    ALT_EMAIL_ADDR,\r\n    EAI_SYNC_DT,\r\n    GOOD_STANDING_FLG,\r\n    HSHLD_SIZE,\r\n    LAST_UPDATED,\r\n    MAIN_PH_NUM,\r\n    NAME,\r\n    X_BAD_DEBT,\r\n    CUST_END_DT,\r\n    X_CSR_EDIT,\r\n    X_CUST_SOURCE,\r\n    X_DISABLE_LEGAL_CHK,\r\n    X_GOOD_STANDING_OVEERIDE,\r\n    X_LEG_NUM,\r\n    X_LOYALTY_CD,\r\n    X_SOC_SEC_NUM,\r\n    X_REASON_VAT_EXEMPTION,\r\n    X_SEC_ANS,\r\n    X_SEC_QUES,\r\n    X_VAT_NUMBER,\r\n    OU_TYPE_CD,\r\n    CUST_SINCE_DT,\r\n    PR_ADDR_ID,\r\n    PR_BL_ADDR_ID,\r\n    PR_CON_ID,\r\n    PR_SHIP_ADDR_ID,\r\n    X_LEGAL_CHK,\r\n    CURR_PRI_LST_ID,\r\n    INTEGRATION_ID,\r\n    MASTER_OU_ID,\r\n    OU_NUM,\r\n    X_SEC_CUST,\r\n    PR_POSTN_ID,\r\n    PAR_OU_ID,\r\n    X_PRIMARY_POSTPAID_SEG_CD,\r\n    X_DEACTIVATION_DT,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_accounts_s_org_ext') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n    ROW_ID,\r\n    CREATED,\r\n    CREATED_BY,\r\n    LAST_UPD,\r\n    LAST_UPD_BY,\r\n    CUST_STAT_CD,\r\n    ACCNT_TYPE_CD,\r\n    ALT_EMAIL_ADDR,\r\n    EAI_SYNC_DT,\r\n    GOOD_STANDING_FLG,\r\n    HSHLD_SIZE,\r\n    LAST_UPDATED,\r\n    MAIN_PH_NUM,\r\n    NAME,\r\n    X_BAD_DEBT,\r\n    CUST_END_DT,\r\n    X_CSR_EDIT,\r\n    X_CUST_SOURCE,\r\n    X_DISABLE_LEGAL_CHK,\r\n    X_GOOD_STANDING_OVEERIDE,\r\n    X_LEG_NUM,\r\n    X_LOYALTY_CD,\r\n    X_SOC_SEC_NUM,\r\n    X_REASON_VAT_EXEMPTION,\r\n    X_SEC_ANS,\r\n    X_SEC_QUES,\r\n    X_VAT_NUMBER,\r\n    OU_TYPE_CD,\r\n    CUST_SINCE_DT,\r\n    PR_ADDR_ID,\r\n    PR_BL_ADDR_ID,\r\n    PR_CON_ID,\r\n    PR_SHIP_ADDR_ID,\r\n    X_LEGAL_CHK,\r\n    CURR_PRI_LST_ID,\r\n    INTEGRATION_ID,\r\n    MASTER_OU_ID,\r\n    OU_NUM,\r\n    X_SEC_CUST,\r\n    PR_POSTN_ID,\r\n    PAR_OU_ID,\r\n    X_PRIMARY_POSTPAID_SEG_CD,\r\n    X_DEACTIVATION_DT,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_accounts_cdl') }} )\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_accounts"], ["bdh_lt_siebel", "v_accounts"], ["bdh_lt_siebel", "v_accounts"], ["bdh_lt_siebel", "v_accounts_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts", "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_accounts_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_accounts_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_accounts_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_accounts_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_accounts_x", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_accounts_x_snapshot", "v_accounts_x"], "alias": "v_accounts_x", "checksum": {"name": "sha256", "checksum": "8ee722fd4a1cc4f338f6fc0290b25b809b18099c817804870fe1170d624d9796"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4118743, "relation_name": "bdh_lt.siebel.v_accounts_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_accounts_x').database,\r\n      schema=source('bdh_lt_siebel', 'v_accounts_x').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_accounts_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\n    ROW_ID,\r\n    CREATED,\r\n    CREATED_BY,\r\n    LAST_UPD,\r\n    LAST_UPD_BY,\r\n    ATTRIB_35,\r\n    X_AUTO_CRD_LM_INC_FLG,\r\n    ATTRIB_55,\r\n    ATTRIB_07,\r\n    X_BRAND_CD,\r\n    ATTRIB_65,\r\n    X_CREDIT_CLASS_CD,\r\n    X_CREDIT_LIMIT_CD,\r\n    ATTRIB_51,\r\n    ATTRIB_49,\r\n    ATTRIB_09,\r\n    X_VIP_STATUS_FLG,\r\n    PAR_ROW_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_accounts_s_org_ext_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_35,\r\nX_AUTO_CRD_LM_INC_FLG,\r\nATTRIB_55,\r\nATTRIB_07,\r\nX_BRAND_CD,\r\nATTRIB_65,\r\nX_CREDIT_CLASS_CD,\r\nX_CREDIT_LIMIT_CD,\r\nATTRIB_51,\r\nATTRIB_49,\r\nATTRIB_09,\r\nX_VIP_STATUS_FLG,\r\nPAR_ROW_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_accounts_x_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_accounts_x"], ["bdh_lt_siebel", "v_accounts_x"], ["bdh_lt_siebel", "v_accounts_x"], ["bdh_lt_siebel", "v_accounts_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x", "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_address": {"database": "bdh_lt", "schema": "siebel", "name": "v_address", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_address_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_address_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_address", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_address_snapshot", "v_address"], "alias": "v_address", "checksum": {"name": "sha256", "checksum": "7c260c8ed16e2724e1e5884c941e41983263d2e274340df7a4a307fc780c4bf4"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4188738, "relation_name": "bdh_lt.siebel.v_address", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_address').database,\r\n      schema=source('bdh_lt_siebel', 'v_address').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_address').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nADDR_LINE_4,\r\nPREMISE_FLG,\r\nSTART_DT,\r\nX_INT_SOURCE,\r\nX_COORD_QLTY,\r\nADDR_NUM,\r\nX_MUNICIPALITY,\r\nX_CONG_CODE,\r\nADDR,\r\nX_SYSTEM_SOURCE,\r\nX_CONGREGATION,\r\nX_ADDR_QLTY,\r\nINTEGRATION_ID,\r\nX_APART_NUM,\r\nADDR_LINE_5,\r\nLONGITUDE,\r\nX_REAL_ESTATE,\r\nX_COUNTY_CODE,\r\nCITY,\r\nZIPCODE,\r\nINTEGRATION2_ID,\r\nX_STREET_LETTER,\r\nLATITUDE,\r\nCOUNTRY,\r\nCOUNTY,\r\nPAR_ADDR_ID,\r\nX_MUN_CODE,\r\nEND_DT,\r\nADDR_TYPE_CD,\r\nADDR_NAME,\r\nBDH_FILE_PATH_AND_NAME as FILE_NAME,\r\nTO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\nBDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_addresses_s_addr_per') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nADDR_LINE_4,\r\nPREMISE_FLG,\r\nSTART_DT,\r\nX_INT_SOURCE,\r\nX_COORD_QLTY,\r\nADDR_NUM,\r\nX_MUNICIPALITY,\r\nX_CONG_CODE,\r\nADDR,\r\nX_SYSTEM_SOURCE,\r\nX_CONGREGATION,\r\nX_ADDR_QLTY,\r\nINTEGRATION_ID,\r\nX_APART_NUM,\r\nADDR_LINE_5,\r\nLONGITUDE,\r\nX_REAL_ESTATE,\r\nX_COUNTY_CODE,\r\nCITY,\r\nZIPCODE,\r\nINTEGRATION2_ID,\r\nX_STREET_LETTER,\r\nLATITUDE,\r\nCOUNTRY,\r\nCOUNTY,\r\nPAR_ADDR_ID,\r\nX_MUN_CODE,\r\nEND_DT,\r\nADDR_TYPE_CD,\r\nADDR_NAME,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_address_cdl') }} )\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_address"], ["bdh_lt_siebel", "v_address"], ["bdh_lt_siebel", "v_address"], ["bdh_lt_siebel", "v_address_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_address", "source.bdh_dbt_models.bdh_lt_siebel.v_address_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_address_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_address_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_address_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_address_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_address_x", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_address_x_snapshot", "v_address_x"], "alias": "v_address_x", "checksum": {"name": "sha256", "checksum": "5512b3a25288b523306cc2e2910e07b68d41038fb9f707f4b282c2913628bd7a"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4263957, "relation_name": "bdh_lt.siebel.v_address_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_address_x').database,\r\n      schema=source('bdh_lt_siebel', 'v_address_x').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_address_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nADDR_PER_ID,\r\nACCNT_ID,\r\nCONTACT_ID,\r\nADDR_TYPE_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_addresses_intersection_s_con_addr') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nADDR_PER_ID,\r\nACCNT_ID,\r\nCONTACT_ID,\r\nADDR_TYPE_CD,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_address_x_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_address_x"], ["bdh_lt_siebel", "v_address_x"], ["bdh_lt_siebel", "v_address_x"], ["bdh_lt_siebel", "v_address_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_address_x", "source.bdh_dbt_models.bdh_lt_siebel.v_address_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_assets": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_assets_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_assets_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_assets", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_assets_snapshot", "v_assets"], "alias": "v_assets", "checksum": {"name": "sha256", "checksum": "64a3e118c451e1f4d5cdac72b001d2e68055a68fedd6f5c6fc0d0d1d8739f66d"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4353988, "relation_name": "bdh_lt.siebel.v_assets", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_assets').database,\r\n      schema=source('bdh_lt_siebel', 'v_assets').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_assets').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nASSET_NUM,\r\nEND_DT,\r\nSTATUS_CD,\r\nX_ACTIVATION_DT,\r\nX_APP_COUNTRY,\r\nX_ASSET_DETAILS,\r\nX_BRAND_CD,\r\nX_COMPANY_CARD,\r\nX_DUAL_CARD,\r\nX_PENDING_ORDER,\r\nX_PLANNED_DISC_DATE,\r\nX_PRICE_PLAN_CODE,\r\nX_PRIMARY_ATTR_NAME,\r\nX_PRIMARY_ATTR_VALUE,\r\nX_T2_PRODUCT_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_VERSION_DT,\r\nUOM_CD,\r\nX_ALLOW_PORT_OUT,\r\nX_CALL_SPECIFICATION,\r\nX_NOTICE_PERIOD,\r\nX_NOTICE_PERIOD_END_DATE,\r\nX_PACKAGE_CODE,\r\nX_PIN,\r\nX_PLANNED_DISC_REASON,\r\nX_PRICE_PLAN_DATE,\r\nX_PUK1,\r\nX_REGRET_END_DT,\r\nX_SERVICE_SUB_TYPE,\r\nX_WSC_ADMIN_FLG,\r\nINSTALL_DT,\r\nPURCH_DT,\r\nREGISTERED_DT,\r\nSTART_DT,\r\nINTEGRATION_ID,\r\nX_ENTITLEMENT_ID,\r\nCUR_AGREE_ID,\r\nPROD_ID,\r\nOWNER_ACCNT_ID,\r\nBILL_ACCNT_ID,\r\nSERV_ACCT_ID,\r\nBILL_PROFILE_ID,\r\nPAR_ASSET_ID,\r\nROOT_ASSET_ID,\r\nPR_CON_ID,\r\nOU_ADDR_ID,\r\nOWNER_CON_ID,\r\nPROMOTION_ID,\r\nPROMOTION,\r\nRELATED_PRODUCT_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_assets_s_asset') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nASSET_NUM,\r\nEND_DT,\r\nSTATUS_CD,\r\nX_ACTIVATION_DT,\r\nX_APP_COUNTRY,\r\nX_ASSET_DETAILS,\r\nX_BRAND_CD,\r\nX_COMPANY_CARD,\r\nX_DUAL_CARD,\r\nX_PENDING_ORDER,\r\nX_PLANNED_DISC_DATE,\r\nX_PRICE_PLAN_CODE,\r\nX_PRIMARY_ATTR_NAME,\r\nX_PRIMARY_ATTR_VALUE,\r\nX_T2_PRODUCT_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_VERSION_DT,\r\nUOM_CD,\r\nX_ALLOW_PORT_OUT,\r\nX_CALL_SPECIFICATION,\r\nX_NOTICE_PERIOD,\r\nX_NOTICE_PERIOD_END_DATE,\r\nX_PACKAGE_CODE,\r\nX_PIN,\r\nX_PLANNED_DISC_REASON,\r\nX_PRICE_PLAN_DATE,\r\nX_PUK1,\r\nX_REGRET_END_DT,\r\nX_SERVICE_SUB_TYPE,\r\nX_WSC_ADMIN_FLG,\r\nINSTALL_DT,\r\nPURCH_DT,\r\nREGISTERED_DT,\r\nSTART_DT,\r\nINTEGRATION_ID,\r\nX_ENTITLEMENT_ID,\r\nCUR_AGREE_ID,\r\nPROD_ID,\r\nOWNER_ACCNT_ID,\r\nBILL_ACCNT_ID,\r\nSERV_ACCT_ID,\r\nBILL_PROFILE_ID,\r\nPAR_ASSET_ID,\r\nROOT_ASSET_ID,\r\nPR_CON_ID,\r\nOU_ADDR_ID,\r\nOWNER_CON_ID,\r\nPROMOTION_ID,\r\nPROMOTION,\r\nRELATED_PRODUCT_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_assets_cdl') }} )\r\n\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets"], ["bdh_lt_siebel", "v_assets"], ["bdh_lt_siebel", "v_assets"], ["bdh_lt_siebel", "v_assets_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets", "source.bdh_dbt_models.bdh_lt_siebel.v_assets_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_assets_xa": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_xa", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_assets_xa_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_assets_xa_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_assets_xa", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_assets_xa_snapshot", "v_assets_xa"], "alias": "v_assets_xa", "checksum": {"name": "sha256", "checksum": "0fc8534aff69c9ee82edc5511fd44e0675f09d951e8d017c4f2a71b4f2fbf92e"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.443399, "relation_name": "bdh_lt.siebel.v_assets_xa", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_assets_xa').database,\r\n      schema=source('bdh_lt_siebel', 'v_assets_xa').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_assets_xa').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTR_NAME,\r\nDISPLAY_NAME,\r\nHIDDEN_FLG,\r\nDATA_TYPE_CD,\r\nCHAR_VAL,\r\nNUM_VAL,\r\nDATE_VAL,\r\nATTR_ID,\r\nASSET_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_asset_attributes_s_asset_xa') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTR_NAME,\r\nDISPLAY_NAME,\r\nHIDDEN_FLG,\r\nDATA_TYPE_CD,\r\nCHAR_VAL,\r\nNUM_VAL,\r\nDATE_VAL,\r\nATTR_ID,\r\nASSET_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_assets_xa_cdl') }} )\r\n\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets_xa"], ["bdh_lt_siebel", "v_assets_xa"], ["bdh_lt_siebel", "v_assets_xa"], ["bdh_lt_siebel", "v_assets_xa_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa", "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_assets_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_assets_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_assets_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_assets_x", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_assets_x_snapshot", "v_assets_x"], "alias": "v_assets_x", "checksum": {"name": "sha256", "checksum": "74a7b1842e7711bab988b1b80ddf49fbc88badbb59c739ef1760d04c74779342"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4513993, "relation_name": "bdh_lt.siebel.v_assets_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_assets_x').database,\r\n      schema=source('bdh_lt_siebel', 'v_assets_x').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_assets_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_32,\r\nX_BIND_PERIOD,\r\nATTRIB_31,\r\nX_INVOICE_FLG,\r\nATTRIB_01,\r\nATTRIB_09,\r\nX_REF,\r\nATTRIB_07,\r\nATTRIB_34,\r\nATTRIB_03,\r\nATTRIB_27,\r\nATTRIB_26,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_assets_s_asset_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_32,\r\nX_BIND_PERIOD,\r\nATTRIB_31,\r\nX_INVOICE_FLG,\r\nATTRIB_01,\r\nATTRIB_09,\r\nX_REF,\r\nATTRIB_07,\r\nATTRIB_34,\r\nATTRIB_03,\r\nATTRIB_27,\r\nATTRIB_26,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_assets_x_cdl') }} )\r\n\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_assets_x"], ["bdh_lt_siebel", "v_assets_x"], ["bdh_lt_siebel", "v_assets_x"], ["bdh_lt_siebel", "v_assets_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_x", "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_billing_profile": {"database": "bdh_lt", "schema": "siebel", "name": "v_billing_profile", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_billing_profile_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_billing_profile_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_billing_profile", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_billing_profile_snapshot", "v_billing_profile"], "alias": "v_billing_profile", "checksum": {"name": "sha256", "checksum": "fcafd5dacf4811bb075b1a9efa78c72e79a8af9351f778257a49d9bc6768f913"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4599218, "relation_name": "bdh_lt.siebel.v_billing_profile", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_billing_profile').database,\r\n      schema=source('bdh_lt_siebel', 'v_billing_profile').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_billing_profile').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nBILL_CYCLE_DAY,\r\nBILL_FREQ_CD,\r\nBILL_PREF_CD,\r\nEMAIL_ADDR,\r\nMEDIA_TYPE_CD,\r\nPAYMT_METH_CD,\r\nX_BILL_CYCLE,\r\nX_BILLING_REPORT_LEVEL,\r\nX_CUSTOMER_INVOICE_REFERNECE,\r\nX_DD_EXP_DATE,\r\nX_INVOICE_FEE,\r\nX_INVOICE_INFORMATION,\r\nX_MAX_DD_TRANS_AMOUNT,\r\nX_NO_POST_FLG,\r\nX_NOTIF_LANG_CD,\r\nX_OVERDUE_INTEREST_WAIVED,\r\nX_PAY_METHOD_PROVIDER,\r\nX_PAYMENT_TERM,\r\nX_SPECIFICATION_FEE,\r\nX_TREATMENT_CATEGORY,\r\nACCNT_ID,\r\nADDR_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_billing_profile_s_inv_prof') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nBILL_CYCLE_DAY,\r\nBILL_FREQ_CD,\r\nBILL_PREF_CD,\r\nEMAIL_ADDR,\r\nMEDIA_TYPE_CD,\r\nPAYMT_METH_CD,\r\nX_BILL_CYCLE,\r\nX_BILLING_REPORT_LEVEL,\r\nX_CUSTOMER_INVOICE_REFERNECE,\r\nX_DD_EXP_DATE,\r\nX_INVOICE_FEE,\r\nX_INVOICE_INFORMATION,\r\nX_MAX_DD_TRANS_AMOUNT,\r\nX_NO_POST_FLG,\r\nX_NOTIF_LANG_CD,\r\nX_OVERDUE_INTEREST_WAIVED,\r\nX_PAY_METHOD_PROVIDER,\r\nX_PAYMENT_TERM,\r\nX_SPECIFICATION_FEE,\r\nX_TREATMENT_CATEGORY,\r\nACCNT_ID,\r\nADDR_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_billing_profile_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_billing_profile"], ["bdh_lt_siebel", "v_billing_profile"], ["bdh_lt_siebel", "v_billing_profile"], ["bdh_lt_siebel", "v_billing_profile_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile", "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_contact": {"database": "bdh_lt", "schema": "siebel", "name": "v_contact", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_contact_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_contact_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_contact", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_contact_snapshot", "v_contact"], "alias": "v_contact", "checksum": {"name": "sha256", "checksum": "574664a4dd344c6d8da708b61669c9307523e7a6a308ebe7f0fdaebe0f7e983f"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4679246, "relation_name": "bdh_lt.siebel.v_contact", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_contact').database,\r\n      schema=source('bdh_lt_siebel', 'v_contact').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_contact').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nINTEGRATION_ID,\r\nPR_PER_ADDR_ID,\r\nX_LEGAL_ADDR_ID,\r\nX_LEGAL_CHECK,\r\nCELL_PH_NUM,\r\nCUST_END_DT,\r\nEMAIL_ADDR,\r\nALT_EMAIL_ADDR,\r\nEMAIL_SR_UPD_FLG,\r\nFST_NAME,\r\nLAST_NAME,\r\nPREF_COMM_METH_CD,\r\nPREF_COMM_MEDIA_CD,\r\nSOC_SECURITY_NUM,\r\nCUST_STAT_CD,\r\nSUPPRESS_CALL_FLG,\r\nSUPPRESS_MAIL_FLG,\r\nX_ADDNL_PHONE_1,\r\nX_ADDNL_PHONE_2,\r\nX_CON_SRC,\r\nX_DISABLE_SSN_FLG,\r\nX_INS_ALT_EMAIL,\r\nX_INSPECT_EMAIL,\r\nX_EMAIL_OFFERS_FLG,\r\nX_PRIMARY_PHONE_NUM,\r\nX_SEC_CUST,\r\nX_SELF_SERVICE_PORTAL,\r\nCON_CD,\r\nWORK_PH_NUM,\r\nPR_DEPT_OU_ID,\r\nX_PRIM_EMAIL_VALID,\r\nX_SEC_EMAIL_VALID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_contacts_s_contact') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nINTEGRATION_ID,\r\nPR_PER_ADDR_ID,\r\nX_LEGAL_ADDR_ID,\r\nX_LEGAL_CHECK,\r\nCELL_PH_NUM,\r\nCUST_END_DT,\r\nEMAIL_ADDR,\r\nALT_EMAIL_ADDR,\r\nEMAIL_SR_UPD_FLG,\r\nFST_NAME,\r\nLAST_NAME,\r\nPREF_COMM_METH_CD,\r\nPREF_COMM_MEDIA_CD,\r\nSOC_SECURITY_NUM,\r\nCUST_STAT_CD,\r\nSUPPRESS_CALL_FLG,\r\nSUPPRESS_MAIL_FLG,\r\nX_ADDNL_PHONE_1,\r\nX_ADDNL_PHONE_2,\r\nX_CON_SRC,\r\nX_DISABLE_SSN_FLG,\r\nX_INS_ALT_EMAIL,\r\nX_INSPECT_EMAIL,\r\nX_EMAIL_OFFERS_FLG,\r\nX_PRIMARY_PHONE_NUM,\r\nX_SEC_CUST,\r\nX_SELF_SERVICE_PORTAL,\r\nCON_CD,\r\nWORK_PH_NUM,\r\nPR_DEPT_OU_ID,\r\nX_PRIM_EMAIL_VALID,\r\nX_SEC_EMAIL_VALID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_contact_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_contact"], ["bdh_lt_siebel", "v_contact"], ["bdh_lt_siebel", "v_contact"], ["bdh_lt_siebel", "v_contact_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_contact", "source.bdh_dbt_models.bdh_lt_siebel.v_contact_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_contact_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_contact_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_contact_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_contact_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_contact_x", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_contact_x_snapshot", "v_contact_x"], "alias": "v_contact_x", "checksum": {"name": "sha256", "checksum": "22e4565eb2032e267c539f0994a808d4c8ac27a1ebc82df3bf19005ae9889532"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4759226, "relation_name": "bdh_lt.siebel.v_contact_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_contact_x').database,\r\n      schema=source('bdh_lt_siebel', 'v_contact_x').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_contact_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_11,\r\nATTRIB_10,\r\nATTRIB_44,\r\nATTRIB_43,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_contacts_s_contact_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nATTRIB_11,\r\nATTRIB_10,\r\nATTRIB_44,\r\nATTRIB_43,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_contact_x_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_contact_x"], ["bdh_lt_siebel", "v_contact_x"], ["bdh_lt_siebel", "v_contact_x"], ["bdh_lt_siebel", "v_contact_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_contact_x", "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_list_of_values": {"database": "bdh_lt", "schema": "siebel", "name": "v_list_of_values", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_list_of_values_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_list_of_values_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_list_of_values", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_list_of_values_snapshot", "v_list_of_values"], "alias": "v_list_of_values", "checksum": {"name": "sha256", "checksum": "721bf5617a704e1c3538dca9882f299c8fcc5dcdc5b019903b36fd2812e0f8f2"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4839272, "relation_name": "bdh_lt.siebel.v_list_of_values", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_list_of_values').database,\r\n      schema=source('bdh_lt_siebel', 'v_list_of_values').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_list_of_values').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nDFLT_LIC_FLG,\r\nDESC_TEXT,\r\nHIGH,\r\nLOW,\r\nSUB_TYPE,\r\nMULTI_LINGUAL_FLG,\r\nNAME,\r\nORDER_BY,\r\nRPLCTN_LVL_CD,\r\nTRANSLATE_FLG,\r\nVAL,\r\nLANG_ID,\r\nTYPE,\r\nPAR_ROW_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_list_of_values_s_lst_of_val') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nDFLT_LIC_FLG,\r\nDESC_TEXT,\r\nHIGH,\r\nLOW,\r\nSUB_TYPE,\r\nMULTI_LINGUAL_FLG,\r\nNAME,\r\nORDER_BY,\r\nRPLCTN_LVL_CD,\r\nTRANSLATE_FLG,\r\nVAL,\r\nLANG_ID,\r\nTYPE,\r\nPAR_ROW_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_list_of_values_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_list_of_values"], ["bdh_lt_siebel", "v_list_of_values"], ["bdh_lt_siebel", "v_list_of_values"], ["bdh_lt_siebel", "v_list_of_values_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values", "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_logs": {"database": "bdh_lt", "schema": "siebel", "name": "v_logs", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_logs_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_logs_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_logs", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_logs_snapshot", "v_logs"], "alias": "v_logs", "checksum": {"name": "sha256", "checksum": "4bd4972c499d03f12ccdeb433a04def2a21a41fded5114acee38766700d72d06"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4899244, "relation_name": "bdh_lt.siebel.v_logs", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_logs').database,\r\n      schema=source('bdh_lt_siebel', 'v_logs').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_logs').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCHANNEL,\r\nDESC_TEXT,\r\nDETAILS,\r\nDIVISION,\r\nFUNC_PROC,\r\nOPERATION_DATE,\r\nOUTCOME,\r\nPRIMARY_ATTR_VALUE,\r\nPRIMARY_ATTR_NAME,\r\nSOURCE,\r\nUSR,\r\nSTATUS,\r\nENTITY,\r\nFUNC_AREA,\r\nPUBLIC_FLG,\r\nCODE,\r\nACCOUNT_ID,\r\nASSET_ID,\r\nCONTACT_ID,\r\nINVOICE_ID,\r\nMASTER_ACCOUNT_ID,\r\nORDER_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_logs_cx_bus_log') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCHANNEL,\r\nDESC_TEXT,\r\nDETAILS,\r\nDIVISION,\r\nFUNC_PROC,\r\nOPERATION_DATE,\r\nOUTCOME,\r\nPRIMARY_ATTR_VALUE,\r\nPRIMARY_ATTR_NAME,\r\nSOURCE,\r\nUSR,\r\nSTATUS,\r\nENTITY,\r\nFUNC_AREA,\r\nPUBLIC_FLG,\r\nCODE,\r\nACCOUNT_ID,\r\nASSET_ID,\r\nCONTACT_ID,\r\nINVOICE_ID,\r\nMASTER_ACCOUNT_ID,\r\nORDER_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_logs_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_logs"], ["bdh_lt_siebel", "v_logs"], ["bdh_lt_siebel", "v_logs"], ["bdh_lt_siebel", "v_logs_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_logs", "source.bdh_dbt_models.bdh_lt_siebel.v_logs_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_notification_settings": {"database": "bdh_lt", "schema": "siebel", "name": "v_notification_settings", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_notification_settings_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_notification_settings_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_notification_settings", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_notification_settings_snapshot", "v_notification_settings"], "alias": "v_notification_settings", "checksum": {"name": "sha256", "checksum": "dc220daa893a54a859d62fff25f855f0366385b2dacdfa5f09a0ea3521fdc8cb"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.4969242, "relation_name": "bdh_lt.siebel.v_notification_settings", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_notification_settings').database,\r\n      schema=source('bdh_lt_siebel', 'v_notification_settings').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_notification_settings').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nNAME,\r\nX_OVERRIDE_DEST,\r\nACTIVE,\r\nCONTACT_METH_CD,\r\nTYPE,\r\nCONTACT_ID,\r\nACCNT_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_notification_settings_cx_add_info_xm') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nNAME,\r\nX_OVERRIDE_DEST,\r\nACTIVE,\r\nCONTACT_METH_CD,\r\nTYPE,\r\nCONTACT_ID,\r\nACCNT_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_notification_settings_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_notification_settings"], ["bdh_lt_siebel", "v_notification_settings"], ["bdh_lt_siebel", "v_notification_settings"], ["bdh_lt_siebel", "v_notification_settings_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings", "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_orders": {"database": "bdh_lt", "schema": "siebel", "name": "v_orders", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_orders_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_orders_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_orders", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_orders_snapshot", "v_orders"], "alias": "v_orders", "checksum": {"name": "sha256", "checksum": "a4dabf45fc0f6a3a9315464a919a330e51ed45dc89ef83c80c832453071179aa"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5049226, "relation_name": "bdh_lt.siebel.v_orders", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_orders').database,\r\n      schema=source('bdh_lt_siebel', 'v_orders').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_orders').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nSTATUS_DT,\r\nEAI_ORDER_NUM,\r\nORDER_DT,\r\nORDER_NUM,\r\nREQ_SHIP_DT,\r\nREV_NUM,\r\nSTATUS_CD,\r\nX_AGENT_CODE,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXTERNAL_INV_CODE,\r\nX_HANDLING_MTHD_CD,\r\nX_ORDER_TYPE,\r\nX_PARENT_ORDER_NUM,\r\nX_PARTNER_CODE,\r\nX_ORDER_SOURCE,\r\nACCNT_ID,\r\nBILL_ACCNT_ID,\r\nCONTACT_ID,\r\nCUSTOMER_ID,\r\nX_BILLING_ADDR_ID,\r\nX_CA_ADDR_ID,\r\nX_ORDER_CHANNEL,\r\nX_SHIP_ADDR_ID,\r\nROOT_ORDER_ID,\r\nX_ST_EXTERNAL_REF,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_orders_s_order') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTIVE_FLG,\r\nSTATUS_DT,\r\nEAI_ORDER_NUM,\r\nORDER_DT,\r\nORDER_NUM,\r\nREQ_SHIP_DT,\r\nREV_NUM,\r\nSTATUS_CD,\r\nX_AGENT_CODE,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXTERNAL_INV_CODE,\r\nX_HANDLING_MTHD_CD,\r\nX_ORDER_TYPE,\r\nX_PARENT_ORDER_NUM,\r\nX_PARTNER_CODE,\r\nX_ORDER_SOURCE,\r\nACCNT_ID,\r\nBILL_ACCNT_ID,\r\nCONTACT_ID,\r\nCUSTOMER_ID,\r\nX_BILLING_ADDR_ID,\r\nX_CA_ADDR_ID,\r\nX_ORDER_CHANNEL,\r\nX_SHIP_ADDR_ID,\r\nROOT_ORDER_ID,\r\nX_ST_EXTERNAL_REF,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_orders_cdl') }} )\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_orders"], ["bdh_lt_siebel", "v_orders"], ["bdh_lt_siebel", "v_orders"], ["bdh_lt_siebel", "v_orders_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_orders", "source.bdh_dbt_models.bdh_lt_siebel.v_orders_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_order_line_items": {"database": "bdh_lt", "schema": "siebel", "name": "v_order_line_items", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_order_line_items_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_order_line_items_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_order_line_items", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_order_line_items_snapshot", "v_order_line_items"], "alias": "v_order_line_items", "checksum": {"name": "sha256", "checksum": "23de01706d95c67045dbbcd6f0fde57116e2928f826676c40d37b74b51b3bcbe"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5140781, "relation_name": "bdh_lt.siebel.v_order_line_items", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_order_line_items').database,\r\n      schema=source('bdh_lt_siebel', 'v_order_line_items').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_order_line_items').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTION_CD,\r\nSTATUS_DT,\r\nBASE_UNIT_PRI,\r\nBILLABLE_FLG,\r\nCARRIER_CD,\r\nORDER_ITM_CURCY_CD,\r\nDESC_TEXT,\r\nREQ_SHIP_DT,\r\nEXCL_PRICING_FLG,\r\nLN_NUM,\r\nLOANER_FLG,\r\nPER_MTH_CHG_SUBTOT,\r\nLINE_NOTE,\r\nONETIME_CHG_SUBTOT,\r\nALW_PART_SHIP_FLG,\r\nPRICING_COMMENT,\r\nPROD_STATUS_CD,\r\nQTY_REQ,\r\nQTY_SHIPPED,\r\nRQST_PORT_DATE,\r\nREVENUE_TYPE_CD,\r\nMUST_DLVR_BY_DT,\r\nSHIP_COMPLETE_FLG,\r\nSHIP_METH_CD,\r\nSHIP_TOGETHER_FLG,\r\nSTATUS_CD,\r\nX_ACTION_TYPE,\r\nX_BINDING_END,\r\nX_BINDING_START,\r\nX_CRED_CHK,\r\nX_CREDIT_CONTROL_NUMBER,\r\nX_DISCNT_REASON,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXPECTED_DELIVERY_DATE,\r\nX_LOC_NAME,\r\nX_LOC_SSN,\r\nX_NOTICE_PERIOD_PROD,\r\nX_PASSWORD,\r\nX_PENALTY_OVER_AMT,\r\nX_PLANNED_DISCONNECT_DATE,\r\nX_PORTIN_DEADLN_DT,\r\nX_POSTAL_TRACKING_ID,\r\nX_PRIMARY_ATTRIB_NAME,\r\nX_PRIMARY_ATTRIB_VAL,\r\nX_PROMOTION_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_STATUS_CODE,\r\nX_SUBSTATUS,\r\nX_WSC_ADMIN_FLG,\r\nWRNTY_RCVR_FLG,\r\nPROD_NAME,\r\nORDER_ID,\r\nADJ_UNIT_PRI,\r\nNET_PRI,\r\nPRI_ADJ_AMT,\r\nASSET_ID,\r\nASSET_INTEG_ID,\r\nBILL_ACCNT_ID,\r\nBO_ORDER_NUM,\r\nCONTACT_ID,\r\nINTEGRATION_ID,\r\nPAR_ORDER_ITEM_ID,\r\nPROD_ID,\r\nROOT_ORDER_ITEM_ID,\r\nSERVICE_NUM,\r\nSERV_ACCNT_ID,\r\nX_PLANNED_DISC_REASON,\r\nX_PRODUCT_DESCRIPTION,\r\nX_ROOT_BIND_PERIOD,\r\nX_VERSION_DATE,\r\nBASE_ITEM_ID,\r\nOWNER_ACCOUNT_ID,\r\nX_EXPECTED_PRED_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_order_line_items_s_order_item') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nACTION_CD,\r\nSTATUS_DT,\r\nBASE_UNIT_PRI,\r\nBILLABLE_FLG,\r\nCARRIER_CD,\r\nORDER_ITM_CURCY_CD,\r\nDESC_TEXT,\r\nREQ_SHIP_DT,\r\nEXCL_PRICING_FLG,\r\nLN_NUM,\r\nLOANER_FLG,\r\nPER_MTH_CHG_SUBTOT,\r\nLINE_NOTE,\r\nONETIME_CHG_SUBTOT,\r\nALW_PART_SHIP_FLG,\r\nPRICING_COMMENT,\r\nPROD_STATUS_CD,\r\nQTY_REQ,\r\nQTY_SHIPPED,\r\nRQST_PORT_DATE,\r\nREVENUE_TYPE_CD,\r\nMUST_DLVR_BY_DT,\r\nSHIP_COMPLETE_FLG,\r\nSHIP_METH_CD,\r\nSHIP_TOGETHER_FLG,\r\nSTATUS_CD,\r\nX_ACTION_TYPE,\r\nX_BINDING_END,\r\nX_BINDING_START,\r\nX_CRED_CHK,\r\nX_CREDIT_CONTROL_NUMBER,\r\nX_DISCNT_REASON,\r\nX_ERROR_CODE,\r\nX_ERROR_MESSAGE,\r\nX_EXPECTED_DELIVERY_DATE,\r\nX_LOC_NAME,\r\nX_LOC_SSN,\r\nX_NOTICE_PERIOD_PROD,\r\nX_PASSWORD,\r\nX_PENALTY_OVER_AMT,\r\nX_PLANNED_DISCONNECT_DATE,\r\nX_PORTIN_DEADLN_DT,\r\nX_POSTAL_TRACKING_ID,\r\nX_PRIMARY_ATTRIB_NAME,\r\nX_PRIMARY_ATTRIB_VAL,\r\nX_PROMOTION_END_DATE,\r\nX_REACTIVATION_DATE,\r\nX_STATUS_CODE,\r\nX_SUBSTATUS,\r\nX_WSC_ADMIN_FLG,\r\nWRNTY_RCVR_FLG,\r\nPROD_NAME,\r\nORDER_ID,\r\nADJ_UNIT_PRI,\r\nNET_PRI,\r\nPRI_ADJ_AMT,\r\nASSET_ID,\r\nASSET_INTEG_ID,\r\nBILL_ACCNT_ID,\r\nBO_ORDER_NUM,\r\nCONTACT_ID,\r\nINTEGRATION_ID,\r\nPAR_ORDER_ITEM_ID,\r\nPROD_ID,\r\nROOT_ORDER_ITEM_ID,\r\nSERVICE_NUM,\r\nSERV_ACCNT_ID,\r\nX_PLANNED_DISC_REASON,\r\nX_PRODUCT_DESCRIPTION,\r\nX_ROOT_BIND_PERIOD,\r\nX_VERSION_DATE,\r\nBASE_ITEM_ID,\r\nOWNER_ACCOUNT_ID,\r\nX_EXPECTED_PRED_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_order_line_items_cdl') }} )\r\n\r\n\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_order_line_items"], ["bdh_lt_siebel", "v_order_line_items"], ["bdh_lt_siebel", "v_order_line_items"], ["bdh_lt_siebel", "v_order_line_items_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items", "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_product": {"database": "bdh_lt", "schema": "siebel", "name": "v_product", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_product_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_product_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_product", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_product_snapshot", "v_product"], "alias": "v_product", "checksum": {"name": "sha256", "checksum": "bfab8c7edb26d7fcb099e41282e13a6449e7b58d3a262df2591fe0108191adf1"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5246058, "relation_name": "bdh_lt.siebel.v_product", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_product').database,\r\n      schema=source('bdh_lt_siebel', 'v_product').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_product').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nNAME,\r\nORDERABLE_FLG,\r\nPART_NUM,\r\nTYPE,\r\nCRT_AST_REC_FLG,\r\nUOM_CD,\r\nSTATUS_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_products_s_prod_int') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nDESC_TEXT,\r\nNAME,\r\nORDERABLE_FLG,\r\nPART_NUM,\r\nTYPE,\r\nCRT_AST_REC_FLG,\r\nUOM_CD,\r\nSTATUS_CD,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_product_cdl') }} )\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_product"], ["bdh_lt_siebel", "v_product"], ["bdh_lt_siebel", "v_product"], ["bdh_lt_siebel", "v_product_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_product", "source.bdh_dbt_models.bdh_lt_siebel.v_product_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.v_user": {"database": "bdh_lt", "schema": "siebel", "name": "v_user", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lt\\siebel\\siebel_v_user_snapshot.sql", "original_file_path": "snapshots\\bdh_lt\\siebel\\siebel_v_user_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.v_user", "fqn": ["bdh_dbt_models", "bdh_lt", "siebel", "siebel_v_user_snapshot", "v_user"], "alias": "v_user", "checksum": {"name": "sha256", "checksum": "db953c05ef066d683dbc589db1a73d1bb8d6cf69169e1482d499deda26f9d4d3"}, "config": {"enabled": true, "alias": null, "schema": "siebel", "database": "bdh_lt", "tags": ["snapshot"], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": null, "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": ["snapshot"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "materialized": "snapshot", "database": "bdh_lt", "schema": "siebel", "tags": ["snapshot"], "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5316043, "relation_name": "bdh_lt.siebel.v_user", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_user').database,\r\n      schema=source('bdh_lt_siebel', 'v_user').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_user').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nPAR_ROW_ID,\r\nLOGIN,\r\nX_ROLE,\r\nSTATUS_CD,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD') || '-00'  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc) AS rn  FROM {{ source('bdh_raw_lt_siebel', 'raw_sbl_users_s_user') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lt_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lt_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nPAR_ROW_ID,\r\nLOGIN,\r\nX_ROLE,\r\nSTATUS_CD,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc) AS rn  FROM {{ source('bdh_lt_siebel', 'v_user_cdl') }} )\r\nWHERE rn = 1\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_user"], ["bdh_lt_siebel", "v_user"], ["bdh_lt_siebel", "v_user"], ["bdh_lt_siebel", "v_user_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_user", "source.bdh_dbt_models.bdh_lt_siebel.v_user_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_accounts": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_accounts", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_accounts_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_accounts_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_accounts", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_accounts_snapshot", "lv_v_accounts"], "alias": "v_accounts", "checksum": {"name": "sha256", "checksum": "19f0c978cb839551aa575120be552ac46a5d7e38e77aec62ca058c769ba3ed06"}, "config": {"enabled": true, "alias": "v_accounts", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_accounts", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5486033, "relation_name": "bdh_lv.siebel.v_accounts", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_accounts\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_accounts').database,\r\n      schema=source('bdh_lv_siebel', 'v_accounts').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_accounts').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSTATUS,\r\nACCOUNT_CLASS,\r\nMARKETING_E_MAIL,\r\nSV_SYNCH,\r\nGOOD_STANDING,\r\nSIZE,\r\nLAST_UPDATED_DATE,\r\nMAIN_PHONE__,\r\nNAME,\r\nBAD_DEBT,\r\nDEACTIVATION_DATE,\r\nCSR_EDITABLE,\r\nSOURCE,\r\nDISABLE_AUTOMATIC_UPDATE,\r\nGOOD_STANDING_OVERRIDE,\r\nLEGACY_ACCOUNT__,\r\nLOYALTY,\r\nSSN_ORG__,\r\nREASON_FOR_VAT_EXEMPTION,\r\nSECRET_ANSWER,\r\nSECRET_QUESTION,\r\nVAT_NUMBER,\r\nACCOUNT_TYPE,\r\nCUSTOMER_SINCE,\r\nPRIMARY_ADDRESS_ID,\r\nPRIMARY_BILLING_ADDRESS_ID,\r\nPRIMARY_CONTACT_ID,\r\nPRIMARY_SHIP_ADDRESS_ID,\r\nLEGAL_CHECK,\r\nPRICE_LIST_ID,\r\nINTEGRATION_ID,\r\nCUSTOMER_ACCOUNT_ID,\r\nACCOUNT,\r\nSECRET_CUSTOMER,\r\nPRIMARY_POSITION_ID,\r\nPARENT_ACCOUNT_ID,\r\nPRIMARY_POSTPAID_SEGMENT,\r\nACTIVE_WINBACK_CASE,\r\nCURRENCT_CONDITION,\r\nMANAGER,\r\nACCOUNT_ID,\r\nTAX_CLASS,\r\nIS_MASTER_FLAG,\r\nPARENT_SSN,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_accounts_s_org_ext') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSTATUS,\r\nACCOUNT_CLASS,\r\nMARKETING_E_MAIL,\r\nSV_SYNCH,\r\nGOOD_STANDING,\r\nSIZE,\r\nLAST_UPDATED_DATE,\r\nMAIN_PHONE__,\r\nNAME,\r\nBAD_DEBT,\r\nDEACTIVATION_DATE,\r\nCSR_EDITABLE,\r\nSOURCE,\r\nDISABLE_AUTOMATIC_UPDATE,\r\nGOOD_STANDING_OVERRIDE,\r\nLEGACY_ACCOUNT__,\r\nLOYALTY,\r\nSSN_ORG__,\r\nREASON_FOR_VAT_EXEMPTION,\r\nSECRET_ANSWER,\r\nSECRET_QUESTION,\r\nVAT_NUMBER,\r\nACCOUNT_TYPE,\r\nCUSTOMER_SINCE,\r\nPRIMARY_ADDRESS_ID,\r\nPRIMARY_BILLING_ADDRESS_ID,\r\nPRIMARY_CONTACT_ID,\r\nPRIMARY_SHIP_ADDRESS_ID,\r\nLEGAL_CHECK,\r\nPRICE_LIST_ID,\r\nINTEGRATION_ID,\r\nCUSTOMER_ACCOUNT_ID,\r\nACCOUNT,\r\nSECRET_CUSTOMER,\r\nPRIMARY_POSITION_ID,\r\nPARENT_ACCOUNT_ID,\r\nPRIMARY_POSTPAID_SEGMENT,\r\nACTIVE_WINBACK_CASE,\r\nCURRENCT_CONDITION,\r\nMANAGER,\r\nACCOUNT_ID,\r\nTAX_CLASS,\r\nIS_MASTER_FLAG,\r\nPARENT_SSN,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_accounts_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_accounts"], ["bdh_lv_siebel", "v_accounts"], ["bdh_lv_siebel", "v_accounts"], ["bdh_lv_siebel", "v_accounts_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_accounts", "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_accounts_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_accounts_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_accounts_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_accounts_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_accounts_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_accounts_x_snapshot", "lv_v_accounts_x"], "alias": "v_accounts_x", "checksum": {"name": "sha256", "checksum": "e5292d578e5ebb6c561a629c46529e58764c164e485f046b2fab92a0f82a787f"}, "config": {"enabled": true, "alias": "v_accounts_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_accounts_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5566053, "relation_name": "bdh_lv.siebel.v_accounts_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_accounts_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_accounts_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_accounts_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_accounts_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACCOUNT_SUB_TYPE,\r\nAUTOMATIC_CREDIT_LIMIT_INCREASE,\r\nBANKRUPTCY_DATE,\r\nBANKRUPTCY_TYPE,\r\nBRAND,\r\nCOLLECTIONS_AMOUNT,\r\nCREDIT_CLASS,\r\nCREDIT_LIMIT,\r\nORGANIZATION_NAME,\r\nORGANIZATION_TYPE,\r\nTAX_EXEMPT,\r\nVIP_STATUS,\r\nACCOUNT_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_accounts_s_org_ext_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACCOUNT_SUB_TYPE,\r\nAUTOMATIC_CREDIT_LIMIT_INCREASE,\r\nBANKRUPTCY_DATE,\r\nBANKRUPTCY_TYPE,\r\nBRAND,\r\nCOLLECTIONS_AMOUNT,\r\nCREDIT_CLASS,\r\nCREDIT_LIMIT,\r\nORGANIZATION_NAME,\r\nORGANIZATION_TYPE,\r\nTAX_EXEMPT,\r\nVIP_STATUS,\r\nACCOUNT_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_accounts_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_accounts_x"], ["bdh_lv_siebel", "v_accounts_x"], ["bdh_lv_siebel", "v_accounts_x"], ["bdh_lv_siebel", "v_accounts_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x", "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_activities": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_activities", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_activities_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_activities_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_activities", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_activities_snapshot", "lv_v_activities"], "alias": "v_activities", "checksum": {"name": "sha256", "checksum": "8772965aaf520720e0c4142371b1e42db940756775989a0a94f4d7e6dce996cb"}, "config": {"enabled": true, "alias": "v_activities", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_activities", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5646033, "relation_name": "bdh_lv.siebel.v_activities", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_activities\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_activities').database,\r\n      schema=source('bdh_lv_siebel', 'v_activities').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_activities').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nTASKS,\r\nSUB_TYPE,\r\nINVOICE,\r\nSESSION_ID,\r\nSCREEN_POP,\r\nDOCUMENT_PRODUCT_AREA,\r\nIVR_DONE_TIME,\r\nINTENSIONS,\r\nINPUT_PARAMETERS,\r\nERROR_MESSAGE,\r\nERROR_CODE,\r\nDOCUMENT_TYPE,\r\nDOCUMENT_SEGMENT,\r\nCOMPLETED_BY,\r\nAPPLICATION_COUNTRY,\r\nAMOUNT,\r\nPLANNED_START,\r\nDUE_DATE,\r\nTYPE,\r\nACTUAL_START,\r\nACTUAL_END,\r\nCATEGORY,\r\nRESOLUTION,\r\nPRECEDING_ACTIVITY,\r\nPARENT_ACTIVITY,\r\nDESCRIPTION,\r\nSTATUS,\r\nPRIORITY,\r\nTO_,\r\nFROM_,\r\nBILLABLE,\r\nREPEAT,\r\nALARM,\r\nGROUP_ID,\r\nCONTACT_ID,\r\nPOSITION_ID,\r\nTARGET_OU_ADDR_ID,\r\nACCOUNT_ID,\r\nTARGET_PER_ADDR_ID,\r\nTARGET_PER_ID,\r\nCREATED_GROUP_ID,\r\nSERVICE_REQUEST_COMMIT_TIME,\r\nSR_ID,\r\nASSET_ID,\r\nOFFER_RESPONSE,\r\nCAMPAIGNID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_activities_s_evt_act') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nTASKS,\r\nSUB_TYPE,\r\nINVOICE,\r\nSESSION_ID,\r\nSCREEN_POP,\r\nDOCUMENT_PRODUCT_AREA,\r\nIVR_DONE_TIME,\r\nINTENSIONS,\r\nINPUT_PARAMETERS,\r\nERROR_MESSAGE,\r\nERROR_CODE,\r\nDOCUMENT_TYPE,\r\nDOCUMENT_SEGMENT,\r\nCOMPLETED_BY,\r\nAPPLICATION_COUNTRY,\r\nAMOUNT,\r\nPLANNED_START,\r\nDUE_DATE,\r\nTYPE,\r\nACTUAL_START,\r\nACTUAL_END,\r\nCATEGORY,\r\nRESOLUTION,\r\nPRECEDING_ACTIVITY,\r\nPARENT_ACTIVITY,\r\nDESCRIPTION,\r\nSTATUS,\r\nPRIORITY,\r\nTO_,\r\nFROM_,\r\nBILLABLE,\r\nREPEAT,\r\nALARM,\r\nGROUP_ID,\r\nCONTACT_ID,\r\nPOSITION_ID,\r\nTARGET_OU_ADDR_ID,\r\nACCOUNT_ID,\r\nTARGET_PER_ADDR_ID,\r\nTARGET_PER_ID,\r\nCREATED_GROUP_ID,\r\nSERVICE_REQUEST_COMMIT_TIME,\r\nSR_ID,\r\nASSET_ID,\r\nOFFER_RESPONSE,\r\nCAMPAIGNID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_activities_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_activities"], ["bdh_lv_siebel", "v_activities"], ["bdh_lv_siebel", "v_activities"], ["bdh_lv_siebel", "v_activities_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_activities", "source.bdh_dbt_models.bdh_lv_siebel.v_activities_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_activities_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_activities_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_activities_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_activities_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_activities_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_activities_x_snapshot", "lv_v_activities_x"], "alias": "v_activities_x", "checksum": {"name": "sha256", "checksum": "775d87038ae67da90183f668f65db240730c7e79bb968826abfae4ee9abd73ad"}, "config": {"enabled": true, "alias": "v_activities_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_activities_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5722797, "relation_name": "bdh_lv.siebel.v_activities_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_activities_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_activities_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_activities_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_activities_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nCOMMENT,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_activities_s_evt_act_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nCOMMENT,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_activities_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_activities_x"], ["bdh_lv_siebel", "v_activities_x"], ["bdh_lv_siebel", "v_activities_x"], ["bdh_lv_siebel", "v_activities_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_activities_x", "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_address": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_address", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_address_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_address_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_address", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_address_snapshot", "lv_v_address"], "alias": "v_address", "checksum": {"name": "sha256", "checksum": "d60eb72540c7a501be82851e2529bdd20dc04f421d8f184ef2b3d63d36bb9460"}, "config": {"enabled": true, "alias": "v_address", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_address", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.5822804, "relation_name": "bdh_lv.siebel.v_address", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_address\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_address').database,\r\n      schema=source('bdh_lv_siebel', 'v_address').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_address').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPARISH,\r\nAPARTMENT_REQUIRED,\r\nSTART_DATE,\r\nINTEGRATION_SOURCE,\r\nCOORDINATE_QUALITY,\r\nHOUSE_NUMBER,\r\nMUNICIPALITY,\r\nCONGREGATION_CODE,\r\nADDRESS_LINE,\r\nSYSTEM_SOURCE,\r\nCONGREGATION,\r\nADDRESS_QUALITY,\r\nINTEGRATION_ID,\r\nAPARTMENT_NUMBER,\r\nVILLAGE,\r\nLONGITUDE,\r\nREAL_ESTATE,\r\nCOUNTY_CODE,\r\nCITY,\r\nZIP_CODE,\r\nTAS_ADDRESS_ID,\r\nHOUSE_LETTER,\r\nLATITUDE,\r\nCOUNTRY,\r\nCOUNTY,\r\nPARENT_ADDRESS_ID,\r\nMUNICIPALITY_CODE,\r\nEND_DATE,\r\nTYPE,\r\nADDRESS_NAME_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_addresses_s_addr_per') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPARISH,\r\nAPARTMENT_REQUIRED,\r\nSTART_DATE,\r\nINTEGRATION_SOURCE,\r\nCOORDINATE_QUALITY,\r\nHOUSE_NUMBER,\r\nMUNICIPALITY,\r\nCONGREGATION_CODE,\r\nADDRESS_LINE,\r\nSYSTEM_SOURCE,\r\nCONGREGATION,\r\nADDRESS_QUALITY,\r\nINTEGRATION_ID,\r\nAPARTMENT_NUMBER,\r\nVILLAGE,\r\nLONGITUDE,\r\nREAL_ESTATE,\r\nCOUNTY_CODE,\r\nCITY,\r\nZIP_CODE,\r\nTAS_ADDRESS_ID,\r\nHOUSE_LETTER,\r\nLATITUDE,\r\nCOUNTRY,\r\nCOUNTY,\r\nPARENT_ADDRESS_ID,\r\nMUNICIPALITY_CODE,\r\nEND_DATE,\r\nTYPE,\r\nADDRESS_NAME_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_address_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_address"], ["bdh_lv_siebel", "v_address"], ["bdh_lv_siebel", "v_address"], ["bdh_lv_siebel", "v_address_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_address", "source.bdh_dbt_models.bdh_lv_siebel.v_address_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_address_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_address_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_address_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_address_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_address_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_address_x_snapshot", "lv_v_address_x"], "alias": "v_address_x", "checksum": {"name": "sha256", "checksum": "35e47e0dd3584a28e7bbf9df31bffd8e90262c3c65f42de02ec454fa6d846600"}, "config": {"enabled": true, "alias": "v_address_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_address_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.591284, "relation_name": "bdh_lv.siebel.v_address_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_address_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_address_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_address_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_address_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTIVE,\r\nADDRESS_ID,\r\nACCOUNT_ID,\r\nCONTACT_ID,\r\nTYPE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_addresses_intersection_s_con_addr') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTIVE,\r\nADDRESS_ID,\r\nACCOUNT_ID,\r\nCONTACT_ID,\r\nTYPE,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_address_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_address_x"], ["bdh_lv_siebel", "v_address_x"], ["bdh_lv_siebel", "v_address_x"], ["bdh_lv_siebel", "v_address_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_address_x", "source.bdh_dbt_models.bdh_lv_siebel.v_address_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_assets": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_assets", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_assets_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_assets_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_assets", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_assets_snapshot", "lv_v_assets"], "alias": "v_assets", "checksum": {"name": "sha256", "checksum": "98a39a1f9670ca1a894c5984656d38f2d4455727f5b1332e0753171f7486cd87"}, "config": {"enabled": true, "alias": "v_assets", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_assets", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.598277, "relation_name": "bdh_lv.siebel.v_assets", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_assets\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_assets').database,\r\n      schema=source('bdh_lv_siebel', 'v_assets').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_assets').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nASSET_DESCRIPTION,\r\nASSET_NUM,\r\nACTUAL_DISCONNECT,\r\nSTATUS,\r\nACTIVATION_DATE,\r\nAPPLICATION_COUNTRY,\r\nASSET_DETAILS,\r\nBRAND,\r\nCOMPANY_CARD,\r\nDUAL_CARD,\r\nPENDING_ORDER,\r\nPLANNED_DISCONNECT,\r\nPRICE_PLAN_CODE,\r\nPRIMARY_ATTRIBUTE_NAME,\r\nPRIMARY_ATTRIBUTE_VALUE,\r\nPROMOTION_END_DATE,\r\nREACTIVATION_DATE,\r\nVERSION_DATE,\r\nUOM,\r\nALLOW_PORT_OUT,\r\nCALL_SPECIFICATION,\r\nNOTICE_PERIOD,\r\nNOTICE_PERIOD_END_DATE,\r\nPACKAGE_CODE,\r\nPIN,\r\nPLANNED_DISCONNECT_REASON,\r\nPRICE_PLAN_START_DATE,\r\nPUK1,\r\nREGRET_END,\r\nSERVICE_SUB_TYPE,\r\nWSC_ADMIN,\r\nINSTALL_DATE,\r\nPURCHASE_DATE,\r\nREGISTERED_DATE,\r\nSTART_DATE,\r\nINTEGRATION_ID,\r\nENTITLEMENT_ID,\r\nAGREEMENT_ID,\r\nPRODUCT_ID,\r\nCUSTOMER_ACCOUNT_ID,\r\nBILLING_ACCOUNT_ID,\r\nSERVICE_ACCOUNT_ID,\r\nBILLING_PROFILE_ID,\r\nPARENT_ASSET_ID,\r\nROOT_ASSET_ID,\r\nPRIMARY_CONTACT_ID,\r\nADDRESS_ID,\r\nOWNER_CONTACT_ID,\r\nPROMOTION_ID,\r\nPROMOTION_START_DATE,\r\nSUBSCRIBER_INTEGRATION_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_assets_s_asset') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nASSET_DESCRIPTION,\r\nASSET_NUM,\r\nACTUAL_DISCONNECT,\r\nSTATUS,\r\nACTIVATION_DATE,\r\nAPPLICATION_COUNTRY,\r\nASSET_DETAILS,\r\nBRAND,\r\nCOMPANY_CARD,\r\nDUAL_CARD,\r\nPENDING_ORDER,\r\nPLANNED_DISCONNECT,\r\nPRICE_PLAN_CODE,\r\nPRIMARY_ATTRIBUTE_NAME,\r\nPRIMARY_ATTRIBUTE_VALUE,\r\nPROMOTION_END_DATE,\r\nREACTIVATION_DATE,\r\nVERSION_DATE,\r\nUOM,\r\nALLOW_PORT_OUT,\r\nCALL_SPECIFICATION,\r\nNOTICE_PERIOD,\r\nNOTICE_PERIOD_END_DATE,\r\nPACKAGE_CODE,\r\nPIN,\r\nPLANNED_DISCONNECT_REASON,\r\nPRICE_PLAN_START_DATE,\r\nPUK1,\r\nREGRET_END,\r\nSERVICE_SUB_TYPE,\r\nWSC_ADMIN,\r\nINSTALL_DATE,\r\nPURCHASE_DATE,\r\nREGISTERED_DATE,\r\nSTART_DATE,\r\nINTEGRATION_ID,\r\nENTITLEMENT_ID,\r\nAGREEMENT_ID,\r\nPRODUCT_ID,\r\nCUSTOMER_ACCOUNT_ID,\r\nBILLING_ACCOUNT_ID,\r\nSERVICE_ACCOUNT_ID,\r\nBILLING_PROFILE_ID,\r\nPARENT_ASSET_ID,\r\nROOT_ASSET_ID,\r\nPRIMARY_CONTACT_ID,\r\nADDRESS_ID,\r\nOWNER_CONTACT_ID,\r\nPROMOTION_ID,\r\nPROMOTION_START_DATE,\r\nSUBSCRIBER_INTEGRATION_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_assets_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_assets"], ["bdh_lv_siebel", "v_assets"], ["bdh_lv_siebel", "v_assets"], ["bdh_lv_siebel", "v_assets_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_assets", "source.bdh_dbt_models.bdh_lv_siebel.v_assets_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_assets_xa": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_assets_xa", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_assets_xa_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_assets_xa_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_assets_xa", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_assets_xa_snapshot", "lv_v_assets_xa"], "alias": "v_assets_xa", "checksum": {"name": "sha256", "checksum": "9a2d20e662d50d8a04f3f15b3d7e8f46deb12843543abdfec6554705f2a4291e"}, "config": {"enabled": true, "alias": "v_assets_xa", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_assets_xa", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.60501, "relation_name": "bdh_lv.siebel.v_assets_xa", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_assets_xa\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_assets_xa').database,\r\n      schema=source('bdh_lv_siebel', 'v_assets_xa').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_assets_xa').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nATTRIBUTE_NAME,\r\nDISPLAY_NAME,\r\nHIDDEN_FLAG,\r\nDATA_TYPE,\r\nCHARACTER_VALUE,\r\nNUMBER_VALUE,\r\nDATE_VALUE,\r\nATTRIBUTE_ID,\r\nASSET_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_asset_attributes_s_asset_xa') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nATTRIBUTE_NAME,\r\nDISPLAY_NAME,\r\nHIDDEN_FLAG,\r\nDATA_TYPE,\r\nCHARACTER_VALUE,\r\nNUMBER_VALUE,\r\nDATE_VALUE,\r\nATTRIBUTE_ID,\r\nASSET_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_assets_xa_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_assets_xa"], ["bdh_lv_siebel", "v_assets_xa"], ["bdh_lv_siebel", "v_assets_xa"], ["bdh_lv_siebel", "v_assets_xa_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa", "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_assets_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_assets_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_assets_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_assets_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_assets_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_assets_x_snapshot", "lv_v_assets_x"], "alias": "v_assets_x", "checksum": {"name": "sha256", "checksum": "03e810176d515086b03ae6ea0cba0ebeef2a70a45d156ae98313f8cc991e4997"}, "config": {"enabled": true, "alias": "v_assets_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_assets_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6140192, "relation_name": "bdh_lv.siebel.v_assets_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_assets_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_assets_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_assets_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_assets_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nBINDING_END,\r\nBINDING_PERIOD,\r\nBINDING_START,\r\nINVOICE_ITEMISATION,\r\nPRICE_PLAN_DESCRIPTION,\r\nPUBLISH_NUMBER,\r\nREFERENCE_ID,\r\nSECRET_NUMBER,\r\nSTATUS_CODE,\r\nSTATUS_AREA,\r\nSUSPEND_END,\r\nSUSPEND_START,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_assets_s_asset_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nBINDING_END,\r\nBINDING_PERIOD,\r\nBINDING_START,\r\nINVOICE_ITEMISATION,\r\nPRICE_PLAN_DESCRIPTION,\r\nPUBLISH_NUMBER,\r\nREFERENCE_ID,\r\nSECRET_NUMBER,\r\nSTATUS_CODE,\r\nSTATUS_AREA,\r\nSUSPEND_END,\r\nSUSPEND_START,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_assets_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_assets_x"], ["bdh_lv_siebel", "v_assets_x"], ["bdh_lv_siebel", "v_assets_x"], ["bdh_lv_siebel", "v_assets_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_assets_x", "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_audit_item": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_audit_item", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_audit_item_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_audit_item_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_audit_item", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_audit_item_snapshot", "lv_v_audit_item"], "alias": "v_audit_item", "checksum": {"name": "sha256", "checksum": "bc99651b62f6c9385b64eaebe2fc2899226515562e61c64a66dd8c068a250cab"}, "config": {"enabled": true, "alias": "v_audit_item", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_audit_item", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.62102, "relation_name": "bdh_lv.siebel.v_audit_item", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_audit_item\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_audit_item').database,\r\n      schema=source('bdh_lv_siebel', 'v_audit_item').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_audit_item').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nBUSINESS_COMPONENT,\r\nOPERATION,\r\nRECORD_ID,\r\nEMPLOYEE_LOGIN,\r\nAUDIT_LOG,\r\nOPERATION_DATE,\r\nBASE_TABLE_NAME,\r\nCHILD_BC_BASE_TBL,\r\nCHILD_BC_NAME,\r\nCHILD_RECORD_ID,\r\nFIELD_NAME,\r\nGROUP_NUM,\r\nLINK_NAME,\r\nNEW_VALUES,\r\nNODE_NAME,\r\nOLD_VALUES,\r\nSRC_DEST_ID,\r\nTABLE_NAME,\r\nTABLE_RECORD_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_audit_trail_s_audit_item') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nBUSINESS_COMPONENT,\r\nOPERATION,\r\nRECORD_ID,\r\nEMPLOYEE_LOGIN,\r\nAUDIT_LOG,\r\nOPERATION_DATE,\r\nBASE_TABLE_NAME,\r\nCHILD_BC_BASE_TBL,\r\nCHILD_BC_NAME,\r\nCHILD_RECORD_ID,\r\nFIELD_NAME,\r\nGROUP_NUM,\r\nLINK_NAME,\r\nNEW_VALUES,\r\nNODE_NAME,\r\nOLD_VALUES,\r\nSRC_DEST_ID,\r\nTABLE_NAME,\r\nTABLE_RECORD_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_audit_item_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_audit_item"], ["bdh_lv_siebel", "v_audit_item"], ["bdh_lv_siebel", "v_audit_item"], ["bdh_lv_siebel", "v_audit_item_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_audit_item", "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_billing_profile": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_billing_profile", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_billing_profile_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_billing_profile_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_billing_profile", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_billing_profile_snapshot", "lv_v_billing_profile"], "alias": "v_billing_profile", "checksum": {"name": "sha256", "checksum": "b27d639fc6f7e7558157740c79870a25fc6c876d0303b108773594f02acd0875"}, "config": {"enabled": true, "alias": "v_billing_profile", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_billing_profile", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6282647, "relation_name": "bdh_lv.siebel.v_billing_profile", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_billing_profile\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_billing_profile').database,\r\n      schema=source('bdh_lv_siebel', 'v_billing_profile').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_billing_profile').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nBILL_CYCLE_CUT_OFF_DAY,\r\nFREQUENCY,\r\nBILL_TYPE,\r\nEMAIL_BILL_TO,\r\nBILL_MEDIA,\r\nPAYMENT_METHOD,\r\nBILL_CYCLE,\r\nBILLING_REPORT_LEVEL,\r\nCUSTOMER_INVOICE_REFERENCE,\r\nDD_EXPIRY_DATE,\r\nINVOICE_FEE,\r\nINVOICE_INFORMATION,\r\nMAX__DD_TRANSACTION_AMOUNT,\r\nNO_POST,\r\nNOTIFICATION_LANGUAGE,\r\nEXEMPT_FROM_TREATMENT,\r\nPAYMENT_METHOD_PROVIDER,\r\nPAYMENT_TERMS,\r\nINVOICE_SPECIFICATION_FEE,\r\nTREATMENT_CATEGORY,\r\nACCOUNT_ID,\r\nADDRESS_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_billing_profile_s_inv_prof') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nBILL_CYCLE_CUT_OFF_DAY,\r\nFREQUENCY,\r\nBILL_TYPE,\r\nEMAIL_BILL_TO,\r\nBILL_MEDIA,\r\nPAYMENT_METHOD,\r\nBILL_CYCLE,\r\nBILLING_REPORT_LEVEL,\r\nCUSTOMER_INVOICE_REFERENCE,\r\nDD_EXPIRY_DATE,\r\nINVOICE_FEE,\r\nINVOICE_INFORMATION,\r\nMAX__DD_TRANSACTION_AMOUNT,\r\nNO_POST,\r\nNOTIFICATION_LANGUAGE,\r\nEXEMPT_FROM_TREATMENT,\r\nPAYMENT_METHOD_PROVIDER,\r\nPAYMENT_TERMS,\r\nINVOICE_SPECIFICATION_FEE,\r\nTREATMENT_CATEGORY,\r\nACCOUNT_ID,\r\nADDRESS_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_billing_profile_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_billing_profile"], ["bdh_lv_siebel", "v_billing_profile"], ["bdh_lv_siebel", "v_billing_profile"], ["bdh_lv_siebel", "v_billing_profile_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile", "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_contact": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_contact", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_contact_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_contact_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_contact", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_contact_snapshot", "lv_v_contact"], "alias": "v_contact", "checksum": {"name": "sha256", "checksum": "6077d8eba12ac2782028dcb248aebdd67ddaec991a8d875c0f3193909ca5654f"}, "config": {"enabled": true, "alias": "v_contact", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_contact", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6362631, "relation_name": "bdh_lv.siebel.v_contact", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_contact\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_contact').database,\r\n      schema=source('bdh_lv_siebel', 'v_contact').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_contact').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nINTEGRATION_ID,\r\nPR_PER_ADDR_ID,\r\nX_LEGAL_ADDR_ID,\r\nX_LEGAL_CHECK,\r\nMOBILE_PHONE__,\r\nEFFECTIVE_TO,\r\nEMAIL,\r\nSECONDARY_EMAIL,\r\nSEND_EMAIL_UPDATES,\r\nFIRST_NAME,\r\nLAST_NAME,\r\nELECTRONIC_CONTACT_METHOD,\r\nCONTACT_METHOD,\r\nPERSON_NUMBER,\r\nSTATUS,\r\nDO_NOT_CALL,\r\nDO_NOT_MAIL,\r\nADDITIONAL_PHONE___1,\r\nADDITIONAL_PHONE___2,\r\nCONTACT_SOURCE,\r\nDISABLE_PERSON___VALIDATION,\r\nINSPECT_ALTERNATIVE_EMAIL,\r\nINSPECT_EMAIL,\r\nOFFERS_BY_EMAIL,\r\nPRIMARY_PHONE__,\r\nPROTECTED_IDENTITY,\r\nSELFSERVICE_PORTAL,\r\nCONTACT_TYPE,\r\nWORK_PHONE__,\r\nPRIMARY_ACCOUNT_ID,\r\nPOSITIONID,\r\nCONTACT_ID,\r\nX_FOREIGN_FLAG,\r\nBIRTHDAY,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_contacts_s_contact') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nINTEGRATION_ID,\r\nPR_PER_ADDR_ID,\r\nX_LEGAL_ADDR_ID,\r\nX_LEGAL_CHECK,\r\nMOBILE_PHONE__,\r\nEFFECTIVE_TO,\r\nEMAIL,\r\nSECONDARY_EMAIL,\r\nSEND_EMAIL_UPDATES,\r\nFIRST_NAME,\r\nLAST_NAME,\r\nELECTRONIC_CONTACT_METHOD,\r\nCONTACT_METHOD,\r\nPERSON_NUMBER,\r\nSTATUS,\r\nDO_NOT_CALL,\r\nDO_NOT_MAIL,\r\nADDITIONAL_PHONE___1,\r\nADDITIONAL_PHONE___2,\r\nCONTACT_SOURCE,\r\nDISABLE_PERSON___VALIDATION,\r\nINSPECT_ALTERNATIVE_EMAIL,\r\nINSPECT_EMAIL,\r\nOFFERS_BY_EMAIL,\r\nPRIMARY_PHONE__,\r\nPROTECTED_IDENTITY,\r\nSELFSERVICE_PORTAL,\r\nCONTACT_TYPE,\r\nWORK_PHONE__,\r\nPRIMARY_ACCOUNT_ID,\r\nPOSITIONID,\r\nCONTACT_ID,\r\nX_FOREIGN_FLAG,\r\nBIRTHDAY,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_contact_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_contact"], ["bdh_lv_siebel", "v_contact"], ["bdh_lv_siebel", "v_contact"], ["bdh_lv_siebel", "v_contact_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_contact", "source.bdh_dbt_models.bdh_lv_siebel.v_contact_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_contact_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_contact_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_contact_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_contact_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_contact_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_contact_x_snapshot", "lv_v_contact_x"], "alias": "v_contact_x", "checksum": {"name": "sha256", "checksum": "8cb2d0b292751326ab01cd018501a78f418502953c3ca2f49fcc3e87d1ceb9a8"}, "config": {"enabled": true, "alias": "v_contact_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_contact_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6432652, "relation_name": "bdh_lv.siebel.v_contact_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_contact_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_contact_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_contact_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_contact_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nCONSENT_TO_REGISTER,\r\nDO_NOT_SMS_MMS,\r\nPREFERRED_LANGUAGE_SPOKEN,\r\nPREFERRED_LANGUAGE_WRITTEN,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_contacts_s_contact_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nCONSENT_TO_REGISTER,\r\nDO_NOT_SMS_MMS,\r\nPREFERRED_LANGUAGE_SPOKEN,\r\nPREFERRED_LANGUAGE_WRITTEN,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_contact_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_contact_x"], ["bdh_lv_siebel", "v_contact_x"], ["bdh_lv_siebel", "v_contact_x"], ["bdh_lv_siebel", "v_contact_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_contact_x", "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_list_of_values": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_list_of_values", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_list_of_values_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_list_of_values_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_list_of_values", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_list_of_values_snapshot", "lv_v_list_of_values"], "alias": "v_list_of_values", "checksum": {"name": "sha256", "checksum": "a21e8e4e62800e5b55209f36227324a3ff280cba66a5cab55019b1b0ec55341b"}, "config": {"enabled": true, "alias": "v_list_of_values", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_list_of_values", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.652264, "relation_name": "bdh_lv.siebel.v_list_of_values", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_list_of_values\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_list_of_values').database,\r\n      schema=source('bdh_lv_siebel', 'v_list_of_values').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_list_of_values').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTIVE,\r\n\"DEFAULT\",\r\nDESCRIPTION,\r\nHIGH,\r\nLOW,\r\nSUB_TYPE,\r\nMULTILINGUAL,\r\nCODE,\r\n\"ORDER\",\r\nREPLICATION_LEVEL,\r\nTRANSLATE,\r\nDISPLAY_VALUE,\r\nLANGUAGE_CODE,\r\nTYPE,\r\nPARENT_LOV_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_list_of_values_s_lst_of_val') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTIVE,\r\n\"DEFAULT\",\r\nDESCRIPTION,\r\nHIGH,\r\nLOW,\r\nSUB_TYPE,\r\nMULTILINGUAL,\r\nCODE,\r\n\"ORDER\",\r\nREPLICATION_LEVEL,\r\nTRANSLATE,\r\nDISPLAY_VALUE,\r\nLANGUAGE_CODE,\r\nTYPE,\r\nPARENT_LOV_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_list_of_values_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_list_of_values"], ["bdh_lv_siebel", "v_list_of_values"], ["bdh_lv_siebel", "v_list_of_values"], ["bdh_lv_siebel", "v_list_of_values_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values", "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_logs": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_logs", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_logs_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_logs_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_logs", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_logs_snapshot", "lv_v_logs"], "alias": "v_logs", "checksum": {"name": "sha256", "checksum": "5497c02889027cc598e7d3b21803f5c22f06eadc8a825caf3654a95fffa1cde7"}, "config": {"enabled": true, "alias": "v_logs", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_logs", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6594355, "relation_name": "bdh_lv.siebel.v_logs", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_logs\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_logs').database,\r\n      schema=source('bdh_lt_siebel', 'v_logs').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_logs').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCHANNEL,\r\nDESCRIPTION,\r\nDETAILS,\r\nDIVISION,\r\nFUNC_PROC,\r\nOPERATION_DATE,\r\nOUTCOME,\r\nPRIMARY_ATTR_VALUE,\r\nPRIMARY_ATTR_NAME,\r\nSOURCE,\r\nUSR,\r\nSTATUS,\r\nENTITY,\r\nFUNC_AREA,\r\nPUBLIC_FLG,\r\nCODE,\r\nACCOUNT_ID,\r\nASSET_ID,\r\nCONTACT_ID,\r\nINVOICE_ID,\r\nMASTER_ACCOUNT_ID,\r\nORDER_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_list_of_values_s_lst_of_val') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED,\r\nCREATED_BY,\r\nLAST_UPD,\r\nLAST_UPD_BY,\r\nCHANNEL,\r\nDESCRIPTION,\r\nDETAILS,\r\nDIVISION,\r\nFUNC_PROC,\r\nOPERATION_DATE,\r\nOUTCOME,\r\nPRIMARY_ATTR_VALUE,\r\nPRIMARY_ATTR_NAME,\r\nSOURCE,\r\nUSR,\r\nSTATUS,\r\nENTITY,\r\nFUNC_AREA,\r\nPUBLIC_FLG,\r\nCODE,\r\nACCOUNT_ID,\r\nASSET_ID,\r\nCONTACT_ID,\r\nINVOICE_ID,\r\nMASTER_ACCOUNT_ID,\r\nORDER_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_logs_cdl') }}) WHERE rn = 1\r\n\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_logs"], ["bdh_lt_siebel", "v_logs"], ["bdh_lt_siebel", "v_logs"], ["bdh_lv_siebel", "v_logs_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_logs", "source.bdh_dbt_models.bdh_lv_siebel.v_logs_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_notification_settings": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_notification_settings", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_notification_settings_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_notification_settings_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_notification_settings", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_notification_settings_snapshot", "lv_v_notification_settings"], "alias": "v_notification_settings", "checksum": {"name": "sha256", "checksum": "67be029fe3706ce6a260140e318bc5127654af03d721d319eb651dc5de402b6f"}, "config": {"enabled": true, "alias": "v_notification_settings", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_notification_settings", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6672838, "relation_name": "bdh_lv.siebel.v_notification_settings", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_notification_settings\"\r\n    )\r\n}}\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lt_siebel', 'v_notification_settings').database,\r\n      schema=source('bdh_lt_siebel', 'v_notification_settings').schema,\r\n      identifier=source('bdh_lt_siebel', 'v_notification_settings').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPREFERENCE_NAME,\r\nACCOUNT_ID,\r\nVALUE,\r\nASSET_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_notification_cx_nt_acc_pref') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPREFERENCE_NAME,\r\nACCOUNT_ID,\r\nVALUE,\r\nASSET_ID,\r\nFILE_NAME,\r\nDT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_notification_settings_cdl') }}) WHERE rn = 1\r\n\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lt_siebel", "v_notification_settings"], ["bdh_lt_siebel", "v_notification_settings"], ["bdh_lt_siebel", "v_notification_settings"], ["bdh_lv_siebel", "v_notification_settings_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings", "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_notification": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_notification", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_notification_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_notification_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_notification", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_notification_snapshot", "lv_v_notification"], "alias": "v_notification", "checksum": {"name": "sha256", "checksum": "dba6374d02854bf6fb075cb467b53bae4efbd10b817dd3cb98a1e0a09b4ae147"}, "config": {"enabled": true, "alias": "v_notification", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_notification", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.673282, "relation_name": "bdh_lv.siebel.v_notification", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_notification\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_notification').database,\r\n      schema=source('bdh_lv_siebel', 'v_notification').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_notification').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPREFERENCE_NAME,\r\nACCOUNT_ID,\r\nVALUE,\r\nASSET_ID,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_notification_cx_nt_acc_pref') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPREFERENCE_NAME,\r\nACCOUNT_ID,\r\nVALUE,\r\nASSET_ID,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_notification_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_notification"], ["bdh_lv_siebel", "v_notification"], ["bdh_lv_siebel", "v_notification"], ["bdh_lv_siebel", "v_notification_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_notification", "source.bdh_dbt_models.bdh_lv_siebel.v_notification_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_orders": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_orders", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_orders_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_orders_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_orders", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_orders_snapshot", "lv_v_orders"], "alias": "v_orders", "checksum": {"name": "sha256", "checksum": "060c8348092095f00c4f662f2991b3316db84a95c317c67eb9a6ecb612981a1f"}, "config": {"enabled": true, "alias": "v_orders", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_orders", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6802833, "relation_name": "bdh_lv.siebel.v_orders", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_orders\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_orders').database,\r\n      schema=source('bdh_lv_siebel', 'v_orders').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_orders').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTIVE,\r\nSTATUS_AS_OF,\r\nEXTERNAL_ORDER_ID,\r\nORDER_DATE,\r\nORDER_,\r\nDUE,\r\nREVISION,\r\nSTATUS,\r\nSALES_AGENT_CODE,\r\nERROR_CODE,\r\nERROR_MESSAGE,\r\nEXTERNAL_INVOICE_CODE,\r\nHANDLING_METHOD,\r\nORDER_TYPE,\r\nLINKED_ORDER,\r\nSALES_PARTNER_CODE,\r\nSOURCE,\r\nCUSTOMER_ACCOUNT_ID,\r\nBILLING_ACCOUNT_ID,\r\nCONTACT_ID,\r\nCUSTOMER_ACCOUNT_ID1,\r\nBILLING_ADDRESS_ID,\r\nCUSTOMER_ADDRESS_ID,\r\nCHANNEL,\r\nSHIPPING_ADDRESS_ID,\r\nROOT_ORDER_ID,\r\nEXTERNAL_ORDER_REF_ID,\r\nAGENT_NAME,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_orders_s_order') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTIVE,\r\nSTATUS_AS_OF,\r\nEXTERNAL_ORDER_ID,\r\nORDER_DATE,\r\nORDER_,\r\nDUE,\r\nREVISION,\r\nSTATUS,\r\nSALES_AGENT_CODE,\r\nERROR_CODE,\r\nERROR_MESSAGE,\r\nEXTERNAL_INVOICE_CODE,\r\nHANDLING_METHOD,\r\nORDER_TYPE,\r\nLINKED_ORDER,\r\nSALES_PARTNER_CODE,\r\nSOURCE,\r\nCUSTOMER_ACCOUNT_ID,\r\nBILLING_ACCOUNT_ID,\r\nCONTACT_ID,\r\nCUSTOMER_ACCOUNT_ID1,\r\nBILLING_ADDRESS_ID,\r\nCUSTOMER_ADDRESS_ID,\r\nCHANNEL,\r\nSHIPPING_ADDRESS_ID,\r\nROOT_ORDER_ID,\r\nEXTERNAL_ORDER_REF_ID,\r\nAGENT_NAME,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_orders_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_orders"], ["bdh_lv_siebel", "v_orders"], ["bdh_lv_siebel", "v_orders"], ["bdh_lv_siebel", "v_orders_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_orders", "source.bdh_dbt_models.bdh_lv_siebel.v_orders_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_order_line_items": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_order_line_items", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_order_line_items_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_order_line_items_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_order_line_items", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_order_line_items_snapshot", "lv_v_order_line_items"], "alias": "v_order_line_items", "checksum": {"name": "sha256", "checksum": "ed2e68bbe5e3eeaa00488de89739825f705039696c9c0120f88086574fee2bd8"}, "config": {"enabled": true, "alias": "v_order_line_items", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_order_line_items", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.687284, "relation_name": "bdh_lv.siebel.v_order_line_items", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_order_line_items\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_order_line_items').database,\r\n      schema=source('bdh_lv_siebel', 'v_order_line_items').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_order_line_items').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTION,\r\nSTATUS_AS_OF,\r\nLIST_PRICE,\r\nBILLABLE,\r\nSHIP_CARRIER,\r\nCURRENCY,\r\nCOMMENTS,\r\nDUE_DATE,\r\nOVERRIDE_POLICY_DISCOUNTS,\r\nLINE_NUM,\r\nLOANER,\r\nMRC_SUBTOTAL,\r\nCUSTOMER_NOTE,\r\nNRC_SUBTOTAL,\r\nPARTIAL_SHIP,\r\nPRICING_COMMENTS,\r\nPRODUCT_STATUS,\r\nQTY,\r\nQTY_SHIPPED,\r\nPORT_IN_DATE,\r\nREVENUE_TYPE,\r\nSHIP_DATE,\r\nSHIP_COMPLETE,\r\nSHIP_VIA,\r\nSHIP_TOGETHER,\r\nSTATUS,\r\nACTION_TYPE,\r\nBINDING_PERIOD_END,\r\nBINDING_PERIOD_START,\r\nCREDIT_CHECK_RESULT,\r\nCREDIT_CONTROL_NUMBER,\r\nADDITIONAL_DISCOUNT_REASON,\r\nERROR_CODE,\r\nERROR_MESSAGE,\r\nEXPECTED_DELIVERY_DATE,\r\nLOC_NAME,\r\nLOC_SSN,\r\nNOTICE_PERIOD,\r\nPASSWORD,\r\nPENALTY_OVERRIDE_AMOUNT,\r\nPLANNED_DISCONNECT_DATE,\r\nPORTIN_DEADLINE,\r\nPOSTAL_TRACKING_ID,\r\nPRIMARY_ATTRIBUTE_NAME,\r\nPRIMARY_ATTRIBUTE_VALUE,\r\nPROMOTION_END_DATE,\r\nREACTIVATION_DATE,\r\nSTATUS_CODE,\r\nSUB_STATUS,\r\nWSC_ADMIN,\r\nWARRANTY_RECOVERY,\r\nWRITE_IN_PRODUCT,\r\nORDER_ID,\r\nADJ_UNIT_PRI,\r\nNET_PRICE,\r\nPRI_ADJ_AMT,\r\nASSET_ID,\r\nASSET_INTEGRATION_ID,\r\nBILLING_ACCOUNT_ID,\r\nBO_ORDER_NUM,\r\nCONTACT_ID,\r\nINTEGRATION_ID,\r\nPARENT_ORDER_ITEM_ID,\r\nPRODUCT_ID,\r\nROOT_ORDER_ITEM_ID,\r\nSERVICE_NUM,\r\nSERVICE_ACCOUNT_ID,\r\nDISCONNECT_REASON,\r\nPRODUCT_DESCRIPTION,\r\nBINDING_PERIOD,\r\nVERSION_DATE,\r\nBASE_ITEM_ID,\r\nOWNER_ACCOUNT_ID,\r\nX_EXPECTED_PRED_ID,\r\nX_PREVIOUS_NUMBER,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_order_line_items_s_order_item') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nACTION,\r\nSTATUS_AS_OF,\r\nLIST_PRICE,\r\nBILLABLE,\r\nSHIP_CARRIER,\r\nCURRENCY,\r\nCOMMENTS,\r\nDUE_DATE,\r\nOVERRIDE_POLICY_DISCOUNTS,\r\nLINE_NUM,\r\nLOANER,\r\nMRC_SUBTOTAL,\r\nCUSTOMER_NOTE,\r\nNRC_SUBTOTAL,\r\nPARTIAL_SHIP,\r\nPRICING_COMMENTS,\r\nPRODUCT_STATUS,\r\nQTY,\r\nQTY_SHIPPED,\r\nPORT_IN_DATE,\r\nREVENUE_TYPE,\r\nSHIP_DATE,\r\nSHIP_COMPLETE,\r\nSHIP_VIA,\r\nSHIP_TOGETHER,\r\nSTATUS,\r\nACTION_TYPE,\r\nBINDING_PERIOD_END,\r\nBINDING_PERIOD_START,\r\nCREDIT_CHECK_RESULT,\r\nCREDIT_CONTROL_NUMBER,\r\nADDITIONAL_DISCOUNT_REASON,\r\nERROR_CODE,\r\nERROR_MESSAGE,\r\nEXPECTED_DELIVERY_DATE,\r\nLOC_NAME,\r\nLOC_SSN,\r\nNOTICE_PERIOD,\r\nPASSWORD,\r\nPENALTY_OVERRIDE_AMOUNT,\r\nPLANNED_DISCONNECT_DATE,\r\nPORTIN_DEADLINE,\r\nPOSTAL_TRACKING_ID,\r\nPRIMARY_ATTRIBUTE_NAME,\r\nPRIMARY_ATTRIBUTE_VALUE,\r\nPROMOTION_END_DATE,\r\nREACTIVATION_DATE,\r\nSTATUS_CODE,\r\nSUB_STATUS,\r\nWSC_ADMIN,\r\nWARRANTY_RECOVERY,\r\nWRITE_IN_PRODUCT,\r\nORDER_ID,\r\nADJ_UNIT_PRI,\r\nNET_PRICE,\r\nPRI_ADJ_AMT,\r\nASSET_ID,\r\nASSET_INTEGRATION_ID,\r\nBILLING_ACCOUNT_ID,\r\nBO_ORDER_NUM,\r\nCONTACT_ID,\r\nINTEGRATION_ID,\r\nPARENT_ORDER_ITEM_ID,\r\nPRODUCT_ID,\r\nROOT_ORDER_ITEM_ID,\r\nSERVICE_NUM,\r\nSERVICE_ACCOUNT_ID,\r\nDISCONNECT_REASON,\r\nPRODUCT_DESCRIPTION,\r\nBINDING_PERIOD,\r\nVERSION_DATE,\r\nBASE_ITEM_ID,\r\nOWNER_ACCOUNT_ID,\r\nX_EXPECTED_PRED_ID,\r\nX_PREVIOUS_NUMBER,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_order_line_items_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_order_line_items"], ["bdh_lv_siebel", "v_order_line_items"], ["bdh_lv_siebel", "v_order_line_items"], ["bdh_lv_siebel", "v_order_line_items_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items", "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_order_line_items_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_order_line_items_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_order_line_items_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_order_line_items_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_order_line_items_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_order_line_items_x_snapshot", "lv_v_order_line_items_x"], "alias": "v_order_line_items_x", "checksum": {"name": "sha256", "checksum": "ca00e3c02a1e5dd568b61d07de05dcf3879505b414c2cdb98deb9d8ccd1fb239"}, "config": {"enabled": true, "alias": "v_order_line_items_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_order_line_items_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.6952822, "relation_name": "bdh_lv.siebel.v_order_line_items_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_order_line_items_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_order_line_items_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_order_line_items_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_order_line_items_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nMODIFICATION_NUMBER,\r\nCONFLICT_ID,\r\nORDER_ITEM_ID,\r\nLPO_RETRY_FLAG,\r\nNUMBER_RESERVE_SUCCESS,\r\nINSTALLED_DATE,\r\nCOOL_DOWN_START,\r\nPENALTY_AMOUNT,\r\nSUBSCRIBERS_SSN,\r\nLINE_OWNER_CHECK_ORG_NUM,\r\nCOOL_DOWN_PERIOD,\r\nCOOL_DOWN_END,\r\nDATABASE_LAST_UPDATED,\r\nPARTNER,\r\nSTATUS_REASON,\r\nVALIDATION_TYPE,\r\nSTATUS_CODE,\r\nBINDING_PERIOD,\r\nCAMPAIGN_ID,\r\nSALES_TYPE,\r\nPARTNER_SALES_REP,\r\nSALES_CHANNEL,\r\nPROJECT_CODE,\r\nCUSTOMER_ORIGIN,\r\nSTATION_ID_ADSL,\r\nBENEFIT_AGREEMENT,\r\nLETTER_ID,\r\nLINE_OWNER_STATUS,\r\nSOURCE_CODE,\r\nCREDIT_CHECK_CODE,\r\nCURRENT_OPERATOR,\r\nFIXED_NUMBER_BENEFIT_AGREEMENT,\r\nMOBILE_NUMBER_BENEFIT_AGREEMENT,\r\nINIT_STATUS,\r\nDB_LAST_UPDATED_SOURCE,\r\nORDER_TYPE_OLI,\r\nORIGINAL_REGRET_END_DATE,\r\nPRODUCT_TRIAL_PERIOD,\r\nPROMOTION_TRIAL_PERIOD,\r\nREGRET_PERIOD_END_DATE_CALC,\r\nREGRET_PERIOD_END_DATE,\r\nSHOP_ADDRESS,\r\nSHOP_CITY,\r\nSHOP_COMPANY,\r\nSHOP_EMAIL_ADDRESS,\r\nSHOP_NAME,\r\nSHOP_PHONE_NUMBER,\r\nSHOP_ZIP_CODE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_order_line_items_s_order_item_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nMODIFICATION_NUMBER,\r\nCONFLICT_ID,\r\nORDER_ITEM_ID,\r\nLPO_RETRY_FLAG,\r\nNUMBER_RESERVE_SUCCESS,\r\nINSTALLED_DATE,\r\nCOOL_DOWN_START,\r\nPENALTY_AMOUNT,\r\nSUBSCRIBERS_SSN,\r\nLINE_OWNER_CHECK_ORG_NUM,\r\nCOOL_DOWN_PERIOD,\r\nCOOL_DOWN_END,\r\nDATABASE_LAST_UPDATED,\r\nPARTNER,\r\nSTATUS_REASON,\r\nVALIDATION_TYPE,\r\nSTATUS_CODE,\r\nBINDING_PERIOD,\r\nCAMPAIGN_ID,\r\nSALES_TYPE,\r\nPARTNER_SALES_REP,\r\nSALES_CHANNEL,\r\nPROJECT_CODE,\r\nCUSTOMER_ORIGIN,\r\nSTATION_ID_ADSL,\r\nBENEFIT_AGREEMENT,\r\nLETTER_ID,\r\nLINE_OWNER_STATUS,\r\nSOURCE_CODE,\r\nCREDIT_CHECK_CODE,\r\nCURRENT_OPERATOR,\r\nFIXED_NUMBER_BENEFIT_AGREEMENT,\r\nMOBILE_NUMBER_BENEFIT_AGREEMENT,\r\nINIT_STATUS,\r\nDB_LAST_UPDATED_SOURCE,\r\nORDER_TYPE_OLI,\r\nORIGINAL_REGRET_END_DATE,\r\nPRODUCT_TRIAL_PERIOD,\r\nPROMOTION_TRIAL_PERIOD,\r\nREGRET_PERIOD_END_DATE_CALC,\r\nREGRET_PERIOD_END_DATE,\r\nSHOP_ADDRESS,\r\nSHOP_CITY,\r\nSHOP_COMPANY,\r\nSHOP_EMAIL_ADDRESS,\r\nSHOP_NAME,\r\nSHOP_PHONE_NUMBER,\r\nSHOP_ZIP_CODE,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_order_line_items_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_order_line_items_x"], ["bdh_lv_siebel", "v_order_line_items_x"], ["bdh_lv_siebel", "v_order_line_items_x"], ["bdh_lv_siebel", "v_order_line_items_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x", "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_order_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_order_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_order_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_order_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_order_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_order_x_snapshot", "lv_v_order_x"], "alias": "v_order_x", "checksum": {"name": "sha256", "checksum": "7f4613430eb143f4ffe03214201a1f53384f421416665951cffc9ec18e608ff6"}, "config": {"enabled": true, "alias": "v_order_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_order_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.7042818, "relation_name": "bdh_lv.siebel.v_order_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_order_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_order_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_order_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_order_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nMODIFICATION_NUMBER,\r\nCONFLICT_ID,\r\nORDER_ID,\r\nCREDIT_CHECK_SKIP_FLAG,\r\nCONF_LETTER_SENT,\r\nSMTP_ERROR_OUT_FLAG,\r\nSUPPRESS_NOTIFICATION_FLAG,\r\nINSTALLATION_DATE,\r\nREGRET_START,\r\nRESEND_RETRY_FLAG,\r\nCANCELLED_AFTER_PONR,\r\nDATABASE_LAST_UPDATED,\r\nERROR_MESSAGE,\r\nERROR_CODE,\r\nPARTNER_SALES_REP,\r\nPRIMARY_POSITION_ID,\r\nACTION,\r\nHOLD_REASON,\r\nSTATUS_REASON,\r\nHIGH_LEVEL_PROJECT,\r\nPARTNER,\r\nSOURCE_CODE,\r\nPROJECT_CODE,\r\nSHIP_TO_CARE_OF,\r\nSERVICE_ID,\r\nINFILE_SOURCE,\r\nSHIP_TO_ATTENTION_OF,\r\nDB_LAST_UPDATED_SOURCE,\r\nBATCH_VALIDATE_OUTPUT,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_orders_s_order_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nMODIFICATION_NUMBER,\r\nCONFLICT_ID,\r\nORDER_ID,\r\nCREDIT_CHECK_SKIP_FLAG,\r\nCONF_LETTER_SENT,\r\nSMTP_ERROR_OUT_FLAG,\r\nSUPPRESS_NOTIFICATION_FLAG,\r\nINSTALLATION_DATE,\r\nREGRET_START,\r\nRESEND_RETRY_FLAG,\r\nCANCELLED_AFTER_PONR,\r\nDATABASE_LAST_UPDATED,\r\nERROR_MESSAGE,\r\nERROR_CODE,\r\nPARTNER_SALES_REP,\r\nPRIMARY_POSITION_ID,\r\nACTION,\r\nHOLD_REASON,\r\nSTATUS_REASON,\r\nHIGH_LEVEL_PROJECT,\r\nPARTNER,\r\nSOURCE_CODE,\r\nPROJECT_CODE,\r\nSHIP_TO_CARE_OF,\r\nSERVICE_ID,\r\nINFILE_SOURCE,\r\nSHIP_TO_ATTENTION_OF,\r\nDB_LAST_UPDATED_SOURCE,\r\nBATCH_VALIDATE_OUTPUT,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_order_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_order_x"], ["bdh_lv_siebel", "v_order_x"], ["bdh_lv_siebel", "v_order_x"], ["bdh_lv_siebel", "v_order_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_order_x", "source.bdh_dbt_models.bdh_lv_siebel.v_order_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_positions": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_positions", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_postitions_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_postitions_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_positions", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_postitions_snapshot", "lv_v_positions"], "alias": "v_positions", "checksum": {"name": "sha256", "checksum": "2c7050eb54131ee833450fb9a46acd114df080079eb4d38c0e1a3a5e46799f4c"}, "config": {"enabled": true, "alias": "v_positions", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_positions", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.713293, "relation_name": "bdh_lv.siebel.v_positions", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_positions\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_positions').database,\r\n      schema=source('bdh_lv_siebel', 'v_positions').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_positions').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nPDEMP,\r\nDIVISIONID,\r\nNAME,\r\nLASTUPDATE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(BDH_SOURCE_DATE, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_positions_s_postn') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nPDEMP,\r\nDIVISIONID,\r\nNAME,\r\nLASTUPDATE,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_positions_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_positions"], ["bdh_lv_siebel", "v_positions"], ["bdh_lv_siebel", "v_positions"], ["bdh_lv_siebel", "v_positions_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_positions", "source.bdh_dbt_models.bdh_lv_siebel.v_positions_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_products": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_products", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_products_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_products_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_products", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_products_snapshot", "lv_v_products"], "alias": "v_products", "checksum": {"name": "sha256", "checksum": "bc976f16669a70a6003498743a1600abc0d34d423f8414f223fe62e85993fb64"}, "config": {"enabled": true, "alias": "v_products", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_products", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.7192948, "relation_name": "bdh_lv.siebel.v_products", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_products\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_products').database,\r\n      schema=source('bdh_lv_siebel', 'v_products').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_products').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nDESCRIPTION,\r\nPRODUCT,\r\nORDERABLE,\r\nPART_NUM,\r\nTYPE,\r\nTRACK_AS_ASSET,\r\nUNIT_OF_MEASURE,\r\nSTATUS,\r\nADJUSTMENT_VALUE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_products_s_prod_int') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nDESCRIPTION,\r\nPRODUCT,\r\nORDERABLE,\r\nPART_NUM,\r\nTYPE,\r\nTRACK_AS_ASSET,\r\nUNIT_OF_MEASURE,\r\nSTATUS,\r\nADJUSTMENT_VALUE,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_products_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_products"], ["bdh_lv_siebel", "v_products"], ["bdh_lv_siebel", "v_products"], ["bdh_lv_siebel", "v_products_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_products", "source.bdh_dbt_models.bdh_lv_siebel.v_products_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_service_request": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_service_request", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_service_request_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_service_request_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_service_request", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_service_request_snapshot", "lv_v_service_request"], "alias": "v_service_request", "checksum": {"name": "sha256", "checksum": "165481da7da557b1b9f4969dee4d46aee1c3c83edec047a293b20865fbe1b31c"}, "config": {"enabled": true, "alias": "v_service_request", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_service_request", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.726821, "relation_name": "bdh_lv.siebel.v_service_request", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_service_request\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_service_request').database,\r\n      schema=source('bdh_lv_siebel', 'v_service_request').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_service_request').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR,\r\nSR_CREATION_DATE_ON,\r\nSR_STATUS,\r\nSR_SUB_STATUS,\r\nSUMMARY,\r\nTYPE,\r\nAREA,\r\nSUB_AREA,\r\nNOTES,\r\nCASE_LEVEL_1,\r\nCASE_LEVEL_2,\r\nCASE_LEVEL_3,\r\nPRODUCT_LEVEL_1,\r\nPRODUCT_LEVEL_2,\r\nPRODUCT_LEVEL_3,\r\nSUPPRESS_NOTIFICATION,\r\nRESOLUTION_CODE,\r\nROOT_CAUSE,\r\nPRIORITY,\r\nIMPACT,\r\nSEVERITY,\r\nCOMMITTED_DATE,\r\nDATE_OPENED,\r\nON_HOLD_TILL,\r\n\"GROUP\",\r\nSR_OWNER,\r\nRESPONSIBLE_GROUP,\r\nGROUP_ON_RESUME,\r\nCUSTOMER_ID,\r\nCONTACT_ID,\r\nCREATED_BY_GROUP,\r\nASSET,\r\nSOURCE,\r\nDUE_DATE,\r\nEXTERNAL_REFERENCE_ID,\r\nSRTYPE,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_service_request_s_srv_req') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR,\r\nSR_CREATION_DATE_ON,\r\nSR_STATUS,\r\nSR_SUB_STATUS,\r\nSUMMARY,\r\nTYPE,\r\nAREA,\r\nSUB_AREA,\r\nNOTES,\r\nCASE_LEVEL_1,\r\nCASE_LEVEL_2,\r\nCASE_LEVEL_3,\r\nPRODUCT_LEVEL_1,\r\nPRODUCT_LEVEL_2,\r\nPRODUCT_LEVEL_3,\r\nSUPPRESS_NOTIFICATION,\r\nRESOLUTION_CODE,\r\nROOT_CAUSE,\r\nPRIORITY,\r\nIMPACT,\r\nSEVERITY,\r\nCOMMITTED_DATE,\r\nDATE_OPENED,\r\nON_HOLD_TILL,\r\n\"GROUP\",\r\nSR_OWNER,\r\nRESPONSIBLE_GROUP,\r\nGROUP_ON_RESUME,\r\nCUSTOMER_ID,\r\nCONTACT_ID,\r\nCREATED_BY_GROUP,\r\nASSET,\r\nSOURCE,\r\nDUE_DATE,\r\nEXTERNAL_REFERENCE_ID,\r\nSRTYPE,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_service_request_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_service_request"], ["bdh_lv_siebel", "v_service_request"], ["bdh_lv_siebel", "v_service_request"], ["bdh_lv_siebel", "v_service_request_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_service_request", "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_service_request_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_service_request_x", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_service_request_x_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_service_request_x_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_service_request_x", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_service_request_x_snapshot", "lv_v_service_request_x"], "alias": "v_service_request_x", "checksum": {"name": "sha256", "checksum": "0acfc52f4d306afcd981768f54846dd37198746266e5311ad1207025571d1a7f"}, "config": {"enabled": true, "alias": "v_service_request_x", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_service_request_x", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.735822, "relation_name": "bdh_lv.siebel.v_service_request_x", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key='row_id',\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias=\"v_service_request_x\"\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_service_request_x').database,\r\n      schema=source('bdh_lv_siebel', 'v_service_request_x').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_service_request_x').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR_RESOLUTION_DATE,\r\nAUTO_SERVICE_NOTIFICATION_PREFERENCE,\r\nRESOLUTION,\r\nCAUSED_BY,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')  as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  FROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_service_request_s_srv_req_x') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nSR_RESOLUTION_DATE,\r\nAUTO_SERVICE_NOTIFICATION_PREFERENCE,\r\nRESOLUTION,\r\nCAUSED_BY,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_service_request_x_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_service_request_x"], ["bdh_lv_siebel", "v_service_request_x"], ["bdh_lv_siebel", "v_service_request_x"], ["bdh_lv_siebel", "v_service_request_x_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x", "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.lv_v_user": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_user", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\siebel\\siebel_v_user_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\siebel\\siebel_v_user_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.lv_v_user", "fqn": ["bdh_dbt_models", "bdh_lv", "siebel", "siebel_v_user_snapshot", "lv_v_user"], "alias": "v_user", "checksum": {"name": "sha256", "checksum": "ffe78192a5542902f3fa2ca7673b7145c601c6f1d0b50edfa706c5c79d09f11c"}, "config": {"enabled": true, "alias": "v_user", "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "siebel", "target_database": "bdh_lv", "updated_at": null, "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "siebel", "unique_key": "row_id", "strategy": "check", "check_cols": ["BDH_LOAD_RAW_TIMESTAMP"], "alias": "v_user", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.7438188, "relation_name": "bdh_lv.siebel.v_user", "raw_code": "\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='siebel',\r\n      unique_key=\"row_id\",\r\n      strategy='check',\r\n      check_cols=['BDH_LOAD_RAW_TIMESTAMP'],\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n      alias='v_user'\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_siebel', 'v_user').database,\r\n      schema=source('bdh_lv_siebel', 'v_user').schema,\r\n      identifier=source('bdh_lv_siebel', 'v_user').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n{% if table_exists %}\r\n\r\n{{ log(\"Table exists\", info=True) }}\r\n\r\nselect\r\nROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPAR_ROW_ID,\r\nLOGIN_NAME,\r\nX_ROLE,\r\nSTATUS,\r\n    BDH_FILE_PATH_AND_NAME as FILE_NAME,\r\n    TO_VARCHAR(UPDATED_ON, 'YYYY-MM-DD')   as DT,\r\n    BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY BDH_SOURCE_DATE desc, BDH_FILE_PATH_AND_NAME desc) AS rn  from {{ source('bdh_raw_lv_siebel', 'raw_sbl_users_s_user') }}\r\nwhere BDH_SOURCE_DATE >= CASE WHEN '{{ var(\"lv_exec_dt\") }}' = '2000-01-01' THEN DATEADD(DAY, -3, CURRENT_DATE()) ELSE '{{ var(\"lv_exec_dt\") }}' END ) WHERE rn = 1\r\n\r\n{% else %}\r\n\r\n{{ log(\"Table does not exist\", info=True) }}\r\n\r\n\r\nselect\r\n ROW_ID,\r\nCREATED_ON,\r\nCREATED_BY_ID,\r\nUPDATED_ON,\r\nUPDATED_BY_ID,\r\nPAR_ROW_ID,\r\nLOGIN_NAME,\r\nX_ROLE,\r\nSTATUS,\r\n    FILE_NAME,\r\n    DT,\r\n    DATEADD(day,-14,current_timestamp()) as BDH_LOAD_RAW_TIMESTAMP\r\nfrom (SELECT *, ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY DT desc, file_name desc) AS rn  FROM {{ source('bdh_lv_siebel', 'v_user_cdl') }}) WHERE rn = 1\r\n\r\n{% endif %}\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_siebel", "v_user"], ["bdh_lv_siebel", "v_user"], ["bdh_lv_siebel", "v_user"], ["bdh_lv_siebel", "v_user_cdl"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_siebel.v_user", "source.bdh_dbt_models.bdh_lv_siebel.v_user_cdl"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.stg_lv_v_assets": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_assets", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\stg_v_postp_data_model\\stg_lv_v_assets_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\stg_v_postp_data_model\\stg_lv_v_assets_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.stg_lv_v_assets", "fqn": ["bdh_dbt_models", "bdh_lv", "stg_v_postp_data_model", "stg_lv_v_assets_snapshot", "stg_lv_v_assets"], "alias": "stg_lv_v_assets", "checksum": {"name": "sha256", "checksum": "561a6d3175c9417adaef538ee075fbec5bfe0c58bf6ff76c57776c5efc2ac766"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "timestamp", "target_schema": "test", "target_database": "bdh_lv", "updated_at": "updated_on", "check_cols": null, "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "test", "unique_key": "row_id", "strategy": "timestamp", "updated_at": "updated_on", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.7518203, "relation_name": "bdh_lv.test.stg_lv_v_assets", "raw_code": "\r\n\r\n{% set dt = var('lv_execution_date') %}\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='test',\r\n      unique_key='row_id',\r\n      strategy='timestamp',\r\n      updated_at='updated_on',\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_postp_dm', 'stg_lv_v_assets').database,\r\n      schema=source('bdh_lv_postp_dm', 'stg_lv_v_assets').schema,\r\n      identifier=source('bdh_lv_postp_dm', 'stg_lv_v_assets').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\nSELECT\r\n  ROW_ID,\r\n  CREATED_ON,\r\n  CREATED_BY_ID,\r\n  UPDATED_ON,\r\n  UPDATED_BY_ID,\r\n  ASSET_DESCRIPTION,\r\n  ASSET_NUM,\r\n  ACTUAL_DISCONNECT,\r\n  STATUS,\r\n  ACTIVATION_DATE,\r\n  APPLICATION_COUNTRY,\r\n  ASSET_DETAILS,\r\n  BRAND,\r\n  COMPANY_CARD,\r\n  DUAL_CARD,\r\n  PENDING_ORDER,\r\n  PLANNED_DISCONNECT,\r\n  PRICE_PLAN_CODE,\r\n  PRIMARY_ATTRIBUTE_NAME,\r\n  PRIMARY_ATTRIBUTE_VALUE,\r\n  PROMOTION_END_DATE,\r\n  REACTIVATION_DATE,\r\n  VERSION_DATE,\r\n  UOM,\r\n  ALLOW_PORT_OUT,\r\n  CALL_SPECIFICATION,\r\n  NOTICE_PERIOD,\r\n  NOTICE_PERIOD_END_DATE,\r\n  PACKAGE_CODE,\r\n  PIN,\r\n  PLANNED_DISCONNECT_REASON,\r\n  PRICE_PLAN_START_DATE,\r\n  PUK1,\r\n  REGRET_END,\r\n  SERVICE_SUB_TYPE,\r\n  WSC_ADMIN,\r\n  INSTALL_DATE,\r\n  PURCHASE_DATE,\r\n  REGISTERED_DATE,\r\n  START_DATE,\r\n  INTEGRATION_ID,\r\n  ENTITLEMENT_ID,\r\n  AGREEMENT_ID,\r\n  PRODUCT_ID,\r\n  CUSTOMER_ACCOUNT_ID,\r\n  BILLING_ACCOUNT_ID,\r\n  SERVICE_ACCOUNT_ID,\r\n  BILLING_PROFILE_ID,\r\n  PARENT_ASSET_ID,\r\n  ROOT_ASSET_ID,\r\n  PRIMARY_CONTACT_ID,\r\n  ADDRESS_ID,\r\n  OWNER_CONTACT_ID,\r\n  PROMOTION_ID,\r\n  PROMOTION_START_DATE,\r\n  SUBSCRIBER_INTEGRATION_ID\r\nFROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_assets_s_asset') }}\r\n{% if table_exists %}\r\n  WHERE UPDATED_ON >= DATEADD(DAY, -3, '{{ dt }}') AND UPDATED_ON < '{{ dt }}'\r\n{% else %}\r\n  WHERE UPDATED_ON < '{{ dt }}'\r\n{% endif %}\r\nQUALIFY ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY UPDATED_ON DESC) = 1\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_assets"], ["bdh_lv_postp_dm", "stg_lv_v_assets"], ["bdh_lv_postp_dm", "stg_lv_v_assets"], ["bdh_raw_lv_siebel", "raw_sbl_assets_s_asset"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.stg_lv_v_assets_xa": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_assets_xa", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\stg_v_postp_data_model\\stg_lv_v_assets_xa_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\stg_v_postp_data_model\\stg_lv_v_assets_xa_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.stg_lv_v_assets_xa", "fqn": ["bdh_dbt_models", "bdh_lv", "stg_v_postp_data_model", "stg_lv_v_assets_xa_snapshot", "stg_lv_v_assets_xa"], "alias": "stg_lv_v_assets_xa", "checksum": {"name": "sha256", "checksum": "f7509b0fb13bd063a9ae23d28db244b61c3be9f09a4fbf6a5fd3bbece0442789"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "delete from {{this}} where dbt_valid_to is not null", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "timestamp", "target_schema": "test", "target_database": "bdh_lv", "updated_at": "updated_on", "check_cols": null, "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "test", "unique_key": "row_id", "strategy": "timestamp", "updated_at": "updated_on", "post-hook": ["delete from {{this}} where dbt_valid_to is not null"]}, "created_at": 1718885161.7594192, "relation_name": "bdh_lv.test.stg_lv_v_assets_xa", "raw_code": "\r\n\r\n{% set dt = var('lv_execution_date') %}\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='test',\r\n      unique_key='row_id',\r\n      strategy='timestamp',\r\n      updated_at='updated_on',\r\n      post_hook=\"delete from {{this}} where dbt_valid_to is not null\",\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_postp_dm', 'stg_lv_v_assets_xa').database,\r\n      schema=source('bdh_lv_postp_dm', 'stg_lv_v_assets_xa').schema,\r\n      identifier=source('bdh_lv_postp_dm', 'stg_lv_v_assets_xa').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n\r\nselect\r\nrow_id,\r\ncreated_on,\r\ncreated_by_id,\r\nupdated_on,\r\nupdated_by_id,\r\nattribute_name,\r\ndisplay_name,\r\nhidden_flag,\r\ndata_type,\r\ncharacter_value,\r\nnumber_value,\r\ndate_value,\r\nattribute_id,\r\nasset_id\r\nfrom {{ source('bdh_raw_lv_siebel', 'raw_sbl_asset_attributes_s_asset_xa') }}\r\n{% if table_exists %}\r\n  WHERE UPDATED_ON >= DATEADD(DAY, -3, '{{ dt }}') AND UPDATED_ON < '{{ dt }}'\r\n{% else %}\r\n  WHERE UPDATED_ON < '{{ dt }}'\r\n{% endif %}\r\nQUALIFY ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY UPDATED_ON DESC) = 1\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_assets_xa"], ["bdh_lv_postp_dm", "stg_lv_v_assets_xa"], ["bdh_lv_postp_dm", "stg_lv_v_assets_xa"], ["bdh_raw_lv_siebel", "raw_sbl_asset_attributes_s_asset_xa"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_asset_attributes_s_asset_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.stg_lv_v_order_line_items": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_order_line_items", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\stg_v_postp_data_model\\stg_lv_v_order_line_items_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\stg_v_postp_data_model\\stg_lv_v_order_line_items_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.stg_lv_v_order_line_items", "fqn": ["bdh_dbt_models", "bdh_lv", "stg_v_postp_data_model", "stg_lv_v_order_line_items_snapshot", "stg_lv_v_order_line_items"], "alias": "stg_lv_v_order_line_items", "checksum": {"name": "sha256", "checksum": "1756c9387b97409eecb712b371bac1c66a96b46532f192fb96c82d7fca30f9c9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "delete from {{this}} where dbt_valid_to is not null", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "timestamp", "target_schema": "test", "target_database": "bdh_lv", "updated_at": "updated_on", "check_cols": null, "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "test", "unique_key": "row_id", "strategy": "timestamp", "updated_at": "updated_on", "post-hook": ["delete from {{this}} where dbt_valid_to is not null"]}, "created_at": 1718885161.767432, "relation_name": "bdh_lv.test.stg_lv_v_order_line_items", "raw_code": "\r\n\r\n{% set dt = var('lv_execution_date') %}\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='test',\r\n      unique_key='row_id',\r\n      strategy='timestamp',\r\n      updated_at='updated_on',\r\n      post_hook=\"delete from {{this}} where dbt_valid_to is not null\",\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_postp_dm', 'stg_lv_v_order_line_items').database,\r\n      schema=source('bdh_lv_postp_dm', 'stg_lv_v_order_line_items').schema,\r\n      identifier=source('bdh_lv_postp_dm', 'stg_lv_v_order_line_items').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\n\r\nSELECT row_id,\r\n       created_on,\r\n       created_by_id,\r\n       updated_on,\r\n       updated_by_id,\r\n       action,\r\n       status_as_of,\r\n       list_price,\r\n       billable,\r\n       ship_carrier,\r\n       currency,\r\n       comments,\r\n       due_date,\r\n       override_policy_discounts,\r\n       line_num,\r\n       loaner,\r\n       mrc_subtotal,\r\n       customer_note,\r\n       nrc_subtotal,\r\n       partial_ship,\r\n       pricing_comments,\r\n       product_status,\r\n       qty,\r\n       qty_shipped,\r\n       port_in_date,\r\n       revenue_type,\r\n       ship_date,\r\n       ship_complete,\r\n       ship_via,\r\n       ship_together,\r\n       status,\r\n       action_type,\r\n       binding_period_end,\r\n       binding_period_start,\r\n       credit_check_result,\r\n       credit_control_number,\r\n       additional_discount_reason,\r\n       error_code,\r\n       error_message,\r\n       expected_delivery_date,\r\n       loc_name,\r\n       loc_ssn,\r\n       notice_period,\r\n       password,\r\n       penalty_override_amount,\r\n       planned_disconnect_date,\r\n       portin_deadline,\r\n       postal_tracking_id,\r\n       primary_attribute_name,\r\n       primary_attribute_value,\r\n       promotion_end_date,\r\n       reactivation_date,\r\n       status_code,\r\n       sub_status,\r\n       wsc_admin,\r\n       warranty_recovery,\r\n       write_in_product,\r\n       order_id,\r\n       adj_unit_pri,\r\n       net_price,\r\n       pri_adj_amt,\r\n       asset_id,\r\n       asset_integration_id,\r\n       billing_account_id,\r\n       bo_order_num,\r\n       contact_id,\r\n       integration_id,\r\n       parent_order_item_id,\r\n       product_id,\r\n       root_order_item_id,\r\n       service_num,\r\n       service_account_id,\r\n       disconnect_reason,\r\n       product_description,\r\n       binding_period,\r\n       version_date,\r\n       base_item_id,\r\n       owner_account_id,\r\n       x_expected_pred_id,\r\n       x_previous_number\r\nFROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_order_line_items_s_order_item') }}\r\n{% if table_exists %}\r\n  WHERE UPDATED_ON >= DATEADD(DAY, -3, '{{ dt }}') AND UPDATED_ON < '{{ dt }}'\r\n{% else %}\r\n  WHERE UPDATED_ON < '{{ dt }}'\r\n{% endif %}\r\nQUALIFY ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY UPDATED_ON DESC) = 1\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_order_line_items"], ["bdh_lv_postp_dm", "stg_lv_v_order_line_items"], ["bdh_lv_postp_dm", "stg_lv_v_order_line_items"], ["bdh_raw_lv_siebel", "raw_sbl_order_line_items_s_order_item"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "snapshot.bdh_dbt_models.stg_lv_v_products": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_products", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\stg_v_postp_data_model\\stg_lv_v_products_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\stg_v_postp_data_model\\stg_lv_v_products_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.stg_lv_v_products", "fqn": ["bdh_dbt_models", "bdh_lv", "stg_v_postp_data_model", "stg_lv_v_products_snapshot", "stg_lv_v_products"], "alias": "stg_lv_v_products", "checksum": {"name": "sha256", "checksum": "a91c40a356c6360ac0c53415c2db5a9b58c4eef0a0c2e5203d59b9030ebda51d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "timestamp", "target_schema": "test", "target_database": "bdh_lv", "updated_at": "updated_on", "check_cols": null, "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "test", "unique_key": "row_id", "strategy": "timestamp", "updated_at": "updated_on", "post-hook": ["DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL"]}, "created_at": 1718885161.7764323, "relation_name": "bdh_lv.test.stg_lv_v_products", "raw_code": "\r\n\r\n{% set dt = var('lv_execution_date') %}\r\n\r\n{{\r\n    config(\r\n      target_database='bdh_lv',\r\n      target_schema='test',\r\n      unique_key='row_id',\r\n      strategy='timestamp',\r\n      updated_at='updated_on',\r\n      post_hook=\"DELETE FROM {{this}} WHERE DBT_VALID_TO IS NOT NULL\",\r\n    )\r\n}}\r\n\r\n\r\n{%- set source_relation = adapter.get_relation(\r\n      database=source('bdh_lv_postp_dm', 'stg_lv_v_products').database,\r\n      schema=source('bdh_lv_postp_dm', 'stg_lv_v_products').schema,\r\n      identifier=source('bdh_lv_postp_dm', 'stg_lv_v_products').name) -%}\r\n\r\n{% set table_exists=source_relation is not none  %}\r\n\r\nSELECT row_id,\r\n      created_on,\r\n      created_by_id,\r\n      updated_on,\r\n      updated_by_id,\r\n      description,\r\n      product,\r\n      orderable,\r\n      part_num,\r\n      type,\r\n      track_as_asset,\r\n      unit_of_measure,\r\n      status,\r\n      adjustment_value\r\nFROM {{ source('bdh_raw_lv_siebel', 'raw_sbl_products_s_prod_int') }}\r\n{% if table_exists %}\r\n  WHERE UPDATED_ON >= DATEADD(DAY, -3, '{{ dt }}') AND UPDATED_ON < '{{ dt }}'\r\n{% else %}\r\n  WHERE UPDATED_ON < '{{ dt }}'\r\n{% endif %}\r\nQUALIFY ROW_NUMBER() OVER(PARTITION BY ROW_ID ORDER BY UPDATED_ON DESC) = 1\r\n\r\n", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "stg_lv_v_products"], ["bdh_lv_postp_dm", "stg_lv_v_products"], ["bdh_lv_postp_dm", "stg_lv_v_products"], ["bdh_raw_lv_siebel", "raw_sbl_products_s_prod_int"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_products_s_prod_int"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_billing_id.b8c58db7da": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "sub_billing_id", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_ee_subscriber_snapshot_sub_billing_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_ee_subscriber_snapshot_sub_billing_id.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot.yml", "unique_id": "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_billing_id.b8c58db7da", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "unique_ee_subscriber_snapshot_sub_billing_id"], "alias": "unique_ee_subscriber_snapshot_sub_billing_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8276136, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id", "file_key_name": "models.ee_subscriber_snapshot", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot"}, "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_msisdn.3701475473": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "sub_msisdn", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_ee_subscriber_snapshot_sub_msisdn", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_ee_subscriber_snapshot_sub_msisdn.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot.yml", "unique_id": "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_msisdn.3701475473", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "unique_ee_subscriber_snapshot_sub_msisdn"], "alias": "unique_ee_subscriber_snapshot_sub_msisdn", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8296258, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_msisdn", "file_key_name": "models.ee_subscriber_snapshot", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot"}, "test.bdh_dbt_models.unique_ee_subscriber_snapshot_x_sub_msisdn.fc545541a0": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "sub_msisdn", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_ee_subscriber_snapshot_x_sub_msisdn", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_ee_subscriber_snapshot_x_sub_msisdn.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.unique_ee_subscriber_snapshot_x_sub_msisdn.fc545541a0", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "unique_ee_subscriber_snapshot_x_sub_msisdn"], "alias": "unique_ee_subscriber_snapshot_x_sub_msisdn", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8362048, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_msisdn", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_siebel_id.c0489c9a75": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "account_siebel_id", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_account_siebel_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_account_siebel_id.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_siebel_id.c0489c9a75", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_account_siebel_id"], "alias": "not_null_ee_subscriber_snapshot_x_account_siebel_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8377202, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_siebel_id", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_contact_siebel_id.c534d3da0a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_siebel_id", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_contact_siebel_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_contact_siebel_id.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_contact_siebel_id.c534d3da0a", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_contact_siebel_id"], "alias": "not_null_ee_subscriber_snapshot_x_contact_siebel_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8397207, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "contact_siebel_id", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_sub_segment.63f4e0ecdf": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "account_sub_segment", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_account_sub_segment", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_account_sub_segment.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_sub_segment.63f4e0ecdf", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_account_sub_segment"], "alias": "not_null_ee_subscriber_snapshot_x_account_sub_segment", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8407233, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_sub_segment", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_name.7fcddee1d0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "account_name", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_account_name", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_account_name.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_name.7fcddee1d0", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_account_name"], "alias": "not_null_ee_subscriber_snapshot_x_account_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.842721, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_name", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_soc_sec_num.50a24c6ae1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "soc_sec_num", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_soc_sec_num", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_soc_sec_num.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_soc_sec_num.50a24c6ae1", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_soc_sec_num"], "alias": "not_null_ee_subscriber_snapshot_x_soc_sec_num", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8437219, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "soc_sec_num", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7.7c5b43e16c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "x_soc_sec_num_0_7", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7.7c5b43e16c", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7"], "alias": "not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.844722, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "x_soc_sec_num_0_7", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_company_code.055a9f8b12": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "company_code", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_company_code", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_company_code.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_company_code.055a9f8b12", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_company_code"], "alias": "not_null_ee_subscriber_snapshot_x_company_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8467216, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "company_code", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_billing_address.c1ef9710b0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "billing_address", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_billing_address", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_billing_address.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_billing_address.c1ef9710b0", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_billing_address"], "alias": "not_null_ee_subscriber_snapshot_x_billing_address", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8477209, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "billing_address", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode.6068dfb09b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "zipcode", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_zipcode", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_zipcode.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode.6068dfb09b", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_zipcode"], "alias": "not_null_ee_subscriber_snapshot_x_zipcode", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8487208, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "zipcode", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode_subdiv.7eff317695": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "zipcode_subdiv", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_zipcode_subdiv", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_zipcode_subdiv.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode_subdiv.7eff317695", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_zipcode_subdiv"], "alias": "not_null_ee_subscriber_snapshot_x_zipcode_subdiv", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8507211, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "zipcode_subdiv", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_county.38ceb59a37": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "county", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_county", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_county.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_county.38ceb59a37", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_county"], "alias": "not_null_ee_subscriber_snapshot_x_county", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8517208, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "county", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_name.ff1921c523": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "manager_name", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_manager_name", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_manager_name.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_name.ff1921c523", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_manager_name"], "alias": "not_null_ee_subscriber_snapshot_x_manager_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8547194, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "manager_name", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_last_name.2e93b75fa8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "manager_last_name", "model": "{{ get_where_subquery(ref('ee_subscriber_snapshot_x')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_ee_subscriber_snapshot_x_manager_last_name", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_ee_subscriber_snapshot_x_manager_last_name.sql", "original_file_path": "models\\bdh_ee\\ee_customer_360_profile\\ee_subscriber_snapshot_x.yml", "unique_id": "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_last_name.2e93b75fa8", "fqn": ["bdh_dbt_models", "bdh_ee", "ee_customer_360_profile", "not_null_ee_subscriber_snapshot_x_manager_last_name"], "alias": "not_null_ee_subscriber_snapshot_x_manager_last_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.855719, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "ee_subscriber_snapshot_x", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "manager_last_name", "file_key_name": "models.ee_subscriber_snapshot_x", "attached_node": "model.bdh_dbt_models.ee_subscriber_snapshot_x"}, "test.bdh_dbt_models.not_null_products_in_siebel_ou_num.9a3b9e297c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ou_num", "model": "{{ get_where_subquery(ref('products_in_siebel')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_products_in_siebel_ou_num", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_products_in_siebel_ou_num.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\products_in_siebel.yml", "unique_id": "test.bdh_dbt_models.not_null_products_in_siebel_ou_num.9a3b9e297c", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "not_null_products_in_siebel_ou_num"], "alias": "not_null_products_in_siebel_ou_num", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.8587215, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "products_in_siebel", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.products_in_siebel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ou_num", "file_key_name": "models.products_in_siebel", "attached_node": "model.bdh_dbt_models.products_in_siebel"}, "test.bdh_dbt_models.not_null_products_in_siebel_bill_accnt_id.a0ee4b5c20": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "bill_accnt_id", "model": "{{ get_where_subquery(ref('products_in_siebel')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_products_in_siebel_bill_accnt_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_products_in_siebel_bill_accnt_id.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\products_in_siebel.yml", "unique_id": "test.bdh_dbt_models.not_null_products_in_siebel_bill_accnt_id.a0ee4b5c20", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "not_null_products_in_siebel_bill_accnt_id"], "alias": "not_null_products_in_siebel_bill_accnt_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.8607218, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "products_in_siebel", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.products_in_siebel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "bill_accnt_id", "file_key_name": "models.products_in_siebel", "attached_node": "model.bdh_dbt_models.products_in_siebel"}, "test.bdh_dbt_models.not_null_products_in_siebel_asset_id.648e2ffa49": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "asset_id", "model": "{{ get_where_subquery(ref('products_in_siebel')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_products_in_siebel_asset_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_products_in_siebel_asset_id.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\products_in_siebel.yml", "unique_id": "test.bdh_dbt_models.not_null_products_in_siebel_asset_id.648e2ffa49", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "not_null_products_in_siebel_asset_id"], "alias": "not_null_products_in_siebel_asset_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.861721, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "products_in_siebel", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.products_in_siebel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "asset_id", "file_key_name": "models.products_in_siebel", "attached_node": "model.bdh_dbt_models.products_in_siebel"}, "test.bdh_dbt_models.unique_products_in_siebel_asset_id.a6b05c9318": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "asset_id", "model": "{{ get_where_subquery(ref('products_in_siebel')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_products_in_siebel_asset_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_products_in_siebel_asset_id.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\products_in_siebel.yml", "unique_id": "test.bdh_dbt_models.unique_products_in_siebel_asset_id.a6b05c9318", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "unique_products_in_siebel_asset_id"], "alias": "unique_products_in_siebel_asset_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.8627212, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "products_in_siebel", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.products_in_siebel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "asset_id", "file_key_name": "models.products_in_siebel", "attached_node": "model.bdh_dbt_models.products_in_siebel"}, "test.bdh_dbt_models.not_null_products_in_siebel_root_asset_id.253605b0a1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "root_asset_id", "model": "{{ get_where_subquery(ref('products_in_siebel')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_products_in_siebel_root_asset_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_products_in_siebel_root_asset_id.sql", "original_file_path": "models\\bdh_lt\\demo_siebel\\products_in_siebel.yml", "unique_id": "test.bdh_dbt_models.not_null_products_in_siebel_root_asset_id.253605b0a1", "fqn": ["bdh_dbt_models", "bdh_lt", "demo_siebel", "not_null_products_in_siebel_root_asset_id"], "alias": "not_null_products_in_siebel_root_asset_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.863721, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "products_in_siebel", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.products_in_siebel"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "root_asset_id", "file_key_name": "models.products_in_siebel", "attached_node": "model.bdh_dbt_models.products_in_siebel"}, "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_business_sub_billing_id_.5f3fa50d99": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "sub_billing_id,", "model": "{{ get_where_subquery(ref('lt_subscriber_snapshot_business')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_lt_subscriber_snapshot_business_sub_billing_id_", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_lt_subscriber_snapshot_business_sub_billing_id_.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_business\\lt_subscriber_snapshot_business\\_lt_subscriber_snapshot_business.yml", "unique_id": "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_business_sub_billing_id_.5f3fa50d99", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_business", "lt_subscriber_snapshot_business", "not_null_lt_subscriber_snapshot_business_sub_billing_id_"], "alias": "not_null_lt_subscriber_snapshot_business_sub_billing_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = ''", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = ''"}, "created_at": 1718885161.869234, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = ''\") }}", "language": "sql", "refs": [{"name": "lt_subscriber_snapshot_business", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.lt_subscriber_snapshot_business"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id,", "file_key_name": "models.lt_subscriber_snapshot_business", "attached_node": "model.bdh_dbt_models.lt_subscriber_snapshot_business"}, "test.bdh_dbt_models.unique_lt_subscriber_snapshot_business_sub_billing_id_.1f1d5598d8": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "sub_billing_id,", "model": "{{ get_where_subquery(ref('lt_subscriber_snapshot_business')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_lt_subscriber_snapshot_business_sub_billing_id_", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_lt_subscriber_snapshot_business_sub_billing_id_.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_business\\lt_subscriber_snapshot_business\\_lt_subscriber_snapshot_business.yml", "unique_id": "test.bdh_dbt_models.unique_lt_subscriber_snapshot_business_sub_billing_id_.1f1d5598d8", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_business", "lt_subscriber_snapshot_business", "unique_lt_subscriber_snapshot_business_sub_billing_id_"], "alias": "unique_lt_subscriber_snapshot_business_sub_billing_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = ''", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = ''"}, "created_at": 1718885161.8712451, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = ''\") }}", "language": "sql", "refs": [{"name": "lt_subscriber_snapshot_business", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.lt_subscriber_snapshot_business"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id,", "file_key_name": "models.lt_subscriber_snapshot_business", "attached_node": "model.bdh_dbt_models.lt_subscriber_snapshot_business"}, "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_residential_sub_billing_id_.0df3150fcf": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "sub_billing_id,", "model": "{{ get_where_subquery(ref('lt_subscriber_snapshot_residential')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_lt_subscriber_snapshot_residential_sub_billing_id_", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_lt_subscriber_snapshot_residential_sub_billing_id_.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriber_snapshot_residential\\_lt_subscriber_snapshot_residential.yml", "unique_id": "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_residential_sub_billing_id_.0df3150fcf", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_subscriber_snapshot_residential", "not_null_lt_subscriber_snapshot_residential_sub_billing_id_"], "alias": "not_null_lt_subscriber_snapshot_residential_sub_billing_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = ''", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = ''"}, "created_at": 1718885161.8782463, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = ''\") }}", "language": "sql", "refs": [{"name": "lt_subscriber_snapshot_residential", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.lt_subscriber_snapshot_residential"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id,", "file_key_name": "models.lt_subscriber_snapshot_residential", "attached_node": "model.bdh_dbt_models.lt_subscriber_snapshot_residential"}, "test.bdh_dbt_models.unique_lt_subscriber_snapshot_residential_sub_billing_id_.16f99cb415": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "sub_billing_id,", "model": "{{ get_where_subquery(ref('lt_subscriber_snapshot_residential')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_lt_subscriber_snapshot_residential_sub_billing_id_", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_lt_subscriber_snapshot_residential_sub_billing_id_.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_subscriber_snapshot_residential\\_lt_subscriber_snapshot_residential.yml", "unique_id": "test.bdh_dbt_models.unique_lt_subscriber_snapshot_residential_sub_billing_id_.16f99cb415", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_subscriber_snapshot_residential", "unique_lt_subscriber_snapshot_residential_sub_billing_id_"], "alias": "unique_lt_subscriber_snapshot_residential_sub_billing_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = ''", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = ''"}, "created_at": 1718885161.8802469, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = ''\") }}", "language": "sql", "refs": [{"name": "lt_subscriber_snapshot_residential", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.lt_subscriber_snapshot_residential"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id,", "file_key_name": "models.lt_subscriber_snapshot_residential", "attached_node": "model.bdh_dbt_models.lt_subscriber_snapshot_residential"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.bb6e9355e0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "billing_account_nr", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.bb6e9355e0", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8916707, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "billing_account_nr", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.db82c552f9": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "billing_account_nr", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.db82c552f9", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr"], "alias": "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.8926795, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "billing_account_nr", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_ssn.edbab4b2d2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ssn", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_ssn", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_ssn.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_ssn.edbab4b2d2", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_ssn"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_ssn", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.894673, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "ssn", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_status.36a3bbe2e8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "status", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_status", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_status.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_status.36a3bbe2e8", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_status"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_status", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.895675, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "status", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active.8f725c76ac": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Active"], "column_name": "status", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active.8f725c76ac", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active"], "alias": "accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.897679, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "status", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date.0fb7468d92": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "acquisition_date", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date.0fb7468d92", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9016726, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "acquisition_date", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_account_type.17a0e4d910": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "account_type", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_account_type", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_account_type.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_account_type.17a0e4d910", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_account_type"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_account_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9026732, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_type", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business.c5aa828139": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Residential", "Business"], "column_name": "account_type", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "accepted_values_t2lv_cbm_postp_26f1d85c2b3ca5df8d6266093be0534d.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business.c5aa828139", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business"], "alias": "accepted_values_t2lv_cbm_postp_26f1d85c2b3ca5df8d6266093be0534d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_t2lv_cbm_postp_26f1d85c2b3ca5df8d6266093be0534d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'", "alias": "accepted_values_t2lv_cbm_postp_26f1d85c2b3ca5df8d6266093be0534d"}, "created_at": 1718885161.9036722, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\",alias=\"accepted_values_t2lv_cbm_postp_26f1d85c2b3ca5df8d6266093be0534d\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "account_type", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag.909c038eb7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "eligible_for_fbb_flag", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag.909c038eb7", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9066868, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "eligible_for_fbb_flag", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag.0b2cec7c69": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "intercompany_flag", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag.0b2cec7c69", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9086893, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "intercompany_flag", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag.b28aab5b09": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "sub_bad_debt_flag", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag.b28aab5b09", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9096847, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_bad_debt_flag", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id.a36db62fc0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "billing_account_id", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id.a36db62fc0", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id"], "alias": "not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9106839, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "billing_account_id", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id.790a1a2b36": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "billing_account_id", "model": "{{ get_where_subquery(ref('t2lv_cbm_postp_accounts_snapshot')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id.sql", "original_file_path": "models\\bdh_lv\\t2lv_cbm_postpaid_data_model\\t2lv_cbm_postp_dm.yml", "unique_id": "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id.790a1a2b36", "fqn": ["bdh_dbt_models", "bdh_lv", "t2lv_cbm_postpaid_data_model", "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id"], "alias": "unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = 'execution_date'", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = 'execution_date'"}, "created_at": 1718885161.9116838, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = 'execution_date'\") }}", "language": "sql", "refs": [{"name": "t2lv_cbm_postp_accounts_snapshot", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "billing_account_id", "file_key_name": "models.t2lv_cbm_postp_accounts_snapshot", "attached_node": "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"}, "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_bdh_raw_record.39569d822b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "bdh_raw_record", "model": "{{ get_where_subquery(ref('v_raw_demo_csv_file')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_v_raw_demo_csv_file_bdh_raw_record", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_v_raw_demo_csv_file_bdh_raw_record.sql", "original_file_path": "models\\bdh_raw\\demo_source\\v_raw_demo_csv_file.yml", "unique_id": "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_bdh_raw_record.39569d822b", "fqn": ["bdh_dbt_models", "bdh_raw", "demo_source", "not_null_v_raw_demo_csv_file_bdh_raw_record"], "alias": "not_null_v_raw_demo_csv_file_bdh_raw_record", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.9156902, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "v_raw_demo_csv_file", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.v_raw_demo_csv_file"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "bdh_raw_record", "file_key_name": "models.v_raw_demo_csv_file", "attached_node": "model.bdh_dbt_models.v_raw_demo_csv_file"}, "test.bdh_dbt_models.unique_v_raw_demo_csv_file_col_1.dd0f4a5864": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "col_1", "model": "{{ get_where_subquery(ref('v_raw_demo_csv_file')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_v_raw_demo_csv_file_col_1", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_v_raw_demo_csv_file_col_1.sql", "original_file_path": "models\\bdh_raw\\demo_source\\v_raw_demo_csv_file.yml", "unique_id": "test.bdh_dbt_models.unique_v_raw_demo_csv_file_col_1.dd0f4a5864", "fqn": ["bdh_dbt_models", "bdh_raw", "demo_source", "unique_v_raw_demo_csv_file_col_1"], "alias": "unique_v_raw_demo_csv_file_col_1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.9176831, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "v_raw_demo_csv_file", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.bdh_dbt_models.v_raw_demo_csv_file"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "col_1", "file_key_name": "models.v_raw_demo_csv_file", "attached_node": "model.bdh_dbt_models.v_raw_demo_csv_file"}, "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_col_1.1ecf5e4fc4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "col_1", "model": "{{ get_where_subquery(ref('v_raw_demo_csv_file')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_v_raw_demo_csv_file_col_1", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_v_raw_demo_csv_file_col_1.sql", "original_file_path": "models\\bdh_raw\\demo_source\\v_raw_demo_csv_file.yml", "unique_id": "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_col_1.1ecf5e4fc4", "fqn": ["bdh_dbt_models", "bdh_raw", "demo_source", "not_null_v_raw_demo_csv_file_col_1"], "alias": "not_null_v_raw_demo_csv_file_col_1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.9186842, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "v_raw_demo_csv_file", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.v_raw_demo_csv_file"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "col_1", "file_key_name": "models.v_raw_demo_csv_file", "attached_node": "model.bdh_dbt_models.v_raw_demo_csv_file"}, "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_custom_column.049561379a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "custom_column", "model": "{{ get_where_subquery(ref('v_raw_demo_csv_file')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_v_raw_demo_csv_file_custom_column", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_v_raw_demo_csv_file_custom_column.sql", "original_file_path": "models\\bdh_raw\\demo_source\\v_raw_demo_csv_file.yml", "unique_id": "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_custom_column.049561379a", "fqn": ["bdh_dbt_models", "bdh_raw", "demo_source", "not_null_v_raw_demo_csv_file_custom_column"], "alias": "not_null_v_raw_demo_csv_file_custom_column", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1718885161.9196827, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "v_raw_demo_csv_file", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.bdh_dbt_models.v_raw_demo_csv_file"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "custom_column", "file_key_name": "models.v_raw_demo_csv_file", "attached_node": "model.bdh_dbt_models.v_raw_demo_csv_file"}, "model.bdh_dbt_models.int_dim_lv_binding_products": {"database": "bdh_lv", "schema": "test", "name": "int_dim_lv_binding_products", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\intermediate\\lv_dimensions\\int_dim_lv_binding_products.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\intermediate\\lv_dimensions\\int_dim_lv_binding_products.sql", "unique_id": "model.bdh_dbt_models.int_dim_lv_binding_products", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "intermediate", "lv_dimensions", "int_dim_lv_binding_products"], "alias": "int_dim_lv_binding_products", "checksum": {"name": "sha256", "checksum": "4eb8eba162ab363a633f462091bbf8fb99665467cf5e167331257f2514138a82"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "ephemeral", "database": "bdh_lv", "schema": "test"}, "created_at": 1718887384.8477232, "relation_name": null, "raw_code": "{% set dt = var('lv_execution_date') %}\r\n\r\nWITH stg_assets AS (\r\n        SELECT \r\n            row_id,\r\n            activation_date,\r\n            integration_id,\r\n            product_id,\r\n            parent_asset_id,\r\n            subscriber_integration_id,\r\n            status,\r\n            TRY_TO_DATE(planned_disconnect) AS planned_disconnect,\r\n            root_asset_id,\r\n            updated_on\r\n        FROM {{ ref('stg_raw_lv_assets') }}\r\n    ),\r\n\r\n    stg_products AS (\r\n        SELECT \r\n            row_id,\r\n            product,\r\n            description,\r\n            type\r\n        FROM {{ ref('stg_raw_lv_products') }}\r\n        WHERE type = 'Promotion Binding' OR row_id = '1-4BASYXB'\r\n    ),\r\n\r\n    stg_voli AS (\r\n        SELECT asset_integration_id,\r\n               TRY_TO_DATE(binding_period_end) AS binding_period_end\r\n        FROM {{ ref('stg_raw_lv_order_line_items') }}\r\n        WHERE action = 'New'\r\n    ),\r\n\r\n    stg_assets_xa AS (\r\n        SELECT \r\n            asset_id,\r\n            attribute_name,\r\n            character_value\r\n        FROM {{ ref('stg_raw_lv_assets_xa') }}\r\n        WHERE attribute_name = 'Binding Period'\r\n    )\r\n\r\nSELECT\r\n    asset.row_id AS asset_id,\r\n    asset.root_asset_id AS subscriber_asset_id,\r\n    asset.product_id,\r\n    asset.planned_disconnect,\r\n    voli.binding_period_end,\r\n    xa.character_value AS binding_period,\r\n    asset.integration_id,\r\n    asset.subscriber_integration_id,\r\n    asset.status,\r\n    asset.updated_on,\r\n    '{{ dt }}' AS bdh_calculation_date\r\nFROM stg_assets asset\r\nINNER JOIN stg_products prod\r\n    ON asset.product_id = prod.row_id\r\nLEFT JOIN stg_voli voli\r\n    ON asset.integration_id = voli.asset_integration_id\r\nLEFT JOIN stg_assets_xa xa\r\n    ON asset.row_id = xa.asset_id\r\nWHERE 1=1\r\n    AND asset.activation_date <= '{{ dt }}'\r\n    AND asset.subscriber_integration_id IS NOT NULL\r\n    AND asset.subscriber_integration_id != ''\r\nQUALIFY ROW_NUMBER () OVER (PARTITION BY asset.row_id ORDER BY asset.activation_date DESC NULLS LAST) = 1", "language": "sql", "refs": [{"name": "stg_raw_lv_assets", "package": null, "version": null}, {"name": "stg_raw_lv_products", "package": null, "version": null}, {"name": "stg_raw_lv_order_line_items", "package": null, "version": null}, {"name": "stg_raw_lv_assets_xa", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_raw_lv_assets", "model.bdh_dbt_models.stg_raw_lv_products", "model.bdh_dbt_models.stg_raw_lv_order_line_items", "model.bdh_dbt_models.stg_raw_lv_assets_xa"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "snapshot.bdh_dbt_models.dim_lv_binding_products_snapshot": {"database": "bdh_lv", "schema": "test", "name": "dim_lv_binding_products_snapshot", "resource_type": "snapshot", "package_name": "bdh_dbt_models", "path": "bdh_lv\\dim_postp_data_model\\dim_lv_binding_products_snapshot.sql", "original_file_path": "snapshots\\bdh_lv\\dim_postp_data_model\\dim_lv_binding_products_snapshot.sql", "unique_id": "snapshot.bdh_dbt_models.dim_lv_binding_products_snapshot", "fqn": ["bdh_dbt_models", "bdh_lv", "dim_postp_data_model", "dim_lv_binding_products_snapshot", "dim_lv_binding_products_snapshot"], "alias": "dim_lv_binding_products_snapshot", "checksum": {"name": "sha256", "checksum": "f464b268d4cc3abc1c705b4f398a661deb1b00b2999d31d463dc91dd0d697604"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "post-hook": [{"sql": "DELETE FROM {{this}} WHERE status = 'Inactive'", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "asset_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "strategy": "check", "target_schema": "test", "target_database": "bdh_lv", "updated_at": "updated_on", "check_cols": ["subscriber_asset_id", "product_id", "planned_disconnect", "binding_period_end", "binding_period", "integration_id", "subscriber_integration_id", "status"], "transient": false, "copy_grants": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "target_database": "bdh_lv", "target_schema": "test", "unique_key": "asset_id", "strategy": "check", "updated_at": "updated_on", "check_cols": ["subscriber_asset_id", "product_id", "planned_disconnect", "binding_period_end", "binding_period", "integration_id", "subscriber_integration_id", "status"], "post-hook": ["DELETE FROM {{this}} WHERE status = 'Inactive'"]}, "created_at": 1718887744.0211537, "relation_name": "bdh_lv.test.dim_lv_binding_products_snapshot", "raw_code": "\r\n\r\n{% set dt = var('lv_execution_date') %}\r\n{% set lv_hist_recalculation = var('lv_hist_recalculation', false) %}\r\n\r\n{%- set target_relation = adapter.get_relation(\r\n      database=source('bdh_lv_postp_dm', 'dim_lv_binding_products_snapshot').database,\r\n      schema=source('bdh_lv_postp_dm', 'dim_lv_binding_products_snapshot').schema,\r\n      identifier=source('bdh_lv_postp_dm', 'dim_lv_binding_products_snapshot').name) -%}\r\n\r\n\r\n{{\r\nconfig(\r\n  target_database='bdh_lv',\r\n  target_schema='test',\r\n  unique_key='asset_id',\r\n  strategy='check',\r\n  updated_at='updated_on',\r\n  check_cols=['subscriber_asset_id', 'product_id', 'planned_disconnect', 'binding_period_end', 'binding_period', 'integration_id', 'subscriber_integration_id', 'status'],\r\n  post_hook=\"DELETE FROM {{this}} WHERE status = 'Inactive'\",\r\n)\r\n}}\r\n\r\nSELECT\r\n    asset_id,\r\n    subscriber_asset_id,\r\n    product_id,\r\n    planned_disconnect,\r\n    binding_period_end,\r\n    character_value,\r\n    binding_period,\r\n    integration_id,\r\n    subscriber_integration_id,\r\n    status,\r\n    updated_on,\r\n    bdh_calculation_date\r\nFROM {{ ref('int_dim_lv_binding_products') }}\r\n\r\n", "language": "sql", "refs": [{"name": "int_dim_lv_binding_products", "package": null, "version": null}], "sources": [["bdh_lv_postp_dm", "dim_lv_binding_products_snapshot"], ["bdh_lv_postp_dm", "dim_lv_binding_products_snapshot"], ["bdh_lv_postp_dm", "dim_lv_binding_products_snapshot"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot", "model.bdh_dbt_models.int_dim_lv_binding_products"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}}, "model.bdh_dbt_models.int_lv_subscribers_snapshot": {"database": "bdh_lv", "schema": "test", "name": "int_lv_subscribers_snapshot", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\intermediate\\lv_snapshots\\int_lv_subscribers_snapshot.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\intermediate\\lv_snapshots\\int_lv_subscribers_snapshot.sql", "unique_id": "model.bdh_dbt_models.int_lv_subscribers_snapshot", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "intermediate", "lv_snapshots", "int_lv_subscribers_snapshot"], "alias": "int_lv_subscribers_snapshot", "checksum": {"name": "sha256", "checksum": "f5cff649f0bae2eb67124e3bd4e32f903958a9ce21b770e4a112e60eefec9b08"}, "config": {"enabled": true, "alias": null, "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "ephemeral", "database": "bdh_lv", "schema": "test"}, "created_at": 1718954881.7450926, "relation_name": null, "raw_code": "{% set dt = var('lv_execution_date') %}\r\n\r\nWITH stg_assets AS (\r\n        SELECT \r\n            row_id,\r\n            primary_attribute_value,\r\n            TO_DATE(activation_date) AS activation_date,\r\n            product_id,\r\n            subscriber_integration_id,\r\n            integration_id,\r\n            status,\r\n            updated_on\r\n        FROM {{ ref('stg_raw_lv_assets') }}\r\n        WHERE primary_attribute_name IN ('Postpaid TN', 'TelephoneNumber', 'Fixed Service ID', 'Mobile TN')\r\n          AND status = 'Active'\r\n    )\r\n\r\nSELECT *\r\nFROM stg_assets", "language": "sql", "refs": [{"name": "stg_raw_lv_assets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.bdh_dbt_models.stg_raw_lv_assets"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.bdh_dbt_models.dim_lv_binding_products": {"database": "bdh_lv", "schema": "test", "name": "dim_lv_binding_products", "resource_type": "model", "package_name": "bdh_dbt_models", "path": "bdh_lv\\lv_postp_data_model\\marts\\lv_dimensions\\dim_lv_binding_products.sql", "original_file_path": "models\\bdh_lv\\lv_postp_data_model\\marts\\lv_dimensions\\dim_lv_binding_products.sql", "unique_id": "model.bdh_dbt_models.dim_lv_binding_products", "fqn": ["bdh_dbt_models", "bdh_lv", "lv_postp_data_model", "marts", "lv_dimensions", "dim_lv_binding_products"], "alias": "dim_binding_products", "checksum": {"name": "sha256", "checksum": "c8e4d75f1bc19652f40b6ab20ac95c578411b8e4f74fee67f172aa9717d5135b"}, "config": {"enabled": true, "alias": "dim_binding_products", "schema": "test", "database": "bdh_lv", "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "delete+insert", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "asset_id || valid_from", "on_schema_change": "append_new_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "access": "protected", "transient": false, "copy_grants": true, "snowflake_warehouse": "TRANSFORM_LV_WH"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"transient": false, "copy_grants": true, "on_schema_change": "append_new_columns", "snowflake_warehouse": "TRANSFORM_LV_WH", "materialized": "incremental", "database": "bdh_lv", "schema": "test", "enabled": true, "alias": "dim_binding_products", "incremental_strategy": "delete+insert", "unique_key": "asset_id || valid_from"}, "created_at": 1718983387.6675704, "relation_name": "bdh_lv.test.dim_binding_products", "raw_code": "{{ config(\r\n    enabled=true,\r\n    alias='dim_binding_products',\r\n    materialized='incremental',\r\n    incremental_strategy='delete+insert',\r\n    unique_key='asset_id || valid_from',\r\n) }}\r\n\r\nWITH dim_snap_binding_products AS (\r\n    SELECT\r\n        asset_id,\r\n        subscriber_asset_id,\r\n        product_id,\r\n        planned_disconnect,\r\n        binding_period_end,\r\n        binding_period,\r\n        integration_id,\r\n        subscriber_integration_id\r\n        SUBSTRING(CAST(dbt_valid_from AS TEXT), 1, 10) AS valid_from,\r\n        IFNULL(SUBSTRING(CAST(dbt_valid_to AS TEXT), 1, 10), '9999-01-01') AS valid_to\r\n    FROM {{ source('bdh_lv_postp_dm', 'dim_lv_binding_products_snapshot') }}\r\n)\r\n\r\n\r\nSELECT\r\n    asset_id,\r\n    subscriber_asset_id,\r\n    product_id,\r\n    planned_disconnect,\r\n    binding_period_end,\r\n    binding_period,\r\n    integration_id,\r\n    subscriber_integration_id,\r\n    valid_from,\r\n    valid_to\r\nFROM dim_snap_binding_products\r\n{% if is_incremental() %}\r\n    WHERE dbt_valid_from >= (SELECT COALESCE(MAX(valid_from), '1900-01-01') FROM {{ this }})\r\n{% endif %}", "language": "sql", "refs": [], "sources": [["bdh_lv_postp_dm", "dim_lv_binding_products_snapshot"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}}, "sources": {"source.bdh_dbt_models.bdh_ee_analysts_tables.aa_pp_prices": {"database": "bdh_ee", "schema": "test", "name": "aa_pp_prices", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\analysts_tables.yml", "original_file_path": "models\\sources\\bdh_ee\\analysts_tables.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_analysts_tables.aa_pp_prices", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_analysts_tables", "aa_pp_prices"], "source_name": "bdh_ee_analysts_tables", "source_description": "", "loader": "", "identifier": "aa_pp_prices", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.test.aa_pp_prices", "created_at": 1718885162.0904164}, "source.bdh_dbt_models.bdh_ee_analysts_tables.business_sectors": {"database": "bdh_ee", "schema": "test", "name": "business_sectors", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\analysts_tables.yml", "original_file_path": "models\\sources\\bdh_ee\\analysts_tables.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_analysts_tables.business_sectors", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_analysts_tables", "business_sectors"], "source_name": "bdh_ee_analysts_tables", "source_description": "", "loader": "", "identifier": "business_sectors", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.test.business_sectors", "created_at": 1718885162.0904164}, "source.bdh_dbt_models.bdh_ee_analysts_tables.po_emta_data": {"database": "bdh_ee", "schema": "test", "name": "po_emta_data", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\analysts_tables.yml", "original_file_path": "models\\sources\\bdh_ee\\analysts_tables.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_analysts_tables.po_emta_data", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_analysts_tables", "po_emta_data"], "source_name": "bdh_ee_analysts_tables", "source_description": "", "loader": "", "identifier": "po_emta_data", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.test.po_emta_data", "created_at": 1718885162.0904164}, "source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate": {"database": "bdh_ee", "schema": "test", "name": "vat_rate", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\analysts_tables.yml", "original_file_path": "models\\sources\\bdh_ee\\analysts_tables.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_analysts_tables", "vat_rate"], "source_name": "bdh_ee_analysts_tables", "source_description": "", "loader": "", "identifier": "vat_rate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.test.vat_rate", "created_at": 1718885162.0904164}, "source.bdh_dbt_models.bdh_ee_sales_tool.campaign": {"database": "bdh_ee", "schema": "sales_tool", "name": "campaign", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.campaign", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "campaign"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "campaign", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.campaign", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_sale_channel": {"database": "bdh_ee", "schema": "sales_tool", "name": "campaign_sale_channel", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_sale_channel", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "campaign_sale_channel"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "campaign_sale_channel", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.campaign_sale_channel", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set": {"database": "bdh_ee", "schema": "sales_tool", "name": "campaign_set", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "campaign_set"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "campaign_set", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.campaign_set", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element": {"database": "bdh_ee", "schema": "sales_tool", "name": "campaign_set_element", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "campaign_set_element"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "campaign_set_element", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.campaign_set_element", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element_attribute": {"database": "bdh_ee", "schema": "sales_tool", "name": "campaign_set_element_attribute", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element_attribute", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "campaign_set_element_attribute"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "campaign_set_element_attribute", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.campaign_set_element_attribute", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.consent": {"database": "bdh_ee", "schema": "sales_tool", "name": "consent", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.consent", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "consent"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "consent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.consent", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.contract_message": {"database": "bdh_ee", "schema": "sales_tool", "name": "contract_message", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.contract_message", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "contract_message"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "contract_message", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.contract_message", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer": {"database": "bdh_ee", "schema": "sales_tool", "name": "contract_offer", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "contract_offer"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "contract_offer", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.contract_offer", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_attribute": {"database": "bdh_ee", "schema": "sales_tool", "name": "contract_offer_attribute", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_attribute", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "contract_offer_attribute"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "contract_offer_attribute", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.contract_offer_attribute", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_product": {"database": "bdh_ee", "schema": "sales_tool", "name": "contract_offer_product", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_product", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "contract_offer_product"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "contract_offer_product", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.contract_offer_product", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.contract_phone": {"database": "bdh_ee", "schema": "sales_tool", "name": "contract_phone", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.contract_phone", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "contract_phone"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "contract_phone", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.contract_phone", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_business_logs": {"database": "bdh_ee", "schema": "sales_tool", "name": "credit_check_business_logs", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_business_logs", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "credit_check_business_logs"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "credit_check_business_logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.credit_check_business_logs", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_person_logs": {"database": "bdh_ee", "schema": "sales_tool", "name": "credit_check_person_logs", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_person_logs", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "credit_check_person_logs"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "credit_check_person_logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.credit_check_person_logs", "created_at": 1718885162.0914207}, "source.bdh_dbt_models.bdh_ee_sales_tool.customer": {"database": "bdh_ee", "schema": "sales_tool", "name": "customer", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.customer", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "customer"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "customer", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.customer", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent": {"database": "bdh_ee", "schema": "sales_tool", "name": "customer_consent", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "customer_consent"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "customer_consent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.customer_consent", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent_batch": {"database": "bdh_ee", "schema": "sales_tool", "name": "customer_consent_batch", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent_batch", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "customer_consent_batch"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "customer_consent_batch", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.customer_consent_batch", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.customer_next_best_offer": {"database": "bdh_ee", "schema": "sales_tool", "name": "customer_next_best_offer", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.customer_next_best_offer", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "customer_next_best_offer"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "customer_next_best_offer", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.customer_next_best_offer", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.customer_property": {"database": "bdh_ee", "schema": "sales_tool", "name": "customer_property", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.customer_property", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "customer_property"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "customer_property", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.customer_property", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai": {"database": "bdh_ee", "schema": "sales_tool", "name": "darbuotojai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "darbuotojai"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "darbuotojai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.darbuotojai", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai_subgrupese": {"database": "bdh_ee", "schema": "sales_tool", "name": "darbuotojai_subgrupese", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai_subgrupese", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "darbuotojai_subgrupese"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "darbuotojai_subgrupese", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.darbuotojai_subgrupese", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.doc_status_description": {"database": "bdh_ee", "schema": "sales_tool", "name": "doc_status_description", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.doc_status_description", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "doc_status_description"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "doc_status_description", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.doc_status_description", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.documents": {"database": "bdh_ee", "schema": "sales_tool", "name": "documents", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.documents", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "documents"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "documents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.documents", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.macpoc_order_queue": {"database": "bdh_ee", "schema": "sales_tool", "name": "macpoc_order_queue", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.macpoc_order_queue", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "macpoc_order_queue"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "macpoc_order_queue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.macpoc_order_queue", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_invoices": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_invoices", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_invoices", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_invoices"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_invoices", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_invoices", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_mnp", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_mnp"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_mnp", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_donor": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_mnp_donor", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_donor", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_mnp_donor"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_donor", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_mnp_donor", "created_at": 1718885162.0924206}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_history": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_mnp_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_mnp_history"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_mnp_history", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tm": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_tm", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tm", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_tm"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_tm", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_tm", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_tp", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_tp"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_tp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_tp", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp_returns": {"database": "bdh_ee", "schema": "sales_tool", "name": "mjs_tp_returns", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp_returns", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mjs_tp_returns"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_tp_returns", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mjs_tp_returns", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai": {"database": "bdh_ee", "schema": "sales_tool", "name": "mokejimo_planai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mokejimo_planai"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mokejimo_planai", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff": {"database": "bdh_ee", "schema": "sales_tool", "name": "mokejimo_planai_tariff", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mokejimo_planai_tariff"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_tariff", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mokejimo_planai_tariff", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff_all": {"database": "bdh_ee", "schema": "sales_tool", "name": "mokejimo_planai_tariff_all", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff_all", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mokejimo_planai_tariff_all"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_tariff_all", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mokejimo_planai_tariff_all", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.mw_xml_storage": {"database": "bdh_ee", "schema": "sales_tool", "name": "mw_xml_storage", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.mw_xml_storage", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "mw_xml_storage"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "mw_xml_storage", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.mw_xml_storage", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.order_service": {"database": "bdh_ee", "schema": "sales_tool", "name": "order_service", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.order_service", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "order_service"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "order_service", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.order_service", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.order_service_attribute": {"database": "bdh_ee", "schema": "sales_tool", "name": "order_service_attribute", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.order_service_attribute", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "order_service_attribute"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "order_service_attribute", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.order_service_attribute", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application": {"database": "bdh_ee", "schema": "sales_tool", "name": "portin_application", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "portin_application"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "portin_application", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.portin_application", "created_at": 1718885162.093422}, "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_donor": {"database": "bdh_ee", "schema": "sales_tool", "name": "portin_application_donor", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_donor", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "portin_application_donor"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "portin_application_donor", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.portin_application_donor", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_history": {"database": "bdh_ee", "schema": "sales_tool", "name": "portin_application_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "portin_application_history"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "portin_application_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.portin_application_history", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_owner": {"database": "bdh_ee", "schema": "sales_tool", "name": "portin_application_owner", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_owner", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "portin_application_owner"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "portin_application_owner", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.portin_application_owner", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.prekiu_pardavimas_be_sut": {"database": "bdh_ee", "schema": "sales_tool", "name": "prekiu_pardavimas_be_sut", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.prekiu_pardavimas_be_sut", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "prekiu_pardavimas_be_sut"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "prekiu_pardavimas_be_sut", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.prekiu_pardavimas_be_sut", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_card_refill": {"database": "bdh_ee", "schema": "sales_tool", "name": "prepaid_card_refill", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_card_refill", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "prepaid_card_refill"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "prepaid_card_refill", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.prepaid_card_refill", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_item": {"database": "bdh_ee", "schema": "sales_tool", "name": "prepaid_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_item", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "prepaid_item"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "prepaid_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.prepaid_item", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_sale": {"database": "bdh_ee", "schema": "sales_tool", "name": "prepaid_sale", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_sale", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "prepaid_sale"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "prepaid_sale", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.prepaid_sale", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.promotions": {"database": "bdh_ee", "schema": "sales_tool", "name": "promotions", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.promotions", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "promotions"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "promotions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.promotions", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.s12_current_services": {"database": "bdh_ee", "schema": "sales_tool", "name": "s12_current_services", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.s12_current_services", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "s12_current_services"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "s12_current_services", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.s12_current_services", "created_at": 1718885162.0944252}, "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn": {"database": "bdh_ee", "schema": "sales_tool", "name": "s12_msisdn", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "s12_msisdn"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "s12_msisdn", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.s12_msisdn", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn_mokestis": {"database": "bdh_ee", "schema": "sales_tool", "name": "s12_msisdn_mokestis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn_mokestis", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "s12_msisdn_mokestis"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "s12_msisdn_mokestis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.s12_msisdn_mokestis", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.s12_paslaugos": {"database": "bdh_ee", "schema": "sales_tool", "name": "s12_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.s12_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "s12_paslaugos"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "s12_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.s12_paslaugos", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai": {"database": "bdh_ee", "schema": "sales_tool", "name": "s12_priedai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "s12_priedai"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "s12_priedai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.s12_priedai", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai_status_history": {"database": "bdh_ee", "schema": "sales_tool", "name": "s12_priedai_status_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai_status_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "s12_priedai_status_history"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "s12_priedai_status_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.s12_priedai_status_history", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.sale_records": {"database": "bdh_ee", "schema": "sales_tool", "name": "sale_records", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sale_records", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sale_records"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sale_records", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sale_records", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.subgrupes": {"database": "bdh_ee", "schema": "sales_tool", "name": "subgrupes", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.subgrupes", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "subgrupes"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "subgrupes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.subgrupes", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign": {"database": "bdh_ee", "schema": "sales_tool", "name": "subscription_campaign", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "subscription_campaign"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "subscription_campaign", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.subscription_campaign", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign_set": {"database": "bdh_ee", "schema": "sales_tool", "name": "subscription_campaign_set", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign_set", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "subscription_campaign_set"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "subscription_campaign_set", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.subscription_campaign_set", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_akcijos_paslaugos": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_akcijos_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_akcijos_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_akcijos_paslaugos"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_akcijos_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_akcijos_paslaugos", "created_at": 1718885162.095422}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_kliento_tipas": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_kliento_tipas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_kliento_tipas", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_kliento_tipas"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_kliento_tipas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_kliento_tipas", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_mokestis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_mokestis"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_mokestis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_mokestis", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis_tipas": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_mokestis_tipas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis_tipas", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_mokestis_tipas"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_mokestis_tipas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_mokestis_tipas", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_order_promotion": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_order_promotion", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_order_promotion", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_order_promotion"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_order_promotion", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_order_promotion", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_preke": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_preke", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_preke", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_preke"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_preke", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_preke", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_prekiu_pardavimas": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_prekiu_pardavimas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_prekiu_pardavimas", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_prekiu_pardavimas"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_prekiu_pardavimas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_prekiu_pardavimas", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_fizinis": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_fizinis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_fizinis", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_fizinis"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_fizinis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_fizinis", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_history": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_history"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_history", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_juridinis": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_juridinis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_juridinis", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_juridinis"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_juridinis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_juridinis", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_mserv": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_mserv", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_mserv", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_mserv"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_mserv", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_mserv", "created_at": 1718885162.0964203}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_sim", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_sim"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_sim", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_akcijos_paslaugos": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_sim_akcijos_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_akcijos_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_sim_akcijos_paslaugos"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim_akcijos_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_sim_akcijos_paslaugos", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_mokestis": {"database": "bdh_ee", "schema": "sales_tool", "name": "sut_sutartis_sim_mokestis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_mokestis", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "sut_sutartis_sim_mokestis"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim_mokestis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.sut_sutartis_sim_mokestis", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_sales_tool.warehouse": {"database": "bdh_ee", "schema": "sales_tool", "name": "warehouse", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_ee\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_sales_tool.warehouse", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_sales_tool", "warehouse"], "source_name": "bdh_ee_sales_tool", "source_description": "", "loader": "", "identifier": "warehouse", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.sales_tool.warehouse", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.accounts_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "accounts_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.accounts_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "accounts_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "accounts_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.accounts_cdl", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.accounts_x_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "accounts_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.accounts_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "accounts_x_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "accounts_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.accounts_x_cdl", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.activities_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "activities_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.activities_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "activities_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "activities_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.activities_cdl", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.activities_x_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "activities_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.activities_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "activities_x_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "activities_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.activities_x_cdl", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.audit_item_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "audit_item_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.audit_item_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "audit_item_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "audit_item_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.audit_item_cdl", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.address_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "address_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.address_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "address_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "address_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.address_cdl", "created_at": 1718885162.0974207}, "source.bdh_dbt_models.bdh_ee_siebel.address_x_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "address_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.address_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "address_x_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "address_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.address_x_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.assets_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "assets_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.assets_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "assets_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "assets_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.assets_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.assets_x_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "assets_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.assets_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "assets_x_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "assets_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.assets_x_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.assets_xa_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "assets_xa_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.assets_xa_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "assets_xa_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "assets_xa_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.assets_xa_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.billing_profile_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "billing_profile_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.billing_profile_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "billing_profile_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "billing_profile_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.billing_profile_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.campaigns_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "campaigns_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.campaigns_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "campaigns_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "campaigns_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.campaigns_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.contact_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "contact_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.contact_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "contact_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "contact_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.contact_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.contact_x_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "contact_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.contact_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "contact_x_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "contact_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.contact_x_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.consent_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "consent_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.consent_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "consent_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "consent_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.consent_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "cx_nt_acc_pref_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "cx_nt_acc_pref_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "cx_nt_acc_pref_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.cx_nt_acc_pref_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "cx_pay_schedule_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "cx_pay_schedule_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "cx_pay_schedule_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.cx_pay_schedule_cdl", "created_at": 1718885162.0984197}, "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "cx_vas_provider_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "cx_vas_provider_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "cx_vas_provider_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.cx_vas_provider_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.dd_contract_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "dd_contract_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.dd_contract_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "dd_contract_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "dd_contract_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.dd_contract_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "invc_adj_item_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "invc_adj_item_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "invc_adj_item_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.invc_adj_item_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "invoice_adj_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "invoice_adj_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "invoice_adj_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.invoice_adj_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.list_of_values_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "list_of_values_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.list_of_values_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "list_of_values_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "list_of_values_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.list_of_values_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.logs_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "logs_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.logs_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "logs_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "logs_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.logs_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.notification_settings_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "notification_settings_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.notification_settings_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "notification_settings_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "notification_settings_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.notification_settings_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.order_line_items_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "order_line_items_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.order_line_items_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "order_line_items_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "order_line_items_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.order_line_items_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "order_items_xa_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "order_items_xa_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "order_items_xa_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.order_items_xa_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.orders_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "orders_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.orders_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "orders_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "orders_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.orders_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.product_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "product_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.product_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "product_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "product_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.product_cdl", "created_at": 1718885162.0994203}, "source.bdh_dbt_models.bdh_ee_siebel.postn_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "postn_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.postn_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "postn_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "postn_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.postn_cdl", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.service_request_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "service_request_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.service_request_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "service_request_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "service_request_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.service_request_cdl", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.service_request_x_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "service_request_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.service_request_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "service_request_x_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "service_request_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.service_request_x_cdl", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.payment_claim_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "payment_claim_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.payment_claim_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "payment_claim_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "payment_claim_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.payment_claim_cdl", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.user_cdl": {"database": "bdh_ee", "schema": "siebel", "name": "user_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.user_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "user_cdl"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "user_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.user_cdl", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.accounts": {"database": "bdh_ee", "schema": "siebel", "name": "accounts", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.accounts", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "accounts"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.accounts", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.accounts_x": {"database": "bdh_ee", "schema": "siebel", "name": "accounts_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.accounts_x", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "accounts_x"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "accounts_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.accounts_x", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.activities": {"database": "bdh_ee", "schema": "siebel", "name": "activities", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.activities", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "activities"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "activities", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.activities", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.activities_x": {"database": "bdh_ee", "schema": "siebel", "name": "activities_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.activities_x", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "activities_x"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "activities_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.activities_x", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.audit_item": {"database": "bdh_ee", "schema": "siebel", "name": "audit_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.audit_item", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "audit_item"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "audit_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.audit_item", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.address": {"database": "bdh_ee", "schema": "siebel", "name": "address", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.address", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "address"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "address", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.address", "created_at": 1718885162.10042}, "source.bdh_dbt_models.bdh_ee_siebel.address_x": {"database": "bdh_ee", "schema": "siebel", "name": "address_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.address_x", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "address_x"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "address_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.address_x", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.assets": {"database": "bdh_ee", "schema": "siebel", "name": "assets", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.assets", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "assets"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "assets", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.assets", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.assets_x": {"database": "bdh_ee", "schema": "siebel", "name": "assets_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.assets_x", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "assets_x"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "assets_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.assets_x", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.assets_xa": {"database": "bdh_ee", "schema": "siebel", "name": "assets_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.assets_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "assets_xa"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "assets_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.assets_xa", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.billing_profile": {"database": "bdh_ee", "schema": "siebel", "name": "billing_profile", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.billing_profile", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "billing_profile"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "billing_profile", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.billing_profile", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.campaigns": {"database": "bdh_ee", "schema": "siebel", "name": "campaigns", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.campaigns", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "campaigns"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "campaigns", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.campaigns", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.contact": {"database": "bdh_ee", "schema": "siebel", "name": "contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.contact", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "contact"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.contact", "created_at": 1718885162.1014197}, "source.bdh_dbt_models.bdh_ee_siebel.contact_x": {"database": "bdh_ee", "schema": "siebel", "name": "contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "contact_x"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.contact_x", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.consent": {"database": "bdh_ee", "schema": "siebel", "name": "consent", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.consent", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "consent"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "consent", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.consent", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref": {"database": "bdh_ee", "schema": "siebel", "name": "cx_nt_acc_pref", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "cx_nt_acc_pref"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "cx_nt_acc_pref", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.cx_nt_acc_pref", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule": {"database": "bdh_ee", "schema": "siebel", "name": "cx_pay_schedule", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "cx_pay_schedule"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "cx_pay_schedule", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.cx_pay_schedule", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider": {"database": "bdh_ee", "schema": "siebel", "name": "cx_vas_provider", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "cx_vas_provider"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "cx_vas_provider", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.cx_vas_provider", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.dd_contract": {"database": "bdh_ee", "schema": "siebel", "name": "dd_contract", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.dd_contract", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "dd_contract"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "dd_contract", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.dd_contract", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item": {"database": "bdh_ee", "schema": "siebel", "name": "invc_adj_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "invc_adj_item"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "invc_adj_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.invc_adj_item", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj": {"database": "bdh_ee", "schema": "siebel", "name": "invoice_adj", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "invoice_adj"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "invoice_adj", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.invoice_adj", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.list_of_values": {"database": "bdh_ee", "schema": "siebel", "name": "list_of_values", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.list_of_values", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "list_of_values"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "list_of_values", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.list_of_values", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.logs": {"database": "bdh_ee", "schema": "siebel", "name": "logs", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.logs", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "logs"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.logs", "created_at": 1718885162.1024182}, "source.bdh_dbt_models.bdh_ee_siebel.notification_settings": {"database": "bdh_ee", "schema": "siebel", "name": "notification_settings", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.notification_settings", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "notification_settings"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "notification_settings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.notification_settings", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.order_line_items": {"database": "bdh_ee", "schema": "siebel", "name": "order_line_items", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.order_line_items", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "order_line_items"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "order_line_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.order_line_items", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa": {"database": "bdh_ee", "schema": "siebel", "name": "order_items_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "order_items_xa"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "order_items_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.order_items_xa", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.orders": {"database": "bdh_ee", "schema": "siebel", "name": "orders", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.orders", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "orders"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "orders", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.orders", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.product": {"database": "bdh_ee", "schema": "siebel", "name": "product", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.product", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "product"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "product", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.product", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.postn": {"database": "bdh_ee", "schema": "siebel", "name": "postn", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.postn", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "postn"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "postn", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.postn", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.service_request": {"database": "bdh_ee", "schema": "siebel", "name": "service_request", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.service_request", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "service_request"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "service_request", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.service_request", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.service_request_x": {"database": "bdh_ee", "schema": "siebel", "name": "service_request_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.service_request_x", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "service_request_x"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "service_request_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.service_request_x", "created_at": 1718885162.1035755}, "source.bdh_dbt_models.bdh_ee_siebel.payment_claim": {"database": "bdh_ee", "schema": "siebel", "name": "payment_claim", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.payment_claim", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "payment_claim"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "payment_claim", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.payment_claim", "created_at": 1718885162.1044204}, "source.bdh_dbt_models.bdh_ee_siebel.user": {"database": "bdh_ee", "schema": "siebel", "name": "user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_siebel.user", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_siebel", "user"], "source_name": "bdh_ee_siebel", "source_description": "", "loader": "", "identifier": "user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.siebel.user", "created_at": 1718885162.1044204}, "source.bdh_dbt_models.bdh_ee_singleview.account": {"database": "bdh_ee", "schema": "singleview", "name": "account", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.account", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "account"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "account", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.account", "created_at": 1718885162.1044204}, "source.bdh_dbt_models.bdh_ee_singleview.bill_run": {"database": "bdh_ee", "schema": "singleview", "name": "bill_run", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.bill_run", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "bill_run"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "bill_run", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.bill_run", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.current_account_balance": {"database": "bdh_ee", "schema": "singleview", "name": "current_account_balance", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.current_account_balance", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "current_account_balance"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "current_account_balance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.current_account_balance", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.customer_node_type": {"database": "bdh_ee", "schema": "singleview", "name": "customer_node_type", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.customer_node_type", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "customer_node_type"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "customer_node_type", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.customer_node_type", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.customer_query": {"database": "bdh_ee", "schema": "singleview", "name": "customer_query", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.customer_query", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "customer_query"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "customer_query", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.customer_query", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.invoice_payments_history": {"database": "bdh_ee", "schema": "singleview", "name": "invoice_payments_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.invoice_payments_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "invoice_payments_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "invoice_payments_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.invoice_payments_history", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_balance": {"database": "bdh_ee", "schema": "singleview", "name": "ora_balance", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_balance", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_balance"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_balance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_balance", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_balance_cdl": {"database": "bdh_ee", "schema": "singleview", "name": "ora_balance_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_balance_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_balance_cdl"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_balance_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_balance_cdl", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute": {"database": "bdh_ee", "schema": "singleview", "name": "ora_dispute", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_dispute"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_dispute", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_dispute", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute_cdl": {"database": "bdh_ee", "schema": "singleview", "name": "ora_dispute_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_dispute_cdl"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_dispute_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_dispute_cdl", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_gl_details": {"database": "bdh_ee", "schema": "singleview", "name": "ora_invoice_gl_details", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_gl_details", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_invoice_gl_details"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_invoice_gl_details", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_invoice_gl_details", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_recur": {"database": "bdh_ee", "schema": "singleview", "name": "ora_invoice_part_recur", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_recur", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_invoice_part_recur"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_invoice_part_recur", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_invoice_part_recur", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_usage": {"database": "bdh_ee", "schema": "singleview", "name": "ora_invoice_part_usage", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_usage", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_invoice_part_usage"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_invoice_part_usage", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_invoice_part_usage", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_product_serv": {"database": "bdh_ee", "schema": "singleview", "name": "ora_invoice_product_serv", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_product_serv", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_invoice_product_serv"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_invoice_product_serv", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_invoice_product_serv", "created_at": 1718885162.1055322}, "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_translate": {"database": "bdh_ee", "schema": "singleview", "name": "ora_invoice_translate", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_translate", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "ora_invoice_translate"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "ora_invoice_translate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.ora_invoice_translate", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.payments_history": {"database": "bdh_ee", "schema": "singleview", "name": "payments_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.payments_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "payments_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "payments_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.payments_history", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.product_history": {"database": "bdh_ee", "schema": "singleview", "name": "product_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.product_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "product_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.product_history", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.product_instance_history": {"database": "bdh_ee", "schema": "singleview", "name": "product_instance_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.product_instance_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "product_instance_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "product_instance_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.product_instance_history", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.reference_code": {"database": "bdh_ee", "schema": "singleview", "name": "reference_code", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.reference_code", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "reference_code"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "reference_code", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.reference_code", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.schedule": {"database": "bdh_ee", "schema": "singleview", "name": "schedule", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.schedule", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "schedule"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "schedule", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.schedule", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.service_da_array": {"database": "bdh_ee", "schema": "singleview", "name": "service_da_array", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.service_da_array", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "service_da_array"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "service_da_array", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.service_da_array", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.service_history": {"database": "bdh_ee", "schema": "singleview", "name": "service_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.service_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "service_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "service_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.service_history", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.sv_invoice": {"database": "bdh_ee", "schema": "singleview", "name": "sv_invoice", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.sv_invoice", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "sv_invoice"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "sv_invoice", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.sv_invoice", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.tariff_history": {"database": "bdh_ee", "schema": "singleview", "name": "tariff_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.tariff_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "tariff_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "tariff_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.tariff_history", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_ee_singleview.treatment_history": {"database": "bdh_ee", "schema": "singleview", "name": "treatment_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_ee\\singleview.yml", "original_file_path": "models\\sources\\bdh_ee\\singleview.yml", "unique_id": "source.bdh_dbt_models.bdh_ee_singleview.treatment_history", "fqn": ["bdh_dbt_models", "sources", "bdh_ee", "bdh_ee_singleview", "treatment_history"], "source_name": "bdh_ee_singleview", "source_description": "", "loader": "", "identifier": "treatment_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_ee.singleview.treatment_history", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_lt_sales_tool.bl_legal_check_exceptions": {"database": "bdh_lt", "schema": "sales_tool", "name": "bl_legal_check_exceptions", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.bl_legal_check_exceptions", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "bl_legal_check_exceptions"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "bl_legal_check_exceptions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.bl_legal_check_exceptions", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_lt_sales_tool.contract_general_params": {"database": "bdh_lt", "schema": "sales_tool", "name": "contract_general_params", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.contract_general_params", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "contract_general_params"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "contract_general_params", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.contract_general_params", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_lt_sales_tool.contract_vat_reverse_charge": {"database": "bdh_lt", "schema": "sales_tool", "name": "contract_vat_reverse_charge", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.contract_vat_reverse_charge", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "contract_vat_reverse_charge"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "contract_vat_reverse_charge", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.contract_vat_reverse_charge", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_business_log": {"database": "bdh_lt", "schema": "sales_tool", "name": "credit_check_business_log", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_business_log", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "credit_check_business_log"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "credit_check_business_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.credit_check_business_log", "created_at": 1718885162.1065283}, "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_person_log": {"database": "bdh_lt", "schema": "sales_tool", "name": "credit_check_person_log", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_person_log", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "credit_check_person_log"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "credit_check_person_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.credit_check_person_log", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai": {"database": "bdh_lt", "schema": "sales_tool", "name": "darbuotojai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "darbuotojai"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "darbuotojai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.darbuotojai", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai_subgrupese": {"database": "bdh_lt", "schema": "sales_tool", "name": "darbuotojai_subgrupese", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai_subgrupese", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "darbuotojai_subgrupese"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "darbuotojai_subgrupese", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.darbuotojai_subgrupese", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.documents": {"database": "bdh_lt", "schema": "sales_tool", "name": "documents", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.documents", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "documents"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "documents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.documents", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.document_type": {"database": "bdh_lt", "schema": "sales_tool", "name": "document_type", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.document_type", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "document_type"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "document_type", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.document_type", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.imsi": {"database": "bdh_lt", "schema": "sales_tool", "name": "imsi", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.imsi", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "imsi"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "imsi", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.imsi", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_order_queue": {"database": "bdh_lt", "schema": "sales_tool", "name": "macpoc_order_queue", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_order_queue", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "macpoc_order_queue"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "macpoc_order_queue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.macpoc_order_queue", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_vasmap": {"database": "bdh_lt", "schema": "sales_tool", "name": "macpoc_vasmap", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_vasmap", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "macpoc_vasmap"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "macpoc_vasmap", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.macpoc_vasmap", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_barcodes": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_barcodes", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_barcodes", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_barcodes"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_barcodes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_barcodes", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_deleted": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp_deleted", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_deleted", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp_deleted"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_deleted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp_deleted", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_history": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_history", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp_history"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp_history", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp_po_pr", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp_po_pr"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_po_pr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp_po_pr", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr_history": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp_po_pr_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr_history", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp_po_pr_history"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_po_pr_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp_po_pr_history", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_pr_po": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp_pr_po", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_pr_po", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp_pr_po"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_pr_po", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp_pr_po", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_winback": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_mnp_winback", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_winback", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_mnp_winback"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_mnp_winback", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_mnp_winback", "created_at": 1718885162.1075375}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tm": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_tm", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tm", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_tm"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_tm", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_tm", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tp": {"database": "bdh_lt", "schema": "sales_tool", "name": "mjs_tp", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tp", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mjs_tp"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mjs_tp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mjs_tp", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mob_interneto_sutartys": {"database": "bdh_lt", "schema": "sales_tool", "name": "mob_interneto_sutartys", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mob_interneto_sutartys", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mob_interneto_sutartys"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mob_interneto_sutartys", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mob_interneto_sutartys", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_change": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai_change", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_change", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai_change"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_change", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai_change", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_config": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai_package_config", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_config", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai_package_config"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_package_config", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai_package_config", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_map": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai_package_map", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_map", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai_package_map"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_package_map", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai_package_map", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_services": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai_services", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_services", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai_services"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_services", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai_services", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai_tariff", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai_tariff"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_tariff", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai_tariff", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff_all": {"database": "bdh_lt", "schema": "sales_tool", "name": "mokejimo_planai_tariff_all", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff_all", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mokejimo_planai_tariff_all"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mokejimo_planai_tariff_all", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mokejimo_planai_tariff_all", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mp_promotion_map": {"database": "bdh_lt", "schema": "sales_tool", "name": "mp_promotion_map", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mp_promotion_map", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mp_promotion_map"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mp_promotion_map", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mp_promotion_map", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.mw_vas": {"database": "bdh_lt", "schema": "sales_tool", "name": "mw_vas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.mw_vas", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "mw_vas"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "mw_vas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.mw_vas", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.package_codes": {"database": "bdh_lt", "schema": "sales_tool", "name": "package_codes", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.package_codes", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "package_codes"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "package_codes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.package_codes", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.priedai": {"database": "bdh_lt", "schema": "sales_tool", "name": "priedai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.priedai", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "priedai"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "priedai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.priedai", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_1": {"database": "bdh_lt", "schema": "sales_tool", "name": "priedai_1", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_1", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "priedai_1"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "priedai_1", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.priedai_1", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_2": {"database": "bdh_lt", "schema": "sales_tool", "name": "priedai_2", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_2", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "priedai_2"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "priedai_2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.priedai_2", "created_at": 1718885162.1085374}, "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_3": {"database": "bdh_lt", "schema": "sales_tool", "name": "priedai_3", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_3", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "priedai_3"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "priedai_3", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.priedai_3", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_4": {"database": "bdh_lt", "schema": "sales_tool", "name": "priedai_4", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_4", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "priedai_4"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "priedai_4", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.priedai_4", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_5": {"database": "bdh_lt", "schema": "sales_tool", "name": "priedai_5", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_5", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "priedai_5"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "priedai_5", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.priedai_5", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.promotions": {"database": "bdh_lt", "schema": "sales_tool", "name": "promotions", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.promotions", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "promotions"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "promotions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.promotions", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.s12_current_services": {"database": "bdh_lt", "schema": "sales_tool", "name": "s12_current_services", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.s12_current_services", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "s12_current_services"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "s12_current_services", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.s12_current_services", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn": {"database": "bdh_lt", "schema": "sales_tool", "name": "s12_msisdn", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "s12_msisdn"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "s12_msisdn", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.s12_msisdn", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn_mokestis": {"database": "bdh_lt", "schema": "sales_tool", "name": "s12_msisdn_mokestis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn_mokestis", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "s12_msisdn_mokestis"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "s12_msisdn_mokestis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.s12_msisdn_mokestis", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.s12_paslaugos": {"database": "bdh_lt", "schema": "sales_tool", "name": "s12_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.s12_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "s12_paslaugos"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "s12_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.s12_paslaugos", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai": {"database": "bdh_lt", "schema": "sales_tool", "name": "s12_priedai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "s12_priedai"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "s12_priedai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.s12_priedai", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai_status_history": {"database": "bdh_lt", "schema": "sales_tool", "name": "s12_priedai_status_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai_status_history", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "s12_priedai_status_history"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "s12_priedai_status_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.s12_priedai_status_history", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.sale_channel": {"database": "bdh_lt", "schema": "sales_tool", "name": "sale_channel", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sale_channel", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sale_channel"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sale_channel", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sale_channel", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.sale_records": {"database": "bdh_lt", "schema": "sales_tool", "name": "sale_records", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sale_records", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sale_records"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sale_records", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sale_records", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.service_promotion_map": {"database": "bdh_lt", "schema": "sales_tool", "name": "service_promotion_map", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.service_promotion_map", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "service_promotion_map"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "service_promotion_map", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.service_promotion_map", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.st_buckets": {"database": "bdh_lt", "schema": "sales_tool", "name": "st_buckets", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.st_buckets", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "st_buckets"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "st_buckets", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.st_buckets", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.subgrupes": {"database": "bdh_lt", "schema": "sales_tool", "name": "subgrupes", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.subgrupes", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "subgrupes"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "subgrupes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.subgrupes", "created_at": 1718885162.1095371}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_akcijos_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_akcijos_paslaugos"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_akcijos_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_akcijos_paslaugos", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_akcijos_paslaugos_tariff", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_akcijos_paslaugos_tariff"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_akcijos_paslaugos_tariff", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_akcijos_paslaugos_tariff", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_akcijos_paslaugos_tariff_attributes", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_akcijos_paslaugos_tariff_attributes"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_akcijos_paslaugos_tariff_attributes", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_akcijos_paslaugos_tariff_attributes", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes_map": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_akcijos_paslaugos_tariff_attributes_map", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes_map", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_akcijos_paslaugos_tariff_attributes_map"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_akcijos_paslaugos_tariff_attributes_map", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_akcijos_paslaugos_tariff_attributes_map", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kliento_tipas": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_kliento_tipas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kliento_tipas", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_kliento_tipas"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_kliento_tipas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_kliento_tipas", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kl_tipai_mok_planai": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_kl_tipai_mok_planai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kl_tipai_mok_planai", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_kl_tipai_mok_planai"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_kl_tipai_mok_planai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_kl_tipai_mok_planai", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mkl_akcijos_paslaugos": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_mkl_akcijos_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mkl_akcijos_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_mkl_akcijos_paslaugos"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_mkl_akcijos_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_mkl_akcijos_paslaugos", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mokestis": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_mokestis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mokestis", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_mokestis"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_mokestis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_mokestis", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mok_planai_kl_tipai_laikotarpiai": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_mok_planai_kl_tipai_laikotarpiai", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mok_planai_kl_tipai_laikotarpiai", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_mok_planai_kl_tipai_laikotarpiai"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_mok_planai_kl_tipai_laikotarpiai", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_mok_planai_kl_tipai_laikotarpiai", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nesuderinamos_akcijos_paslaugos": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_nesuderinamos_akcijos_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nesuderinamos_akcijos_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_nesuderinamos_akcijos_paslaugos"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_nesuderinamos_akcijos_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_nesuderinamos_akcijos_paslaugos", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nuolaida_kodas": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_nuolaida_kodas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nuolaida_kodas", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_nuolaida_kodas"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_nuolaida_kodas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_nuolaida_kodas", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_preke": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_preke", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_preke", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_preke"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_preke", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_preke", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_prekiu_pardavimas": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_prekiu_pardavimas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_prekiu_pardavimas", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_prekiu_pardavimas"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_prekiu_pardavimas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_prekiu_pardavimas", "created_at": 1718885162.1105394}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_fizinis": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_fizinis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_fizinis", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_fizinis"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_fizinis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_fizinis", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_history": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_history", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_history", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_history"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_history", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_juridinis": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_juridinis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_juridinis", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_juridinis"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_juridinis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_juridinis", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_sim", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_sim"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_sim", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_akcijos_paslaugos": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_sim_akcijos_paslaugos", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_akcijos_paslaugos", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_sim_akcijos_paslaugos"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim_akcijos_paslaugos", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_sim_akcijos_paslaugos", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_sim_draudimas", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_sim_draudimas"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim_draudimas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_sim_draudimas", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas_log": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_sim_draudimas_log", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas_log", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_sim_draudimas_log"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim_draudimas_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_sim_draudimas_log", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_mokestis": {"database": "bdh_lt", "schema": "sales_tool", "name": "sut_sutartis_sim_mokestis", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\sales_tool.yml", "original_file_path": "models\\sources\\bdh_lt\\sales_tool.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_mokestis", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_sales_tool", "sut_sutartis_sim_mokestis"], "source_name": "bdh_lt_sales_tool", "source_description": "", "loader": "", "identifier": "sut_sutartis_sim_mokestis", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.sales_tool.sut_sutartis_sim_mokestis", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_accounts_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_accounts_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_accounts_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_accounts_cdl", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_accounts_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_accounts_x_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_accounts_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_accounts_x_cdl", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_siebel.v_address_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_address_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_address_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_address_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_address_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_address_cdl", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_siebel.v_address_x_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_address_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_address_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_address_x_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_address_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_address_x_cdl", "created_at": 1718885162.1115375}, "source.bdh_dbt_models.bdh_lt_siebel.v_assets_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_assets_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_assets_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_assets_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_assets_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_assets_x_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_assets_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_assets_x_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_xa_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_assets_xa_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_assets_xa_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_assets_xa_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_billing_profile_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_billing_profile_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_billing_profile_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_billing_profile_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_contact_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_contact_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_contact_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_contact_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_contact_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_contact_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_contact_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_contact_x_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_contact_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_contact_x_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_list_of_values_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_list_of_values_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_list_of_values_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_list_of_values_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_logs_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_logs_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_logs_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_logs_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_logs_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_logs_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_notification_settings_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_notification_settings_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_notification_settings_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_notification_settings_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_order_line_items_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_order_line_items_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_order_line_items_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_order_line_items_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_orders_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_orders_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_orders_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_orders_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_orders_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_orders_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_product_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_product_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_product_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_product_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_product_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_product_cdl", "created_at": 1718885162.112539}, "source.bdh_dbt_models.bdh_lt_siebel.v_user_cdl": {"database": "bdh_lt", "schema": "siebel", "name": "v_user_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_user_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_user_cdl"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_user_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_user_cdl", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_accounts": {"database": "bdh_lt", "schema": "siebel", "name": "v_accounts", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_accounts", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_accounts"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_accounts", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_accounts_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_accounts_x"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_accounts_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_accounts_x", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_address": {"database": "bdh_lt", "schema": "siebel", "name": "v_address", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_address", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_address"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_address", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_address", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_address_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_address_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_address_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_address_x"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_address_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_address_x", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_assets": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_assets", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_assets"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_assets", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_assets", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_assets_x"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_assets_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_assets_x", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa": {"database": "bdh_lt", "schema": "siebel", "name": "v_assets_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_assets_xa"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_assets_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_assets_xa", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile": {"database": "bdh_lt", "schema": "siebel", "name": "v_billing_profile", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_billing_profile"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_billing_profile", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_billing_profile", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_contact": {"database": "bdh_lt", "schema": "siebel", "name": "v_contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_contact", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_contact"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_contact", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x": {"database": "bdh_lt", "schema": "siebel", "name": "v_contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_contact_x"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_contact_x", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values": {"database": "bdh_lt", "schema": "siebel", "name": "v_list_of_values", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_list_of_values"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_list_of_values", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_list_of_values", "created_at": 1718885162.1135383}, "source.bdh_dbt_models.bdh_lt_siebel.v_logs": {"database": "bdh_lt", "schema": "siebel", "name": "v_logs", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_logs", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_logs"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_logs", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings": {"database": "bdh_lt", "schema": "siebel", "name": "v_notification_settings", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_notification_settings"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_notification_settings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_notification_settings", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items": {"database": "bdh_lt", "schema": "siebel", "name": "v_order_line_items", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_order_line_items"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_order_line_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_order_line_items", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lt_siebel.v_orders": {"database": "bdh_lt", "schema": "siebel", "name": "v_orders", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_orders", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_orders"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_orders", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_orders", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lt_siebel.v_product": {"database": "bdh_lt", "schema": "siebel", "name": "v_product", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_product", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_product"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_product", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_product", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lt_siebel.v_user": {"database": "bdh_lt", "schema": "siebel", "name": "v_user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lt_siebel.v_user", "fqn": ["bdh_dbt_models", "sources", "bdh_lt", "bdh_lt_siebel", "v_user"], "source_name": "bdh_lt_siebel", "source_description": "", "loader": "", "identifier": "v_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lt.siebel.v_user", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot": {"database": "bdh_lv", "schema": "test", "name": "dim_lv_binding_products_snapshot", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\postp_data_model.yml", "original_file_path": "models\\sources\\bdh_lv\\postp_data_model.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_postp_dm", "dim_lv_binding_products_snapshot"], "source_name": "bdh_lv_postp_dm", "source_description": "", "loader": "", "identifier": "dim_lv_binding_products_snapshot", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.dim_lv_binding_products_snapshot", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_assets", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\postp_data_model.yml", "original_file_path": "models\\sources\\bdh_lv\\postp_data_model.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_postp_dm", "stg_lv_v_assets"], "source_name": "bdh_lv_postp_dm", "source_description": "", "loader": "", "identifier": "stg_lv_v_assets", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.stg_lv_v_assets", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_assets_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\postp_data_model.yml", "original_file_path": "models\\sources\\bdh_lv\\postp_data_model.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_postp_dm", "stg_lv_v_assets_xa"], "source_name": "bdh_lv_postp_dm", "source_description": "", "loader": "", "identifier": "stg_lv_v_assets_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.stg_lv_v_assets_xa", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_order_line_items", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\postp_data_model.yml", "original_file_path": "models\\sources\\bdh_lv\\postp_data_model.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_postp_dm", "stg_lv_v_order_line_items"], "source_name": "bdh_lv_postp_dm", "source_description": "", "loader": "", "identifier": "stg_lv_v_order_line_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.stg_lv_v_order_line_items", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products": {"database": "bdh_lv", "schema": "test", "name": "stg_lv_v_products", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\postp_data_model.yml", "original_file_path": "models\\sources\\bdh_lv\\postp_data_model.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_postp_dm", "stg_lv_v_products"], "source_name": "bdh_lv_postp_dm", "source_description": "", "loader": "", "identifier": "stg_lv_v_products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.stg_lv_v_products", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_accounts_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_accounts_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_accounts_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_accounts_cdl", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_accounts_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_accounts_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_accounts_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_accounts_x_cdl", "created_at": 1718885162.114538}, "source.bdh_dbt_models.bdh_lv_siebel.v_activities_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_activities_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_activities_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_activities_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_activities_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_activities_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_activities_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_activities_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_activities_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_activities_x_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_audit_item_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_audit_item_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_audit_item_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_audit_item_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_address_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_address_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_address_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_address_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_address_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_address_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_address_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_address_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_address_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_address_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_address_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_address_x_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_assets_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_assets_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_assets_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_assets_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_assets_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_assets_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_assets_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_assets_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_assets_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_assets_x_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_assets_xa_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_assets_xa_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_assets_xa_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_assets_xa_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_billing_profile_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_billing_profile_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_billing_profile_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_billing_profile_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_contact_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_contact_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_contact_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_contact_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_contact_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_contact_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_contact_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_contact_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_contact_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_contact_x_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_list_of_values_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_list_of_values_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_list_of_values_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_list_of_values_cdl", "created_at": 1718885162.1155374}, "source.bdh_dbt_models.bdh_lv_siebel.v_logs_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_logs_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_logs_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_logs_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_logs_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_logs_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_notification_settings_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_notification_settings_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_notification_settings_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_notification_settings_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_notification_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_notification_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_notification_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_notification_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_notification_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_notification_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_order_line_items_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_order_line_items_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_order_line_items_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_order_line_items_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_order_line_items_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_order_line_items_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_order_line_items_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_order_line_items_x_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_orders_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_orders_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_orders_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_orders_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_orders_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_orders_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_order_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_order_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_order_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_order_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_order_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_order_x_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_products_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_products_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_products_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_products_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_products_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_products_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_positions_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_positions_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_positions_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_positions_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_positions_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_positions_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_service_request_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_service_request_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_service_request_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_service_request_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_service_request_x_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_service_request_x_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_service_request_x_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_service_request_x_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.v_user_cdl": {"database": "bdh_lv", "schema": "siebel", "name": "v_user_cdl", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_user_cdl", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_user_cdl"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_user_cdl", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_user_cdl", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_accounts", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_accounts"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_accounts", "created_at": 1718885162.1165373}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_accounts_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_accounts_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_accounts_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_accounts_x", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_address", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_address"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_address", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_address", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_address_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_address_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_address_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_address_x", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_assets", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_assets"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_assets", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_assets", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_assets_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_assets_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_assets_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_assets_x", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_xa": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_assets_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_assets_xa"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_assets_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_assets_xa", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_billing_profile": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_billing_profile", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_billing_profile", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_billing_profile"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_billing_profile", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_billing_profile", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_contact"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_contact", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_contact_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_contact_x", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_list_of_values": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_list_of_values", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_list_of_values", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_list_of_values"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_list_of_values", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_list_of_values", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_logs": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_logs", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_logs", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_logs"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_logs", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_notification", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_notification"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_notification", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_notification", "created_at": 1718885162.117537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification_settings": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_notification_settings", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification_settings", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_notification_settings"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_notification_settings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_notification_settings", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_order_line_items", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_order_line_items"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_order_line_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_order_line_items", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_order_line_items_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_order_line_items_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_order_line_items_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_order_line_items_x", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_orders": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_orders", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_orders", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_orders"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_orders", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_orders", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_order_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_order_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_order_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_order_x", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_products": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_products", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_products", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_products"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_products", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_positions": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_positions", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_positions", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_positions"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_positions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_positions", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_service_request", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_service_request"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_service_request", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_service_request", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request_x": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_service_request_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_service_request_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_service_request_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_service_request_x", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.lv_v_user": {"database": "bdh_lv", "schema": "siebel", "name": "lv_v_user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.lv_v_user", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "lv_v_user"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "lv_v_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.lv_v_user", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.v_accounts": {"database": "bdh_lv", "schema": "siebel", "name": "v_accounts", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_accounts", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_accounts"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_accounts", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_accounts_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_accounts_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_accounts_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_accounts_x", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.v_activities": {"database": "bdh_lv", "schema": "siebel", "name": "v_activities", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_activities", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_activities"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_activities", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_activities", "created_at": 1718885162.118537}, "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_activities_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_activities_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_activities_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_activities_x", "created_at": 1718885162.1195369}, "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item": {"database": "bdh_lv", "schema": "siebel", "name": "v_audit_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_audit_item"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_audit_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_audit_item", "created_at": 1718885162.1195369}, "source.bdh_dbt_models.bdh_lv_siebel.v_address": {"database": "bdh_lv", "schema": "siebel", "name": "v_address", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_address", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_address"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_address", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_address", "created_at": 1718885162.1195369}, "source.bdh_dbt_models.bdh_lv_siebel.v_address_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_address_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_address_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_address_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_address_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_address_x", "created_at": 1718885162.1195369}, "source.bdh_dbt_models.bdh_lv_siebel.v_assets": {"database": "bdh_lv", "schema": "siebel", "name": "v_assets", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_assets", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_assets"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_assets", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_assets", "created_at": 1718885162.1205423}, "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_assets_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_assets_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_assets_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_assets_x", "created_at": 1718885162.1205423}, "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa": {"database": "bdh_lv", "schema": "siebel", "name": "v_assets_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_assets_xa"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_assets_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_assets_xa", "created_at": 1718885162.1205423}, "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile": {"database": "bdh_lv", "schema": "siebel", "name": "v_billing_profile", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_billing_profile"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_billing_profile", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_billing_profile", "created_at": 1718885162.1205423}, "source.bdh_dbt_models.bdh_lv_siebel.v_contact": {"database": "bdh_lv", "schema": "siebel", "name": "v_contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_contact", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_contact"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_contact", "created_at": 1718885162.1205423}, "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_contact_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_contact_x", "created_at": 1718885162.1205423}, "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values": {"database": "bdh_lv", "schema": "siebel", "name": "v_list_of_values", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_list_of_values"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_list_of_values", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_list_of_values", "created_at": 1718885162.1215386}, "source.bdh_dbt_models.bdh_lv_siebel.v_logs": {"database": "bdh_lv", "schema": "siebel", "name": "v_logs", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_logs", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_logs"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_logs", "created_at": 1718885162.1215386}, "source.bdh_dbt_models.bdh_lv_siebel.v_notification": {"database": "bdh_lv", "schema": "siebel", "name": "v_notification", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_notification", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_notification"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_notification", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_notification", "created_at": 1718885162.1215386}, "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings": {"database": "bdh_lv", "schema": "siebel", "name": "v_notification_settings", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_notification_settings"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_notification_settings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_notification_settings", "created_at": 1718885162.1215386}, "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items": {"database": "bdh_lv", "schema": "siebel", "name": "v_order_line_items", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_order_line_items"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_order_line_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_order_line_items", "created_at": 1718885162.1215386}, "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_order_line_items_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_order_line_items_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_order_line_items_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_order_line_items_x", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_orders": {"database": "bdh_lv", "schema": "siebel", "name": "v_orders", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_orders", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_orders"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_orders", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_orders", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_order_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_order_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_order_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_order_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_order_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_order_x", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_products": {"database": "bdh_lv", "schema": "siebel", "name": "v_products", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_products", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_products"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_products", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_positions": {"database": "bdh_lv", "schema": "siebel", "name": "v_positions", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_positions", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_positions"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_positions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_positions", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_service_request": {"database": "bdh_lv", "schema": "siebel", "name": "v_service_request", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_service_request", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_service_request"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_service_request", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_service_request", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x": {"database": "bdh_lv", "schema": "siebel", "name": "v_service_request_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_service_request_x"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_service_request_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_service_request_x", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_lv_siebel.v_user": {"database": "bdh_lv", "schema": "siebel", "name": "v_user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_lv_siebel.v_user", "fqn": ["bdh_dbt_models", "sources", "bdh_lv", "bdh_lv_siebel", "v_user"], "source_name": "bdh_lv_siebel", "source_description": "", "loader": "", "identifier": "v_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.siebel.v_user", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_csv_file": {"database": "bdh_raw", "schema": "demo_source", "name": "raw_demo_csv_file", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw\\demo_source.yml", "original_file_path": "models\\sources\\bdh_raw\\demo_source.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_csv_file", "fqn": ["bdh_dbt_models", "sources", "bdh_raw", "bdh_raw_demo_source", "raw_demo_csv_file"], "source_name": "bdh_raw_demo_source", "source_description": "", "loader": "", "identifier": "raw_demo_csv_file", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for table raw_demo_csv_file.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "col_1": {"name": "col_1", "description": "Description for col_1", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "col_2": {"name": "col_2", "description": "Description for col_2", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw.demo_source.raw_demo_csv_file", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_json_file": {"database": "bdh_raw", "schema": "demo_source", "name": "raw_demo_json_file", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw\\demo_source.yml", "original_file_path": "models\\sources\\bdh_raw\\demo_source.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_json_file", "fqn": ["bdh_dbt_models", "sources", "bdh_raw", "bdh_raw_demo_source", "raw_demo_json_file"], "source_name": "bdh_raw_demo_source", "source_description": "", "loader": "", "identifier": "raw_demo_json_file", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw.demo_source.raw_demo_json_file", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_accounts_s_org_ext", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_accounts_s_org_ext"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_accounts_s_org_ext", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_stat_cd,": {"name": "cust_stat_cd,", "description": "Description for cust_stat_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_type_cd,": {"name": "accnt_type_cd,", "description": "Description for accnt_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alt_email_addr,": {"name": "alt_email_addr,", "description": "Description for alt_email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eai_sync_dt,": {"name": "eai_sync_dt,", "description": "Description for eai_sync_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "good_standing_flg,": {"name": "good_standing_flg,", "description": "Description for good_standing_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hshld_size,": {"name": "hshld_size,", "description": "Description for hshld_size,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_updated,": {"name": "last_updated,", "description": "Description for last_updated,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "main_ph_num,": {"name": "main_ph_num,", "description": "Description for main_ph_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bad_debt,": {"name": "x_bad_debt,", "description": "Description for x_bad_debt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_end_dt,": {"name": "cust_end_dt,", "description": "Description for cust_end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_csr_edit,": {"name": "x_csr_edit,", "description": "Description for x_csr_edit,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_cust_source,": {"name": "x_cust_source,", "description": "Description for x_cust_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_disable_legal_chk,": {"name": "x_disable_legal_chk,", "description": "Description for x_disable_legal_chk,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_good_standing_oveeride,": {"name": "x_good_standing_oveeride,", "description": "Description for x_good_standing_oveeride,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_leg_num,": {"name": "x_leg_num,", "description": "Description for x_leg_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_loyalty_cd,": {"name": "x_loyalty_cd,", "description": "Description for x_loyalty_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_soc_sec_num,": {"name": "x_soc_sec_num,", "description": "Description for x_soc_sec_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_reason_vat_exemption,": {"name": "x_reason_vat_exemption,", "description": "Description for x_reason_vat_exemption,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_ans,": {"name": "x_sec_ans,", "description": "Description for x_sec_ans,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_ques,": {"name": "x_sec_ques,", "description": "Description for x_sec_ques,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_vat_number,": {"name": "x_vat_number,", "description": "Description for x_vat_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ou_type_cd,": {"name": "ou_type_cd,", "description": "Description for ou_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_since_dt,": {"name": "cust_since_dt,", "description": "Description for cust_since_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_addr_id,": {"name": "pr_addr_id,", "description": "Description for pr_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_bl_addr_id,": {"name": "pr_bl_addr_id,", "description": "Description for pr_bl_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_con_id,": {"name": "pr_con_id,", "description": "Description for pr_con_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_ship_addr_id,": {"name": "pr_ship_addr_id,", "description": "Description for pr_ship_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_chk,": {"name": "x_legal_chk,", "description": "Description for x_legal_chk,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "curr_pri_lst_id,": {"name": "curr_pri_lst_id,", "description": "Description for curr_pri_lst_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "master_ou_id,": {"name": "master_ou_id,", "description": "Description for master_ou_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ou_num,": {"name": "ou_num,", "description": "Description for ou_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_cust,": {"name": "x_sec_cust,", "description": "Description for x_sec_cust,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_postn_id,": {"name": "pr_postn_id,", "description": "Description for pr_postn_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_ou_id,": {"name": "par_ou_id,", "description": "Description for par_ou_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_postpaid_seg_cd,": {"name": "x_primary_postpaid_seg_cd,", "description": "Description for x_primary_postpaid_seg_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_winback_case,": {"name": "active_winback_case,", "description": "Description for active_winback_case,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "curr_cond,": {"name": "curr_cond,", "description": "Description for curr_cond,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "manager,": {"name": "manager,", "description": "Description for manager,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_class,": {"name": "tax_class,", "description": "Description for tax_class,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_accounts_s_org_ext", "created_at": 1718885162.122047}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext_x": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_accounts_s_org_ext_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_accounts_s_org_ext_x"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_accounts_s_org_ext_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_35,": {"name": "attrib_35,", "description": "Description for attrib_35,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_auto_crd_lm_inc_flg,": {"name": "x_auto_crd_lm_inc_flg,", "description": "Description for x_auto_crd_lm_inc_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_55,": {"name": "attrib_55,", "description": "Description for attrib_55,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_07,": {"name": "attrib_07,", "description": "Description for attrib_07,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_brand_cd,": {"name": "x_brand_cd,", "description": "Description for x_brand_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_65,": {"name": "attrib_65,", "description": "Description for attrib_65,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_credit_class_cd,": {"name": "x_credit_class_cd,", "description": "Description for x_credit_class_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_credit_limit_cd,": {"name": "x_credit_limit_cd,", "description": "Description for x_credit_limit_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_51,": {"name": "attrib_51,", "description": "Description for attrib_51,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_49,": {"name": "attrib_49,", "description": "Description for attrib_49,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_09,": {"name": "attrib_09,", "description": "Description for attrib_09,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_vip_status_flg,": {"name": "x_vip_status_flg,", "description": "Description for x_vip_status_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id,": {"name": "par_row_id,", "description": "Description for par_row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_accounts_s_org_ext_x", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_activities_s_evt_act", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_activities_s_evt_act"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_activities_s_evt_act", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_tasks,": {"name": "x_tasks,", "description": "Description for x_tasks,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sub_type,": {"name": "x_sub_type,", "description": "Description for x_sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sr_invoice_num,": {"name": "x_sr_invoice_num,", "description": "Description for x_sr_invoice_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_session_id,": {"name": "x_session_id,", "description": "Description for x_session_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_screen_popup,": {"name": "x_screen_popup,", "description": "Description for x_screen_popup,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_prod_area,": {"name": "x_prod_area,", "description": "Description for x_prod_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ivr_done_time,": {"name": "x_ivr_done_time,", "description": "Description for x_ivr_done_time,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_intensions,": {"name": "x_intensions,", "description": "Description for x_intensions,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_input_parameters,": {"name": "x_input_parameters,", "description": "Description for x_input_parameters,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_message,": {"name": "x_error_message,", "description": "Description for x_error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_code,": {"name": "x_error_code,", "description": "Description for x_error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ea_doc_type,": {"name": "x_ea_doc_type,", "description": "Description for x_ea_doc_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ea_doc_seg,": {"name": "x_ea_doc_seg,", "description": "Description for x_ea_doc_seg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_completed_by,": {"name": "x_completed_by,", "description": "Description for x_completed_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_app_country,": {"name": "x_app_country,", "description": "Description for x_app_country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_amount,": {"name": "x_amount,", "description": "Description for x_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todo_plan_start_dt,": {"name": "todo_plan_start_dt,", "description": "Description for todo_plan_start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todo_due_dt,": {"name": "todo_due_dt,", "description": "Description for todo_due_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todo_cd,": {"name": "todo_cd,", "description": "Description for todo_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todo_actl_start_dt,": {"name": "todo_actl_start_dt,", "description": "Description for todo_actl_start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "todo_actl_end_dt,": {"name": "todo_actl_end_dt,", "description": "Description for todo_actl_end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtype_cd,": {"name": "subtype_cd,", "description": "Description for subtype_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sra_resolution_cd,": {"name": "sra_resolution_cd,", "description": "Description for sra_resolution_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prev_act_id,": {"name": "prev_act_id,", "description": "Description for prev_act_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_evt_id,": {"name": "par_evt_id,", "description": "Description for par_evt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "evt_stat_cd,": {"name": "evt_stat_cd,", "description": "Description for evt_stat_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "evt_priority_cd,": {"name": "evt_priority_cd,", "description": "Description for evt_priority_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_to_line,": {"name": "email_to_line,", "description": "Description for email_to_line,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_sndr_addr,": {"name": "email_sndr_addr,", "description": "Description for email_sndr_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billable_flg,": {"name": "billable_flg,", "description": "Description for billable_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "appt_rept_flg,": {"name": "appt_rept_flg,", "description": "Description for appt_rept_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alarm_flag,": {"name": "alarm_flag,", "description": "Description for alarm_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_ou_id,": {"name": "owner_ou_id,", "description": "Description for owner_ou_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_per_id,": {"name": "owner_per_id,", "description": "Description for owner_per_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_postn_id,": {"name": "owner_postn_id,", "description": "Description for owner_postn_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_ou_addr_id,": {"name": "target_ou_addr_id,", "description": "Description for target_ou_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_ou_id,": {"name": "target_ou_id,", "description": "Description for target_ou_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_per_addr_id,": {"name": "target_per_addr_id,", "description": "Description for target_per_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_per_id,": {"name": "target_per_id,", "description": "Description for target_per_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_created_by_grp_id,": {"name": "x_created_by_grp_id,", "description": "Description for x_created_by_grp_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sr_committed_dt,": {"name": "x_sr_committed_dt,", "description": "Description for x_sr_committed_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_id,": {"name": "sr_id,", "description": "Description for sr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offer_response,": {"name": "offer_response,", "description": "Description for offer_response,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id,": {"name": "campaign_id,", "description": "Description for campaign_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event,": {"name": "event,", "description": "Description for event,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_activities_s_evt_act", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act_x": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_activities_s_evt_act_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_activities_s_evt_act_x"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_activities_s_evt_act_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_,": {"name": "comment_,", "description": "Description for comment_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_activities_s_evt_act_x", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_s_addr_per": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_addresses_s_addr_per", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_s_addr_per", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_addresses_s_addr_per"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_addresses_s_addr_per", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_line_4,": {"name": "addr_line_4,", "description": "Description for addr_line_4,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "premise_flg,": {"name": "premise_flg,", "description": "Description for premise_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_dt,": {"name": "start_dt,", "description": "Description for start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_int_source,": {"name": "x_int_source,", "description": "Description for x_int_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_coord_qlty,": {"name": "x_coord_qlty,", "description": "Description for x_coord_qlty,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_num,": {"name": "addr_num,", "description": "Description for addr_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_municipality,": {"name": "x_municipality,", "description": "Description for x_municipality,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_cong_code,": {"name": "x_cong_code,", "description": "Description for x_cong_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr,": {"name": "addr,", "description": "Description for addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_system_source,": {"name": "x_system_source,", "description": "Description for x_system_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_congregation,": {"name": "x_congregation,", "description": "Description for x_congregation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_addr_qlty,": {"name": "x_addr_qlty,", "description": "Description for x_addr_qlty,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_apart_num,": {"name": "x_apart_num,", "description": "Description for x_apart_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_line_5,": {"name": "addr_line_5,", "description": "Description for addr_line_5,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "longitude,": {"name": "longitude,", "description": "Description for longitude,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_real_estate,": {"name": "x_real_estate,", "description": "Description for x_real_estate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_county_code,": {"name": "x_county_code,", "description": "Description for x_county_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city,": {"name": "city,", "description": "Description for city,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "zipcode,": {"name": "zipcode,", "description": "Description for zipcode,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration2_id,": {"name": "integration2_id,", "description": "Description for integration2_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_street_letter,": {"name": "x_street_letter,", "description": "Description for x_street_letter,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latitude,": {"name": "latitude,", "description": "Description for latitude,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country,": {"name": "country,", "description": "Description for country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "county,": {"name": "county,", "description": "Description for county,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_addr_id,": {"name": "par_addr_id,", "description": "Description for par_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_mun_code,": {"name": "x_mun_code,", "description": "Description for x_mun_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_dt,": {"name": "end_dt,", "description": "Description for end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_type_cd,": {"name": "addr_type_cd,", "description": "Description for addr_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_name,": {"name": "addr_name,", "description": "Description for addr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_addresses_s_addr_per", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_intersection_s_con_addr": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_addresses_intersection_s_con_addr", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_intersection_s_con_addr", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_addresses_intersection_s_con_addr"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_addresses_intersection_s_con_addr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_flg,": {"name": "active_flg,", "description": "Description for active_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_per_id,": {"name": "addr_per_id,", "description": "Description for addr_per_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_type_cd,": {"name": "addr_type_cd,", "description": "Description for addr_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_addresses_intersection_s_con_addr", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_assets_s_asset", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_assets_s_asset"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_assets_s_asset", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_num,": {"name": "asset_num,", "description": "Description for asset_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_dt,": {"name": "end_dt,", "description": "Description for end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_activation_dt,": {"name": "x_activation_dt,", "description": "Description for x_activation_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_app_country,": {"name": "x_app_country,", "description": "Description for x_app_country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_asset_details,": {"name": "x_asset_details,", "description": "Description for x_asset_details,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_brand_cd,": {"name": "x_brand_cd,", "description": "Description for x_brand_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_company_card,": {"name": "x_company_card,", "description": "Description for x_company_card,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_dual_card,": {"name": "x_dual_card,", "description": "Description for x_dual_card,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pending_order,": {"name": "x_pending_order,", "description": "Description for x_pending_order,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disc_date,": {"name": "x_planned_disc_date,", "description": "Description for x_planned_disc_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_price_plan_code,": {"name": "x_price_plan_code,", "description": "Description for x_price_plan_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attr_name,": {"name": "x_primary_attr_name,", "description": "Description for x_primary_attr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attr_value,": {"name": "x_primary_attr_value,", "description": "Description for x_primary_attr_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_t2_product_end_date,": {"name": "x_t2_product_end_date,", "description": "Description for x_t2_product_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_reactivation_date,": {"name": "x_reactivation_date,", "description": "Description for x_reactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_version_dt,": {"name": "x_version_dt,", "description": "Description for x_version_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uom_cd,": {"name": "uom_cd,", "description": "Description for uom_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_allow_port_out,": {"name": "x_allow_port_out,", "description": "Description for x_allow_port_out,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_call_specification,": {"name": "x_call_specification,", "description": "Description for x_call_specification,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notice_period,": {"name": "x_notice_period,", "description": "Description for x_notice_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notice_period_end_date,": {"name": "x_notice_period_end_date,", "description": "Description for x_notice_period_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_package_code,": {"name": "x_package_code,", "description": "Description for x_package_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pin,": {"name": "x_pin,", "description": "Description for x_pin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disc_reason,": {"name": "x_planned_disc_reason,", "description": "Description for x_planned_disc_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_price_plan_date,": {"name": "x_price_plan_date,", "description": "Description for x_price_plan_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_puk1,": {"name": "x_puk1,", "description": "Description for x_puk1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_regret_end_dt,": {"name": "x_regret_end_dt,", "description": "Description for x_regret_end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_service_sub_type,": {"name": "x_service_sub_type,", "description": "Description for x_service_sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_wsc_admin_flg,": {"name": "x_wsc_admin_flg,", "description": "Description for x_wsc_admin_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "install_dt,": {"name": "install_dt,", "description": "Description for install_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "purch_dt,": {"name": "purch_dt,", "description": "Description for purch_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registered_dt,": {"name": "registered_dt,", "description": "Description for registered_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_dt,": {"name": "start_dt,", "description": "Description for start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_entitlement_id,": {"name": "x_entitlement_id,", "description": "Description for x_entitlement_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cur_agree_id,": {"name": "cur_agree_id,", "description": "Description for cur_agree_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_id,": {"name": "prod_id,", "description": "Description for prod_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_accnt_id,": {"name": "owner_accnt_id,", "description": "Description for owner_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_accnt_id,": {"name": "bill_accnt_id,", "description": "Description for bill_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serv_acct_id,": {"name": "serv_acct_id,", "description": "Description for serv_acct_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_profile_id,": {"name": "bill_profile_id,", "description": "Description for bill_profile_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_asset_id,": {"name": "par_asset_id,", "description": "Description for par_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_asset_id,": {"name": "root_asset_id,", "description": "Description for root_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_con_id,": {"name": "pr_con_id,", "description": "Description for pr_con_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ou_addr_id,": {"name": "ou_addr_id,", "description": "Description for ou_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_con_id,": {"name": "owner_con_id,", "description": "Description for owner_con_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_id,": {"name": "promotion_id,", "description": "Description for promotion_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "password,": {"name": "password,", "description": "Description for password,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pkg_code,": {"name": "x_pkg_code,", "description": "Description for x_pkg_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_promotion_start_date,": {"name": "x_promotion_start_date,", "description": "Description for x_promotion_start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_assets_s_asset", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset_x": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_assets_s_asset_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_assets_s_asset_x"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_assets_s_asset_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_32,": {"name": "attrib_32,", "description": "Description for attrib_32,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bind_period,": {"name": "x_bind_period,", "description": "Description for x_bind_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_31,": {"name": "attrib_31,", "description": "Description for attrib_31,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_flg,": {"name": "x_invoice_flg,", "description": "Description for x_invoice_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_01,": {"name": "attrib_01,", "description": "Description for attrib_01,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_09,": {"name": "attrib_09,", "description": "Description for attrib_09,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ref,": {"name": "x_ref,", "description": "Description for x_ref,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_07,": {"name": "attrib_07,", "description": "Description for attrib_07,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_34,": {"name": "attrib_34,", "description": "Description for attrib_34,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_03,": {"name": "attrib_03,", "description": "Description for attrib_03,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_27,": {"name": "attrib_27,", "description": "Description for attrib_27,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_26,": {"name": "attrib_26,", "description": "Description for attrib_26,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_assets_s_asset_x", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_asset_attributes_s_asset_xa": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_asset_attributes_s_asset_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_asset_attributes_s_asset_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_asset_attributes_s_asset_xa"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_asset_attributes_s_asset_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attr_name,": {"name": "attr_name,", "description": "Description for attr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "display_name,": {"name": "display_name,", "description": "Description for display_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hidden_flg,": {"name": "hidden_flg,", "description": "Description for hidden_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_type_cd,": {"name": "data_type_cd,", "description": "Description for data_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "char_val,": {"name": "char_val,", "description": "Description for char_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_val,": {"name": "num_val,", "description": "Description for num_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_val,": {"name": "date_val,", "description": "Description for date_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attr_id,": {"name": "attr_id,", "description": "Description for attr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_asset_attributes_s_asset_xa", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_audit_trail_s_audit_item": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_audit_trail_s_audit_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_audit_trail_s_audit_item", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_audit_trail_s_audit_item"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_audit_trail_s_audit_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "buscomp_name,": {"name": "buscomp_name,", "description": "Description for buscomp_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operation_cd,": {"name": "operation_cd,", "description": "Description for operation_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "record_id,": {"name": "record_id,", "description": "Description for record_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id,": {"name": "user_id,", "description": "Description for user_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audit_log,": {"name": "audit_log,", "description": "Description for audit_log,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operation_dt,": {"name": "operation_dt,", "description": "Description for operation_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bc_base_tbl,": {"name": "bc_base_tbl,", "description": "Description for bc_base_tbl,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "child_bc_base_tbl,": {"name": "child_bc_base_tbl,", "description": "Description for child_bc_base_tbl,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "child_bc_name,": {"name": "child_bc_name,", "description": "Description for child_bc_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "child_record_id,": {"name": "child_record_id,", "description": "Description for child_record_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "field_name,": {"name": "field_name,", "description": "Description for field_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_num,": {"name": "group_num,", "description": "Description for group_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_name,": {"name": "link_name,", "description": "Description for link_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_val,": {"name": "new_val,", "description": "Description for new_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "node_name,": {"name": "node_name,", "description": "Description for node_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "old_val,": {"name": "old_val,", "description": "Description for old_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "src_dest_id,": {"name": "src_dest_id,", "description": "Description for src_dest_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tbl_name,": {"name": "tbl_name,", "description": "Description for tbl_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tbl_record_id,": {"name": "tbl_record_id,", "description": "Description for tbl_record_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_audit_trail_s_audit_item", "created_at": 1718885162.1230571}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_billing_profile_s_inv_prof": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_billing_profile_s_inv_prof", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_billing_profile_s_inv_prof", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_billing_profile_s_inv_prof"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_billing_profile_s_inv_prof", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_cycle_day,": {"name": "bill_cycle_day,", "description": "Description for bill_cycle_day,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_freq_cd,": {"name": "bill_freq_cd,", "description": "Description for bill_freq_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_pref_cd,": {"name": "bill_pref_cd,", "description": "Description for bill_pref_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_addr,": {"name": "email_addr,", "description": "Description for email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "media_type_cd,": {"name": "media_type_cd,", "description": "Description for media_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paymt_meth_cd,": {"name": "paymt_meth_cd,", "description": "Description for paymt_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bill_cycle,": {"name": "x_bill_cycle,", "description": "Description for x_bill_cycle,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_billing_report_level,": {"name": "x_billing_report_level,", "description": "Description for x_billing_report_level,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_customer_invoice_refernece,": {"name": "x_customer_invoice_refernece,", "description": "Description for x_customer_invoice_refernece,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_dd_exp_date,": {"name": "x_dd_exp_date,", "description": "Description for x_dd_exp_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_fee,": {"name": "x_invoice_fee,", "description": "Description for x_invoice_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_information,": {"name": "x_invoice_information,", "description": "Description for x_invoice_information,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_max_dd_trans_amount,": {"name": "x_max_dd_trans_amount,", "description": "Description for x_max_dd_trans_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_no_post_flg,": {"name": "x_no_post_flg,", "description": "Description for x_no_post_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notif_lang_cd,": {"name": "x_notif_lang_cd,", "description": "Description for x_notif_lang_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_overdue_interest_waived,": {"name": "x_overdue_interest_waived,", "description": "Description for x_overdue_interest_waived,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pay_method_provider,": {"name": "x_pay_method_provider,", "description": "Description for x_pay_method_provider,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_payment_term,": {"name": "x_payment_term,", "description": "Description for x_payment_term,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_specification_fee,": {"name": "x_specification_fee,", "description": "Description for x_specification_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_treatment_category,": {"name": "x_treatment_category,", "description": "Description for x_treatment_category,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_id,": {"name": "addr_id,", "description": "Description for addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_billing_profile_s_inv_prof", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_campaigns_s_src": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_campaigns_s_src", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_campaigns_s_src", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_campaigns_s_src"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_campaigns_s_src", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description,": {"name": "description,", "description": "Description for description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "priority,": {"name": "priority,", "description": "Description for priority,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_snd,": {"name": "planned_snd,", "description": "Description for planned_snd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_start,": {"name": "planned_start,", "description": "Description for planned_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_code,": {"name": "campaign_code,", "description": "Description for campaign_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtype,": {"name": "subtype,", "description": "Description for subtype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_campaigns_s_src", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_ee_consent_exacaster": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_ee_consent_exacaster", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_ee_consent_exacaster", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_ee_consent_exacaster"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_ee_consent_exacaster", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country,": {"name": "country,", "description": "Description for country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consentlevel,": {"name": "consentlevel,", "description": "Description for consentlevel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountid,": {"name": "accountid,", "description": "Description for accountid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountstatus,": {"name": "accountstatus,", "description": "Description for accountstatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountbusinesskey,": {"name": "accountbusinesskey,", "description": "Description for accountbusinesskey,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountbusinesskeytype,": {"name": "accountbusinesskeytype,", "description": "Description for accountbusinesskeytype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetid,": {"name": "assetid,", "description": "Description for assetid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetstatus,": {"name": "assetstatus,", "description": "Description for assetstatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetbusinesskey,": {"name": "assetbusinesskey,", "description": "Description for assetbusinesskey,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetbusinesskeytype,": {"name": "assetbusinesskeytype,", "description": "Description for assetbusinesskeytype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consenttitle,": {"name": "consenttitle,", "description": "Description for consenttitle,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customerconsentvalue,": {"name": "customerconsentvalue,", "description": "Description for customerconsentvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consentversion,": {"name": "consentversion,", "description": "Description for consentversion,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consentstatus,": {"name": "consentstatus,", "description": "Description for consentstatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customerconsentupdatetime,": {"name": "customerconsentupdatetime,", "description": "Description for customerconsentupdatetime,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primarypostpaidsegment,": {"name": "primarypostpaidsegment,", "description": "Description for primarypostpaidsegment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "setby,": {"name": "setby,", "description": "Description for setby,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_ee_consent_exacaster", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_contacts_s_contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_contacts_s_contact"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_contacts_s_contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_per_addr_id,": {"name": "pr_per_addr_id,", "description": "Description for pr_per_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_addr_id,": {"name": "x_legal_addr_id,", "description": "Description for x_legal_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_check,": {"name": "x_legal_check,", "description": "Description for x_legal_check,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cell_ph_num,": {"name": "cell_ph_num,", "description": "Description for cell_ph_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_end_dt,": {"name": "cust_end_dt,", "description": "Description for cust_end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_addr,": {"name": "email_addr,", "description": "Description for email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alt_email_addr,": {"name": "alt_email_addr,", "description": "Description for alt_email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_sr_upd_flg,": {"name": "email_sr_upd_flg,", "description": "Description for email_sr_upd_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fst_name,": {"name": "fst_name,", "description": "Description for fst_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name,": {"name": "last_name,", "description": "Description for last_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pref_comm_meth_cd,": {"name": "pref_comm_meth_cd,", "description": "Description for pref_comm_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pref_comm_media_cd,": {"name": "pref_comm_media_cd,", "description": "Description for pref_comm_media_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soc_security_num,": {"name": "soc_security_num,", "description": "Description for soc_security_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_stat_cd,": {"name": "cust_stat_cd,", "description": "Description for cust_stat_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_call_flg,": {"name": "suppress_call_flg,", "description": "Description for suppress_call_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_mail_flg,": {"name": "suppress_mail_flg,", "description": "Description for suppress_mail_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_addnl_phone_1,": {"name": "x_addnl_phone_1,", "description": "Description for x_addnl_phone_1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_addnl_phone_2,": {"name": "x_addnl_phone_2,", "description": "Description for x_addnl_phone_2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_con_src,": {"name": "x_con_src,", "description": "Description for x_con_src,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_disable_ssn_flg,": {"name": "x_disable_ssn_flg,", "description": "Description for x_disable_ssn_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ins_alt_email,": {"name": "x_ins_alt_email,", "description": "Description for x_ins_alt_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_inspect_email,": {"name": "x_inspect_email,", "description": "Description for x_inspect_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_email_offers_flg,": {"name": "x_email_offers_flg,", "description": "Description for x_email_offers_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_phone_num,": {"name": "x_primary_phone_num,", "description": "Description for x_primary_phone_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_cust,": {"name": "x_sec_cust,", "description": "Description for x_sec_cust,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_self_service_portal,": {"name": "x_self_service_portal,", "description": "Description for x_self_service_portal,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "con_type,": {"name": "con_type,", "description": "Description for con_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "work_ph_num,": {"name": "work_ph_num,", "description": "Description for work_ph_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_acc_id,": {"name": "pr_acc_id,", "description": "Description for pr_acc_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position_id,": {"name": "position_id,", "description": "Description for position_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birthday,": {"name": "birthday,", "description": "Description for birthday,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_contacts_s_contact", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact_x": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_contacts_s_contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_contacts_s_contact_x"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_contacts_s_contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_11,": {"name": "attrib_11,", "description": "Description for attrib_11,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_10,": {"name": "attrib_10,", "description": "Description for attrib_10,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_44,": {"name": "attrib_44,", "description": "Description for attrib_44,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_43,": {"name": "attrib_43,", "description": "Description for attrib_43,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_contacts_s_contact_x", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_cx_nt_acc_pref": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_notification_cx_nt_acc_pref", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_cx_nt_acc_pref", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_notification_cx_nt_acc_pref"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_notification_cx_nt_acc_pref", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id,": {"name": "id,", "description": "Description for id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preference_name,": {"name": "preference_name,", "description": "Description for preference_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value,": {"name": "value,", "description": "Description for value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_notification_cx_nt_acc_pref", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_paymentschedule_cx_pay_schedule": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_paymentschedule_cx_pay_schedule", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_paymentschedule_cx_pay_schedule", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_paymentschedule_cx_pay_schedule"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_paymentschedule_cx_pay_schedule", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id,": {"name": "id,", "description": "Description for id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdby,": {"name": "createdby,", "description": "Description for createdby,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated,": {"name": "updated,", "description": "Description for updated,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updatedby,": {"name": "updatedby,", "description": "Description for updatedby,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "scheduletype,": {"name": "scheduletype,", "description": "Description for scheduletype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "schedulestatus,": {"name": "schedulestatus,", "description": "Description for schedulestatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "scheduleduration,": {"name": "scheduleduration,", "description": "Description for scheduleduration,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "schedulestartdate,": {"name": "schedulestartdate,", "description": "Description for schedulestartdate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountbalance,": {"name": "accountbalance,", "description": "Description for accountbalance,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "barrednumbers,": {"name": "barrednumbers,", "description": "Description for barrednumbers,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "digitalsignatureflag,": {"name": "digitalsignatureflag,", "description": "Description for digitalsignatureflag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "processfeeflag,": {"name": "processfeeflag,", "description": "Description for processfeeflag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstpaymentamount,": {"name": "firstpaymentamount,", "description": "Description for firstpaymentamount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "firstpaymentdate,": {"name": "firstpaymentdate,", "description": "Description for firstpaymentdate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountid,": {"name": "accountid,", "description": "Description for accountid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_paymentschedule_cx_pay_schedule", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_vas_providers_cx_vas_provider": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_vas_providers_cx_vas_provider", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_vas_providers_cx_vas_provider", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_vas_providers_cx_vas_provider"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_vas_providers_cx_vas_provider", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "language_id,": {"name": "language_id,", "description": "Description for language_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monthly_fee,": {"name": "monthly_fee,", "description": "Description for monthly_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_name,": {"name": "partner_name,", "description": "Description for partner_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price,": {"name": "price,", "description": "Description for price,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_increment,": {"name": "pricing_increment,", "description": "Description for pricing_increment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_rule,": {"name": "pricing_rule,", "description": "Description for pricing_rule,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "short_number,": {"name": "short_number,", "description": "Description for short_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active,": {"name": "active,", "description": "Description for active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_vas_providers_cx_vas_provider", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_dd_cx_dd_contract": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_dd_cx_dd_contract", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_dd_cx_dd_contract", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_dd_cx_dd_contract"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_dd_cx_dd_contract", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_account_id,": {"name": "x_account_id,", "description": "Description for x_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ba_num,": {"name": "x_ba_num,", "description": "Description for x_ba_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_contract_num,": {"name": "x_contract_num,", "description": "Description for x_contract_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_type,": {"name": "x_invoice_type,", "description": "Description for x_invoice_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bank_name,": {"name": "x_bank_name,", "description": "Description for x_bank_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bank_acc_num,": {"name": "x_bank_acc_num,", "description": "Description for x_bank_acc_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_contract_start_dt,": {"name": "x_contract_start_dt,", "description": "Description for x_contract_start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_contract_state_cd,": {"name": "x_contract_state_cd,", "description": "Description for x_contract_state_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_dd_cx_dd_contract", "created_at": 1718885162.124057}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustment_items_s_invc_adj_item": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_adjustment_items_s_invc_adj_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustment_items_s_invc_adj_item", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_adjustment_items_s_invc_adj_item"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_adjustment_items_s_invc_adj_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_adjustment_id,": {"name": "invoice_adjustment_id,", "description": "Description for invoice_adjustment_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_item_id,": {"name": "invoice_item_id,", "description": "Description for invoice_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_value,": {"name": "adjustment_value,", "description": "Description for adjustment_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_effective_date,": {"name": "adjustment_effective_date,", "description": "Description for adjustment_effective_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_percentage,": {"name": "adjustment_percentage,", "description": "Description for adjustment_percentage,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_amount,": {"name": "approved_amount,", "description": "Description for approved_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_adjustment_percentage,": {"name": "approved_adjustment_percentage,", "description": "Description for approved_adjustment_percentage,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_exchange_date,": {"name": "approved_exchange_date,", "description": "Description for approved_exchange_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_percentage,": {"name": "approved_percentage,", "description": "Description for approved_percentage,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_value,": {"name": "original_value,", "description": "Description for original_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requested_amount,": {"name": "requested_amount,", "description": "Description for requested_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_exchange_date,": {"name": "request_exchange_date,", "description": "Description for request_exchange_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requested_percentage,": {"name": "requested_percentage,", "description": "Description for requested_percentage,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requested_value,": {"name": "requested_value,", "description": "Description for requested_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_value,": {"name": "tax_value,", "description": "Description for tax_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_type,": {"name": "adjustment_type,", "description": "Description for adjustment_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_currency,": {"name": "approved_currency,", "description": "Description for approved_currency,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "decision_description,": {"name": "decision_description,", "description": "Description for decision_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_item_detail_id,": {"name": "invoice_item_detail_id,", "description": "Description for invoice_item_detail_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notes,": {"name": "notes,", "description": "Description for notes,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason,": {"name": "reason,", "description": "Description for reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requested_currency,": {"name": "requested_currency,", "description": "Description for requested_currency,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_description,": {"name": "request_description,", "description": "Description for request_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource_to_adjustment,": {"name": "resource_to_adjustment,", "description": "Description for resource_to_adjustment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_description,": {"name": "status_description,", "description": "Description for status_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_status,": {"name": "sub_status,", "description": "Description for sub_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_treatment,": {"name": "tax_treatment,", "description": "Description for tax_treatment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_type,": {"name": "product_type,", "description": "Description for product_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason_type,": {"name": "reason_type,", "description": "Description for reason_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_note,": {"name": "unique_note,", "description": "Description for unique_note,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id,": {"name": "invoice_id,", "description": "Description for invoice_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "column42,": {"name": "column42,", "description": "Description for column42,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_adjustment_items_s_invc_adj_item", "created_at": 1718885162.1250584}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustments_s_invoice_adj": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_adjustments_s_invoice_adj", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustments_s_invoice_adj", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_adjustments_s_invoice_adj"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_adjustments_s_invoice_adj", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id,": {"name": "invoice_id,", "description": "Description for invoice_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sequence_no,": {"name": "sequence_no,", "description": "Description for sequence_no,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_effective_date,": {"name": "adjustment_effective_date,", "description": "Description for adjustment_effective_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_amount,": {"name": "approved_amount,", "description": "Description for approved_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_date,": {"name": "approved_date,", "description": "Description for approved_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_exchange_date,": {"name": "approved_exchange_date,", "description": "Description for approved_exchange_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_percentage,": {"name": "approved_percentage,", "description": "Description for approved_percentage,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_decision_date,": {"name": "customer_decision_date,", "description": "Description for customer_decision_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_amount,": {"name": "request_amount,", "description": "Description for request_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_date,": {"name": "request_date,", "description": "Description for request_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_exchange_date,": {"name": "request_exchange_date,", "description": "Description for request_exchange_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_percentage,": {"name": "request_percentage,", "description": "Description for request_percentage,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_value,": {"name": "tax_value,", "description": "Description for tax_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_class,": {"name": "adjustment_class,", "description": "Description for adjustment_class,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_level,": {"name": "adjustment_level,", "description": "Description for adjustment_level,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alert_id,": {"name": "alert_id,", "description": "Description for alert_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_currency,": {"name": "approved_currency,", "description": "Description for approved_currency,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_profile_id,": {"name": "billing_profile_id,", "description": "Description for billing_profile_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_decision,": {"name": "customer_decision,", "description": "Description for customer_decision,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "decision_description,": {"name": "decision_description,", "description": "Description for decision_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "external_billing__,": {"name": "external_billing__,", "description": "Description for external_billing__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason_type,": {"name": "reason_type,", "description": "Description for reason_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requested_currency,": {"name": "requested_currency,", "description": "Description for requested_currency,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "request_description,": {"name": "request_description,", "description": "Description for request_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_account_id,": {"name": "service_account_id,", "description": "Description for service_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_description,": {"name": "status_description,", "description": "Description for status_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_type,": {"name": "adjustment_type,", "description": "Description for adjustment_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_account_id,": {"name": "billing_account_id,", "description": "Description for billing_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "master_account_id,": {"name": "master_account_id,", "description": "Description for master_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_request_id,": {"name": "service_request_id,", "description": "Description for service_request_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsible_id,": {"name": "responsible_id,", "description": "Description for responsible_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_call_quantity,": {"name": "sms_call_quantity,", "description": "Description for sms_call_quantity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_responsible_amount,": {"name": "user_responsible_amount,", "description": "Description for user_responsible_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vas_provider,": {"name": "vas_provider,", "description": "Description for vas_provider,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_treatment,": {"name": "tax_treatment,", "description": "Description for tax_treatment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_allocation,": {"name": "adjustment_allocation,", "description": "Description for adjustment_allocation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "approved_by,": {"name": "approved_by,", "description": "Description for approved_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_debit,": {"name": "credit_debit,", "description": "Description for credit_debit,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "int_status,": {"name": "int_status,", "description": "Description for int_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_type,": {"name": "product_type,", "description": "Description for product_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "refund,": {"name": "refund,", "description": "Description for refund,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reject_reason,": {"name": "reject_reason,", "description": "Description for reject_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "send_memo_note,": {"name": "send_memo_note,", "description": "Description for send_memo_note,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_note,": {"name": "unique_note,", "description": "Description for unique_note,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vat_amount_included,": {"name": "vat_amount_included,", "description": "Description for vat_amount_included,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hierarchical_flag,": {"name": "hierarchical_flag,", "description": "Description for hierarchical_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "send_notification_flag,": {"name": "send_notification_flag,", "description": "Description for send_notification_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_name,": {"name": "agent_name,", "description": "Description for agent_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vas_provider_name,": {"name": "vas_provider_name,", "description": "Description for vas_provider_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_adjustments_s_invoice_adj", "created_at": 1718885162.1250584}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_list_of_values_s_lst_of_val": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_list_of_values_s_lst_of_val", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_list_of_values_s_lst_of_val", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_list_of_values_s_lst_of_val"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_list_of_values_s_lst_of_val", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_flg,": {"name": "active_flg,", "description": "Description for active_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dflt_lic_flg,": {"name": "dflt_lic_flg,", "description": "Description for dflt_lic_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "high,": {"name": "high,", "description": "Description for high,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "low,": {"name": "low,", "description": "Description for low,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "multi_lingual_flg,": {"name": "multi_lingual_flg,", "description": "Description for multi_lingual_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_by,": {"name": "order_by,", "description": "Description for order_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rplctn_lvl_cd,": {"name": "rplctn_lvl_cd,", "description": "Description for rplctn_lvl_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "translate_flg,": {"name": "translate_flg,", "description": "Description for translate_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "val,": {"name": "val,", "description": "Description for val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lang_id,": {"name": "lang_id,", "description": "Description for lang_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id,": {"name": "par_row_id,", "description": "Description for par_row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_list_of_values_s_lst_of_val", "created_at": 1718885162.1250584}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_logs_cx_bus_log": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_logs_cx_bus_log", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_logs_cx_bus_log", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_logs_cx_bus_log"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_logs_cx_bus_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel,": {"name": "channel,", "description": "Description for channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "details,": {"name": "details,", "description": "Description for details,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "division,": {"name": "division,", "description": "Description for division,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "func_proc,": {"name": "func_proc,", "description": "Description for func_proc,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operation_date,": {"name": "operation_date,", "description": "Description for operation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outcome,": {"name": "outcome,", "description": "Description for outcome,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attr_value,": {"name": "primary_attr_value,", "description": "Description for primary_attr_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attr_name,": {"name": "primary_attr_name,", "description": "Description for primary_attr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "usr,": {"name": "usr,", "description": "Description for usr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entity,": {"name": "entity,", "description": "Description for entity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "func_area,": {"name": "func_area,", "description": "Description for func_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "public_flg,": {"name": "public_flg,", "description": "Description for public_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code,": {"name": "code,", "description": "Description for code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id,": {"name": "invoice_id,", "description": "Description for invoice_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "master_account_id,": {"name": "master_account_id,", "description": "Description for master_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id,": {"name": "order_id,", "description": "Description for order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_logs_cx_bus_log", "created_at": 1718885162.1250584}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_settings_cx_add_info_xm": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_notification_settings_cx_add_info_xm", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_settings_cx_add_info_xm", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_notification_settings_cx_add_info_xm"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_notification_settings_cx_add_info_xm", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_override_dest,": {"name": "x_override_dest,", "description": "Description for x_override_dest,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active,": {"name": "active,", "description": "Description for active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_meth_cd,": {"name": "contact_meth_cd,", "description": "Description for contact_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_notification_settings_cx_add_info_xm", "created_at": 1718885162.1250584}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item_xa": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_order_line_items_s_order_item_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_order_line_items_s_order_item_xa"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_order_line_items_s_order_item_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rowid,": {"name": "rowid,", "description": "Description for rowid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdon,": {"name": "createdon,", "description": "Description for createdon,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createdbyid,": {"name": "createdbyid,", "description": "Description for createdbyid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updatedon,": {"name": "updatedon,", "description": "Description for updatedon,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updatedbyid,": {"name": "updatedbyid,", "description": "Description for updatedbyid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modificationnum,": {"name": "modificationnum,", "description": "Description for modificationnum,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conflictid,": {"name": "conflictid,", "description": "Description for conflictid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributename,": {"name": "attributename,", "description": "Description for attributename,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hiddenflag,": {"name": "hiddenflag,", "description": "Description for hiddenflag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "orderitemid,": {"name": "orderitemid,", "description": "Description for orderitemid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "readonlyflag,": {"name": "readonlyflag,", "description": "Description for readonlyflag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requiredflag,": {"name": "requiredflag,", "description": "Description for requiredflag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datevalue,": {"name": "datevalue,", "description": "Description for datevalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dblastupdatedon,": {"name": "dblastupdatedon,", "description": "Description for dblastupdatedon,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "numvalue,": {"name": "numvalue,", "description": "Description for numvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prevdatevalue,": {"name": "prevdatevalue,", "description": "Description for prevdatevalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prevnumvalue,": {"name": "prevnumvalue,", "description": "Description for prevnumvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seqnumber,": {"name": "seqnumber,", "description": "Description for seqnumber,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action,": {"name": "action,", "description": "Description for action,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributeid,": {"name": "attributeid,", "description": "Description for attributeid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cfgstate,": {"name": "cfgstate,", "description": "Description for cfgstate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "charvalue,": {"name": "charvalue,", "description": "Description for charvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "datatype_,": {"name": "datatype_,", "description": "Description for datatype_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dblastupdatedsource,": {"name": "dblastupdatedsource,", "description": "Description for dblastupdatedsource,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description,": {"name": "description,", "description": "Description for description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayname,": {"name": "displayname,", "description": "Description for displayname,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integrationno,": {"name": "integrationno,", "description": "Description for integrationno,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "previousvalue,": {"name": "previousvalue,", "description": "Description for previousvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uom,": {"name": "uom,", "description": "Description for uom,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "validation,": {"name": "validation,", "description": "Description for validation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "validationlov,": {"name": "validationlov,", "description": "Description for validationlov,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "displayvalue,": {"name": "displayvalue,", "description": "Description for displayvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_order_line_items_s_order_item_xa", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_order_line_items_s_order_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_order_line_items_s_order_item"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_order_line_items_s_order_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action_cd,": {"name": "action_cd,", "description": "Description for action_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_dt,": {"name": "status_dt,", "description": "Description for status_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "base_unit_pri,": {"name": "base_unit_pri,", "description": "Description for base_unit_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billable_flg,": {"name": "billable_flg,", "description": "Description for billable_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "carrier_cd,": {"name": "carrier_cd,", "description": "Description for carrier_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_itm_curcy_cd,": {"name": "order_itm_curcy_cd,", "description": "Description for order_itm_curcy_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "req_ship_dt,": {"name": "req_ship_dt,", "description": "Description for req_ship_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "excl_pricing_flg,": {"name": "excl_pricing_flg,", "description": "Description for excl_pricing_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ln_num,": {"name": "ln_num,", "description": "Description for ln_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loaner_flg,": {"name": "loaner_flg,", "description": "Description for loaner_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "per_mth_chg_subtot,": {"name": "per_mth_chg_subtot,", "description": "Description for per_mth_chg_subtot,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line_note,": {"name": "line_note,", "description": "Description for line_note,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "onetime_chg_subtot,": {"name": "onetime_chg_subtot,", "description": "Description for onetime_chg_subtot,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alw_part_ship_flg,": {"name": "alw_part_ship_flg,", "description": "Description for alw_part_ship_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_comment,": {"name": "pricing_comment,", "description": "Description for pricing_comment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_status_cd,": {"name": "prod_status_cd,", "description": "Description for prod_status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qty_req,": {"name": "qty_req,", "description": "Description for qty_req,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qty_shipped,": {"name": "qty_shipped,", "description": "Description for qty_shipped,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rqst_port_date,": {"name": "rqst_port_date,", "description": "Description for rqst_port_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "revenue_type_cd,": {"name": "revenue_type_cd,", "description": "Description for revenue_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "must_dlvr_by_dt,": {"name": "must_dlvr_by_dt,", "description": "Description for must_dlvr_by_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_complete_flg,": {"name": "ship_complete_flg,", "description": "Description for ship_complete_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_meth_cd,": {"name": "ship_meth_cd,", "description": "Description for ship_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_together_flg,": {"name": "ship_together_flg,", "description": "Description for ship_together_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_action_type,": {"name": "x_action_type,", "description": "Description for x_action_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_binding_end,": {"name": "x_binding_end,", "description": "Description for x_binding_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_binding_start,": {"name": "x_binding_start,", "description": "Description for x_binding_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_cred_chk,": {"name": "x_cred_chk,", "description": "Description for x_cred_chk,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_credit_control_number,": {"name": "x_credit_control_number,", "description": "Description for x_credit_control_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_discnt_reason,": {"name": "x_discnt_reason,", "description": "Description for x_discnt_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_code,": {"name": "x_error_code,", "description": "Description for x_error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_message,": {"name": "x_error_message,", "description": "Description for x_error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_expected_delivery_date,": {"name": "x_expected_delivery_date,", "description": "Description for x_expected_delivery_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_loc_name,": {"name": "x_loc_name,", "description": "Description for x_loc_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_loc_ssn,": {"name": "x_loc_ssn,", "description": "Description for x_loc_ssn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notice_period_prod,": {"name": "x_notice_period_prod,", "description": "Description for x_notice_period_prod,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_password,": {"name": "x_password,", "description": "Description for x_password,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_penalty_over_amt,": {"name": "x_penalty_over_amt,", "description": "Description for x_penalty_over_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disconnect_date,": {"name": "x_planned_disconnect_date,", "description": "Description for x_planned_disconnect_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_portin_deadln_dt,": {"name": "x_portin_deadln_dt,", "description": "Description for x_portin_deadln_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_postal_tracking_id,": {"name": "x_postal_tracking_id,", "description": "Description for x_postal_tracking_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attrib_name,": {"name": "x_primary_attrib_name,", "description": "Description for x_primary_attrib_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attrib_val,": {"name": "x_primary_attrib_val,", "description": "Description for x_primary_attrib_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_promotion_end_date,": {"name": "x_promotion_end_date,", "description": "Description for x_promotion_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_reactivation_date,": {"name": "x_reactivation_date,", "description": "Description for x_reactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_status_code,": {"name": "x_status_code,", "description": "Description for x_status_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_substatus,": {"name": "x_substatus,", "description": "Description for x_substatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_wsc_admin_flg,": {"name": "x_wsc_admin_flg,", "description": "Description for x_wsc_admin_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wrnty_rcvr_flg,": {"name": "wrnty_rcvr_flg,", "description": "Description for wrnty_rcvr_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_name,": {"name": "prod_name,", "description": "Description for prod_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id,": {"name": "order_id,", "description": "Description for order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adj_unit_pri,": {"name": "adj_unit_pri,", "description": "Description for adj_unit_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "net_pri,": {"name": "net_pri,", "description": "Description for net_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pri_adj_amt,": {"name": "pri_adj_amt,", "description": "Description for pri_adj_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_integ_id,": {"name": "asset_integ_id,", "description": "Description for asset_integ_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_accnt_id,": {"name": "bill_accnt_id,", "description": "Description for bill_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bo_order_num,": {"name": "bo_order_num,", "description": "Description for bo_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_order_item_id,": {"name": "par_order_item_id,", "description": "Description for par_order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_id,": {"name": "prod_id,", "description": "Description for prod_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_order_item_id,": {"name": "root_order_item_id,", "description": "Description for root_order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_num,": {"name": "service_num,", "description": "Description for service_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serv_accnt_id,": {"name": "serv_accnt_id,", "description": "Description for serv_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disc_reason,": {"name": "x_planned_disc_reason,", "description": "Description for x_planned_disc_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_product_description,": {"name": "x_product_description,", "description": "Description for x_product_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_root_bind_period,": {"name": "x_root_bind_period,", "description": "Description for x_root_bind_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_version_date,": {"name": "x_version_date,", "description": "Description for x_version_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "base_item_id,": {"name": "base_item_id,", "description": "Description for base_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_account_id,": {"name": "owner_account_id,", "description": "Description for owner_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_expected_pred_id,": {"name": "x_expected_pred_id,", "description": "Description for x_expected_pred_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_order_line_items_s_order_item", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_orders_s_order": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_orders_s_order", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_orders_s_order", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_orders_s_order"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_orders_s_order", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_flg,": {"name": "active_flg,", "description": "Description for active_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_dt,": {"name": "status_dt,", "description": "Description for status_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eai_order_num,": {"name": "eai_order_num,", "description": "Description for eai_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_dt,": {"name": "order_dt,", "description": "Description for order_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_num,": {"name": "order_num,", "description": "Description for order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "req_ship_dt,": {"name": "req_ship_dt,", "description": "Description for req_ship_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rev_num,": {"name": "rev_num,", "description": "Description for rev_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_agent_code,": {"name": "x_agent_code,", "description": "Description for x_agent_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_code,": {"name": "x_error_code,", "description": "Description for x_error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_message,": {"name": "x_error_message,", "description": "Description for x_error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_external_inv_code,": {"name": "x_external_inv_code,", "description": "Description for x_external_inv_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_handling_mthd_cd,": {"name": "x_handling_mthd_cd,", "description": "Description for x_handling_mthd_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_order_type,": {"name": "x_order_type,", "description": "Description for x_order_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_parent_order_num,": {"name": "x_parent_order_num,", "description": "Description for x_parent_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_partner_code,": {"name": "x_partner_code,", "description": "Description for x_partner_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_order_source,": {"name": "x_order_source,", "description": "Description for x_order_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_accnt_id,": {"name": "bill_accnt_id,", "description": "Description for bill_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id,": {"name": "customer_id,", "description": "Description for customer_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_billing_addr_id,": {"name": "x_billing_addr_id,", "description": "Description for x_billing_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ca_addr_id,": {"name": "x_ca_addr_id,", "description": "Description for x_ca_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_order_channel,": {"name": "x_order_channel,", "description": "Description for x_order_channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ship_addr_id,": {"name": "x_ship_addr_id,", "description": "Description for x_ship_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_order_id,": {"name": "root_order_id,", "description": "Description for root_order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_st_external_ref,": {"name": "x_st_external_ref,", "description": "Description for x_st_external_ref,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_agent_name,": {"name": "x_agent_name,", "description": "Description for x_agent_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_tm_order_startdate,": {"name": "x_tm_order_startdate,", "description": "Description for x_tm_order_startdate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_orders_s_order", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_payment_claim_cx_pay_claim": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_payment_claim_cx_pay_claim", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_payment_claim_cx_pay_claim", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_payment_claim_cx_pay_claim"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_payment_claim_cx_pay_claim", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account,": {"name": "account,", "description": "Description for account,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel,": {"name": "channel,", "description": "Description for channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount,": {"name": "amount,", "description": "Description for amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date,": {"name": "payment_date,", "description": "Description for payment_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_location,": {"name": "payment_location,", "description": "Description for payment_location,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expiration_date,": {"name": "expiration_date,", "description": "Description for expiration_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comments,": {"name": "comments,", "description": "Description for comments,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_payment_claim_cx_pay_claim", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_positions_s_postn": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_positions_s_postn", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_positions_s_postn", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_positions_s_postn"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_positions_s_postn", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pdemp,": {"name": "pdemp,", "description": "Description for pdemp,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "division_id,": {"name": "division_id,", "description": "Description for division_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_update,": {"name": "last_update,", "description": "Description for last_update,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_positions_s_postn", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_products_s_prod_int": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_products_s_prod_int", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_products_s_prod_int", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_products_s_prod_int"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_products_s_prod_int", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "orderable_flg,": {"name": "orderable_flg,", "description": "Description for orderable_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "part_num,": {"name": "part_num,", "description": "Description for part_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "crt_ast_rec_flg,": {"name": "crt_ast_rec_flg,", "description": "Description for crt_ast_rec_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uom_cd,": {"name": "uom_cd,", "description": "Description for uom_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_products_s_prod_int", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_service_request_s_srv_req", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_service_request_s_srv_req"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_service_request_s_srv_req", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_nr,": {"name": "sr_nr,", "description": "Description for sr_nr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_creation_date_on,": {"name": "sr_creation_date_on,", "description": "Description for sr_creation_date_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_status,": {"name": "sr_status,", "description": "Description for sr_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_sub_status,": {"name": "sr_sub_status,", "description": "Description for sr_sub_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "summary,": {"name": "summary,", "description": "Description for summary,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_1_,": {"name": "product_level_1_,", "description": "Description for product_level_1_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "area,": {"name": "area,", "description": "Description for area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_area,": {"name": "sub_area,", "description": "Description for sub_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notes,": {"name": "notes,", "description": "Description for notes,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "case_level_1,": {"name": "case_level_1,", "description": "Description for case_level_1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "case_level_2,": {"name": "case_level_2,", "description": "Description for case_level_2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "case_level_3,": {"name": "case_level_3,", "description": "Description for case_level_3,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_1,": {"name": "product_level_1,", "description": "Description for product_level_1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_2,": {"name": "product_level_2,", "description": "Description for product_level_2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_3,": {"name": "product_level_3,", "description": "Description for product_level_3,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_notification,": {"name": "suppress_notification,", "description": "Description for suppress_notification,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_code,": {"name": "resolution_code,", "description": "Description for resolution_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_cause,": {"name": "root_cause,", "description": "Description for root_cause,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "priority,": {"name": "priority,", "description": "Description for priority,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impact,": {"name": "impact,", "description": "Description for impact,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "severity,": {"name": "severity,", "description": "Description for severity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "committed_date,": {"name": "committed_date,", "description": "Description for committed_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_opened,": {"name": "date_opened,", "description": "Description for date_opened,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "on_hold_till,": {"name": "on_hold_till,", "description": "Description for on_hold_till,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_,": {"name": "group_,", "description": "Description for group_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_owner,": {"name": "sr_owner,", "description": "Description for sr_owner,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsible_group,": {"name": "responsible_group,", "description": "Description for responsible_group,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_on_resume,": {"name": "group_on_resume,", "description": "Description for group_on_resume,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id,": {"name": "customer_id,", "description": "Description for customer_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_group,": {"name": "created_by_group,", "description": "Description for created_by_group,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_nr,": {"name": "asset_nr,", "description": "Description for asset_nr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_service_request_s_srv_req", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req_x": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_service_request_s_srv_req_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_service_request_s_srv_req_x"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_service_request_s_srv_req_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_resolution_date,": {"name": "sr_resolution_date,", "description": "Description for sr_resolution_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "auto_service_notification_preference,": {"name": "auto_service_notification_preference,", "description": "Description for auto_service_notification_preference,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution,": {"name": "resolution,", "description": "Description for resolution,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "caused_by,": {"name": "caused_by,", "description": "Description for caused_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_service_request_s_srv_req_x", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_users_s_user": {"database": "bdh_raw_ee", "schema": "siebel", "name": "raw_sbl_users_s_user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_ee\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_ee\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_users_s_user", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_ee", "bdh_raw_ee_siebel", "raw_sbl_users_s_user"], "source_name": "bdh_raw_ee_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_users_s_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id,": {"name": "par_row_id,", "description": "Description for par_row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "login,": {"name": "login,", "description": "Description for login,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_role,": {"name": "x_role,", "description": "Description for x_role,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_ee.siebel.raw_sbl_users_s_user", "created_at": 1718885162.1260574}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_accounts_s_org_ext", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_accounts_s_org_ext"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_accounts_s_org_ext", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "Description for row_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "Description for created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by": {"name": "created_by", "description": "Description for created_by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd": {"name": "last_upd", "description": "Description for last_upd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by": {"name": "last_upd_by", "description": "Description for last_upd_by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_stat_cd": {"name": "cust_stat_cd", "description": "Description for cust_stat_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_type_cd": {"name": "accnt_type_cd", "description": "Description for accnt_type_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alt_email_addr": {"name": "alt_email_addr", "description": "Description for alt_email_addr", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eai_sync_dt": {"name": "eai_sync_dt", "description": "Description for eai_sync_dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "good_standing_flg": {"name": "good_standing_flg", "description": "Description for good_standing_flg", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hshld_size": {"name": "hshld_size", "description": "Description for hshld_size", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_updated": {"name": "last_updated", "description": "Description for last_updated", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "main_ph_num": {"name": "main_ph_num", "description": "Description for main_ph_num", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "Description for name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bad_debt": {"name": "x_bad_debt", "description": "Description for x_bad_debt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_end_dt": {"name": "cust_end_dt", "description": "Description for cust_end_dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_csr_edit": {"name": "x_csr_edit", "description": "Description for x_csr_edit", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_cust_source": {"name": "x_cust_source", "description": "Description for x_cust_source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_disable_legal_chk": {"name": "x_disable_legal_chk", "description": "Description for x_disable_legal_chk", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_good_standing_oveeride": {"name": "x_good_standing_oveeride", "description": "Description for x_good_standing_oveeride", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_leg_num": {"name": "x_leg_num", "description": "Description for x_leg_num", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_loyalty_cd": {"name": "x_loyalty_cd", "description": "Description for x_loyalty_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_soc_sec_num": {"name": "x_soc_sec_num", "description": "Description for x_soc_sec_num", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_reason_vat_exemption": {"name": "x_reason_vat_exemption", "description": "Description for x_reason_vat_exemption", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_ans": {"name": "x_sec_ans", "description": "Description for x_sec_ans", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_ques": {"name": "x_sec_ques", "description": "Description for x_sec_ques", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_vat_number": {"name": "x_vat_number", "description": "Description for x_vat_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ou_type_cd": {"name": "ou_type_cd", "description": "Description for ou_type_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_since_dt": {"name": "cust_since_dt", "description": "Description for cust_since_dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_addr_id": {"name": "pr_addr_id", "description": "Description for pr_addr_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_bl_addr_id": {"name": "pr_bl_addr_id", "description": "Description for pr_bl_addr_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_con_id": {"name": "pr_con_id", "description": "Description for pr_con_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_ship_addr_id": {"name": "pr_ship_addr_id", "description": "Description for pr_ship_addr_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_chk": {"name": "x_legal_chk", "description": "Description for x_legal_chk", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "curr_pri_lst_id": {"name": "curr_pri_lst_id", "description": "Description for curr_pri_lst_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id": {"name": "integration_id", "description": "Description for integration_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "master_ou_id": {"name": "master_ou_id", "description": "Description for master_ou_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ou_num": {"name": "ou_num", "description": "Description for ou_num", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_cust": {"name": "x_sec_cust", "description": "Description for x_sec_cust", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_postn_id": {"name": "pr_postn_id", "description": "Description for pr_postn_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_ou_id": {"name": "par_ou_id", "description": "Description for par_ou_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_postpaid_seg_cd": {"name": "x_primary_postpaid_seg_cd", "description": "Description for x_primary_postpaid_seg_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_deactivation_dt": {"name": "x_deactivation_dt", "description": "Description for x_deactivation_dt", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_accounts_s_org_ext", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext_x": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_accounts_s_org_ext_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_accounts_s_org_ext_x"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_accounts_s_org_ext_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "Description for row_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created": {"name": "created", "description": "Description for created", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by": {"name": "created_by", "description": "Description for created_by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd": {"name": "last_upd", "description": "Description for last_upd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by": {"name": "last_upd_by", "description": "Description for last_upd_by", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_35": {"name": "attrib_35", "description": "Description for attrib_35", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_auto_crd_lm_inc_flg": {"name": "x_auto_crd_lm_inc_flg", "description": "Description for x_auto_crd_lm_inc_flg", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_55": {"name": "attrib_55", "description": "Description for attrib_55", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_07": {"name": "attrib_07", "description": "Description for attrib_07", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_brand_cd": {"name": "x_brand_cd", "description": "Description for x_brand_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_65": {"name": "attrib_65", "description": "Description for attrib_65", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_credit_class_cd": {"name": "x_credit_class_cd", "description": "Description for x_credit_class_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_credit_limit_cd": {"name": "x_credit_limit_cd", "description": "Description for x_credit_limit_cd", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_51": {"name": "attrib_51", "description": "Description for attrib_51", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_49": {"name": "attrib_49", "description": "Description for attrib_49", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_09": {"name": "attrib_09", "description": "Description for attrib_09", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_vip_status_flg": {"name": "x_vip_status_flg", "description": "Description for x_vip_status_flg", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id": {"name": "par_row_id", "description": "Description for par_row_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_accounts_s_org_ext_x", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_s_addr_per": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_addresses_s_addr_per", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_s_addr_per", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_addresses_s_addr_per"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_addresses_s_addr_per", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_line_4,": {"name": "addr_line_4,", "description": "Description for addr_line_4,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "premise_flg,": {"name": "premise_flg,", "description": "Description for premise_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_dt,": {"name": "start_dt,", "description": "Description for start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_int_source,": {"name": "x_int_source,", "description": "Description for x_int_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_coord_qlty,": {"name": "x_coord_qlty,", "description": "Description for x_coord_qlty,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_num,": {"name": "addr_num,", "description": "Description for addr_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_municipality,": {"name": "x_municipality,", "description": "Description for x_municipality,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_cong_code,": {"name": "x_cong_code,", "description": "Description for x_cong_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr,": {"name": "addr,", "description": "Description for addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_system_source,": {"name": "x_system_source,", "description": "Description for x_system_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_congregation,": {"name": "x_congregation,", "description": "Description for x_congregation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_addr_qlty,": {"name": "x_addr_qlty,", "description": "Description for x_addr_qlty,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_apart_num,": {"name": "x_apart_num,", "description": "Description for x_apart_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_line_5,": {"name": "addr_line_5,", "description": "Description for addr_line_5,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "longitude,": {"name": "longitude,", "description": "Description for longitude,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_real_estate,": {"name": "x_real_estate,", "description": "Description for x_real_estate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_county_code,": {"name": "x_county_code,", "description": "Description for x_county_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city,": {"name": "city,", "description": "Description for city,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "zipcode,": {"name": "zipcode,", "description": "Description for zipcode,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration2_id,": {"name": "integration2_id,", "description": "Description for integration2_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_street_letter,": {"name": "x_street_letter,", "description": "Description for x_street_letter,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latitude,": {"name": "latitude,", "description": "Description for latitude,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country,": {"name": "country,", "description": "Description for country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "county,": {"name": "county,", "description": "Description for county,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_addr_id,": {"name": "par_addr_id,", "description": "Description for par_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_mun_code,": {"name": "x_mun_code,", "description": "Description for x_mun_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_dt,": {"name": "end_dt,", "description": "Description for end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_type_cd,": {"name": "addr_type_cd,", "description": "Description for addr_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_name,": {"name": "addr_name,", "description": "Description for addr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_addresses_s_addr_per", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_intersection_s_con_addr": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_addresses_intersection_s_con_addr", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_intersection_s_con_addr", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_addresses_intersection_s_con_addr"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_addresses_intersection_s_con_addr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_flg,": {"name": "active_flg,", "description": "Description for active_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_per_id,": {"name": "addr_per_id,", "description": "Description for addr_per_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_type_cd,": {"name": "addr_type_cd,", "description": "Description for addr_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_addresses_intersection_s_con_addr", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_assets_s_asset", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_assets_s_asset"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_assets_s_asset", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_num,": {"name": "asset_num,", "description": "Description for asset_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_dt,": {"name": "end_dt,", "description": "Description for end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_activation_dt,": {"name": "x_activation_dt,", "description": "Description for x_activation_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_app_country,": {"name": "x_app_country,", "description": "Description for x_app_country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_asset_details,": {"name": "x_asset_details,", "description": "Description for x_asset_details,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_brand_cd,": {"name": "x_brand_cd,", "description": "Description for x_brand_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_company_card,": {"name": "x_company_card,", "description": "Description for x_company_card,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_dual_card,": {"name": "x_dual_card,", "description": "Description for x_dual_card,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pending_order,": {"name": "x_pending_order,", "description": "Description for x_pending_order,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disc_date,": {"name": "x_planned_disc_date,", "description": "Description for x_planned_disc_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_price_plan_code,": {"name": "x_price_plan_code,", "description": "Description for x_price_plan_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attr_name,": {"name": "x_primary_attr_name,", "description": "Description for x_primary_attr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attr_value,": {"name": "x_primary_attr_value,", "description": "Description for x_primary_attr_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_t2_product_end_date,": {"name": "x_t2_product_end_date,", "description": "Description for x_t2_product_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_reactivation_date,": {"name": "x_reactivation_date,", "description": "Description for x_reactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_version_dt,": {"name": "x_version_dt,", "description": "Description for x_version_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uom_cd,": {"name": "uom_cd,", "description": "Description for uom_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_allow_port_out,": {"name": "x_allow_port_out,", "description": "Description for x_allow_port_out,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_call_specification,": {"name": "x_call_specification,", "description": "Description for x_call_specification,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notice_period,": {"name": "x_notice_period,", "description": "Description for x_notice_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notice_period_end_date,": {"name": "x_notice_period_end_date,", "description": "Description for x_notice_period_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_package_code,": {"name": "x_package_code,", "description": "Description for x_package_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pin,": {"name": "x_pin,", "description": "Description for x_pin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disc_reason,": {"name": "x_planned_disc_reason,", "description": "Description for x_planned_disc_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_price_plan_date,": {"name": "x_price_plan_date,", "description": "Description for x_price_plan_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_puk1,": {"name": "x_puk1,", "description": "Description for x_puk1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_regret_end_dt,": {"name": "x_regret_end_dt,", "description": "Description for x_regret_end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_service_sub_type,": {"name": "x_service_sub_type,", "description": "Description for x_service_sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_wsc_admin_flg,": {"name": "x_wsc_admin_flg,", "description": "Description for x_wsc_admin_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "install_dt,": {"name": "install_dt,", "description": "Description for install_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "purch_dt,": {"name": "purch_dt,", "description": "Description for purch_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registered_dt,": {"name": "registered_dt,", "description": "Description for registered_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_dt,": {"name": "start_dt,", "description": "Description for start_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_entitlement_id,": {"name": "x_entitlement_id,", "description": "Description for x_entitlement_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cur_agree_id,": {"name": "cur_agree_id,", "description": "Description for cur_agree_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_id,": {"name": "prod_id,", "description": "Description for prod_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_accnt_id,": {"name": "owner_accnt_id,", "description": "Description for owner_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_accnt_id,": {"name": "bill_accnt_id,", "description": "Description for bill_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serv_acct_id,": {"name": "serv_acct_id,", "description": "Description for serv_acct_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_profile_id,": {"name": "bill_profile_id,", "description": "Description for bill_profile_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_asset_id,": {"name": "par_asset_id,", "description": "Description for par_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_asset_id,": {"name": "root_asset_id,", "description": "Description for root_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_con_id,": {"name": "pr_con_id,", "description": "Description for pr_con_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ou_addr_id,": {"name": "ou_addr_id,", "description": "Description for ou_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_con_id,": {"name": "owner_con_id,", "description": "Description for owner_con_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_id,": {"name": "promotion_id,", "description": "Description for promotion_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion,": {"name": "promotion,", "description": "Description for promotion,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "related_product_id,": {"name": "related_product_id,", "description": "Description for related_product_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_assets_s_asset", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_asset_attributes_s_asset_xa": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_asset_attributes_s_asset_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_asset_attributes_s_asset_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_asset_attributes_s_asset_xa"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_asset_attributes_s_asset_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attr_name,": {"name": "attr_name,", "description": "Description for attr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "display_name,": {"name": "display_name,", "description": "Description for display_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hidden_flg,": {"name": "hidden_flg,", "description": "Description for hidden_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_type_cd,": {"name": "data_type_cd,", "description": "Description for data_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "char_val,": {"name": "char_val,", "description": "Description for char_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_val,": {"name": "num_val,", "description": "Description for num_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_val,": {"name": "date_val,", "description": "Description for date_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attr_id,": {"name": "attr_id,", "description": "Description for attr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "file_name,": {"name": "file_name,", "description": "Description for file_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_asset_attributes_s_asset_xa", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_billing_profile_s_inv_prof": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_billing_profile_s_inv_prof", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_billing_profile_s_inv_prof", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_billing_profile_s_inv_prof"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_billing_profile_s_inv_prof", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_cycle_day,": {"name": "bill_cycle_day,", "description": "Description for bill_cycle_day,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_freq_cd,": {"name": "bill_freq_cd,", "description": "Description for bill_freq_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_pref_cd,": {"name": "bill_pref_cd,", "description": "Description for bill_pref_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_addr,": {"name": "email_addr,", "description": "Description for email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "media_type_cd,": {"name": "media_type_cd,", "description": "Description for media_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "paymt_meth_cd,": {"name": "paymt_meth_cd,", "description": "Description for paymt_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bill_cycle,": {"name": "x_bill_cycle,", "description": "Description for x_bill_cycle,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_billing_report_level,": {"name": "x_billing_report_level,", "description": "Description for x_billing_report_level,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_customer_invoice_refernece,": {"name": "x_customer_invoice_refernece,", "description": "Description for x_customer_invoice_refernece,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_dd_exp_date,": {"name": "x_dd_exp_date,", "description": "Description for x_dd_exp_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_fee,": {"name": "x_invoice_fee,", "description": "Description for x_invoice_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_information,": {"name": "x_invoice_information,", "description": "Description for x_invoice_information,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_max_dd_trans_amount,": {"name": "x_max_dd_trans_amount,", "description": "Description for x_max_dd_trans_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_no_post_flg,": {"name": "x_no_post_flg,", "description": "Description for x_no_post_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notif_lang_cd,": {"name": "x_notif_lang_cd,", "description": "Description for x_notif_lang_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_overdue_interest_waived,": {"name": "x_overdue_interest_waived,", "description": "Description for x_overdue_interest_waived,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_pay_method_provider,": {"name": "x_pay_method_provider,", "description": "Description for x_pay_method_provider,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_payment_term,": {"name": "x_payment_term,", "description": "Description for x_payment_term,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_specification_fee,": {"name": "x_specification_fee,", "description": "Description for x_specification_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_treatment_category,": {"name": "x_treatment_category,", "description": "Description for x_treatment_category,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "addr_id,": {"name": "addr_id,", "description": "Description for addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_billing_profile_s_inv_prof", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_contacts_s_contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_contacts_s_contact"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_contacts_s_contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_per_addr_id,": {"name": "pr_per_addr_id,", "description": "Description for pr_per_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_addr_id,": {"name": "x_legal_addr_id,", "description": "Description for x_legal_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_check,": {"name": "x_legal_check,", "description": "Description for x_legal_check,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cell_ph_num,": {"name": "cell_ph_num,", "description": "Description for cell_ph_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_end_dt,": {"name": "cust_end_dt,", "description": "Description for cust_end_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_addr,": {"name": "email_addr,", "description": "Description for email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alt_email_addr,": {"name": "alt_email_addr,", "description": "Description for alt_email_addr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_sr_upd_flg,": {"name": "email_sr_upd_flg,", "description": "Description for email_sr_upd_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fst_name,": {"name": "fst_name,", "description": "Description for fst_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name,": {"name": "last_name,", "description": "Description for last_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pref_comm_meth_cd,": {"name": "pref_comm_meth_cd,", "description": "Description for pref_comm_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pref_comm_media_cd,": {"name": "pref_comm_media_cd,", "description": "Description for pref_comm_media_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soc_security_num,": {"name": "soc_security_num,", "description": "Description for soc_security_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cust_stat_cd,": {"name": "cust_stat_cd,", "description": "Description for cust_stat_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_call_flg,": {"name": "suppress_call_flg,", "description": "Description for suppress_call_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_mail_flg,": {"name": "suppress_mail_flg,", "description": "Description for suppress_mail_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_addnl_phone_1,": {"name": "x_addnl_phone_1,", "description": "Description for x_addnl_phone_1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_addnl_phone_2,": {"name": "x_addnl_phone_2,", "description": "Description for x_addnl_phone_2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_con_src,": {"name": "x_con_src,", "description": "Description for x_con_src,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_disable_ssn_flg,": {"name": "x_disable_ssn_flg,", "description": "Description for x_disable_ssn_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ins_alt_email,": {"name": "x_ins_alt_email,", "description": "Description for x_ins_alt_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_inspect_email,": {"name": "x_inspect_email,", "description": "Description for x_inspect_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_email_offers_flg,": {"name": "x_email_offers_flg,", "description": "Description for x_email_offers_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_phone_num,": {"name": "x_primary_phone_num,", "description": "Description for x_primary_phone_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_cust,": {"name": "x_sec_cust,", "description": "Description for x_sec_cust,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_self_service_portal,": {"name": "x_self_service_portal,", "description": "Description for x_self_service_portal,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "con_cd,": {"name": "con_cd,", "description": "Description for con_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "work_ph_num,": {"name": "work_ph_num,", "description": "Description for work_ph_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_dept_ou_id,": {"name": "pr_dept_ou_id,", "description": "Description for pr_dept_ou_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_prim_email_valid,": {"name": "x_prim_email_valid,", "description": "Description for x_prim_email_valid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_sec_email_valid,": {"name": "x_sec_email_valid,", "description": "Description for x_sec_email_valid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_contacts_s_contact", "created_at": 1718885162.1270566}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact_x": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_contacts_s_contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_contacts_s_contact_x"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_contacts_s_contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_11,": {"name": "attrib_11,", "description": "Description for attrib_11,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_10,": {"name": "attrib_10,", "description": "Description for attrib_10,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_44,": {"name": "attrib_44,", "description": "Description for attrib_44,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_43,": {"name": "attrib_43,", "description": "Description for attrib_43,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_contacts_s_contact_x", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_list_of_values_s_lst_of_val": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_list_of_values_s_lst_of_val", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_list_of_values_s_lst_of_val", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_list_of_values_s_lst_of_val"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_list_of_values_s_lst_of_val", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_flg,": {"name": "active_flg,", "description": "Description for active_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dflt_lic_flg,": {"name": "dflt_lic_flg,", "description": "Description for dflt_lic_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "high,": {"name": "high,", "description": "Description for high,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "low,": {"name": "low,", "description": "Description for low,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "multi_lingual_flg,": {"name": "multi_lingual_flg,", "description": "Description for multi_lingual_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_by,": {"name": "order_by,", "description": "Description for order_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rplctn_lvl_cd,": {"name": "rplctn_lvl_cd,", "description": "Description for rplctn_lvl_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "translate_flg,": {"name": "translate_flg,", "description": "Description for translate_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "val,": {"name": "val,", "description": "Description for val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lang_id,": {"name": "lang_id,", "description": "Description for lang_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id,": {"name": "par_row_id,", "description": "Description for par_row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_list_of_values_s_lst_of_val", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_logs_cx_bus_log": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_logs_cx_bus_log", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_logs_cx_bus_log", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_logs_cx_bus_log"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_logs_cx_bus_log", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel,": {"name": "channel,", "description": "Description for channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "details,": {"name": "details,", "description": "Description for details,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "division,": {"name": "division,", "description": "Description for division,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "func_proc,": {"name": "func_proc,", "description": "Description for func_proc,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operation_date,": {"name": "operation_date,", "description": "Description for operation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outcome,": {"name": "outcome,", "description": "Description for outcome,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attr_value,": {"name": "primary_attr_value,", "description": "Description for primary_attr_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attr_name,": {"name": "primary_attr_name,", "description": "Description for primary_attr_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "usr,": {"name": "usr,", "description": "Description for usr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entity,": {"name": "entity,", "description": "Description for entity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "func_area,": {"name": "func_area,", "description": "Description for func_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "public_flg,": {"name": "public_flg,", "description": "Description for public_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code,": {"name": "code,", "description": "Description for code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_id,": {"name": "invoice_id,", "description": "Description for invoice_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "master_account_id,": {"name": "master_account_id,", "description": "Description for master_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id,": {"name": "order_id,", "description": "Description for order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_logs_cx_bus_log", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_notification_settings_cx_add_info_xm": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_notification_settings_cx_add_info_xm", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_notification_settings_cx_add_info_xm", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_notification_settings_cx_add_info_xm"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_notification_settings_cx_add_info_xm", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_override_dest,": {"name": "x_override_dest,", "description": "Description for x_override_dest,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active,": {"name": "active,", "description": "Description for active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_meth_cd,": {"name": "contact_meth_cd,", "description": "Description for contact_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_notification_settings_cx_add_info_xm", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_order_line_items_s_order_item": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_order_line_items_s_order_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_order_line_items_s_order_item", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_order_line_items_s_order_item"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_order_line_items_s_order_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action_cd,": {"name": "action_cd,", "description": "Description for action_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_dt,": {"name": "status_dt,", "description": "Description for status_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "base_unit_pri,": {"name": "base_unit_pri,", "description": "Description for base_unit_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billable_flg,": {"name": "billable_flg,", "description": "Description for billable_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "carrier_cd,": {"name": "carrier_cd,", "description": "Description for carrier_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_itm_curcy_cd,": {"name": "order_itm_curcy_cd,", "description": "Description for order_itm_curcy_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "req_ship_dt,": {"name": "req_ship_dt,", "description": "Description for req_ship_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "excl_pricing_flg,": {"name": "excl_pricing_flg,", "description": "Description for excl_pricing_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ln_num,": {"name": "ln_num,", "description": "Description for ln_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loaner_flg,": {"name": "loaner_flg,", "description": "Description for loaner_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "per_mth_chg_subtot,": {"name": "per_mth_chg_subtot,", "description": "Description for per_mth_chg_subtot,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line_note,": {"name": "line_note,", "description": "Description for line_note,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "onetime_chg_subtot,": {"name": "onetime_chg_subtot,", "description": "Description for onetime_chg_subtot,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alw_part_ship_flg,": {"name": "alw_part_ship_flg,", "description": "Description for alw_part_ship_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_comment,": {"name": "pricing_comment,", "description": "Description for pricing_comment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_status_cd,": {"name": "prod_status_cd,", "description": "Description for prod_status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qty_req,": {"name": "qty_req,", "description": "Description for qty_req,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qty_shipped,": {"name": "qty_shipped,", "description": "Description for qty_shipped,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rqst_port_date,": {"name": "rqst_port_date,", "description": "Description for rqst_port_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "revenue_type_cd,": {"name": "revenue_type_cd,", "description": "Description for revenue_type_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "must_dlvr_by_dt,": {"name": "must_dlvr_by_dt,", "description": "Description for must_dlvr_by_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_complete_flg,": {"name": "ship_complete_flg,", "description": "Description for ship_complete_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_meth_cd,": {"name": "ship_meth_cd,", "description": "Description for ship_meth_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_together_flg,": {"name": "ship_together_flg,", "description": "Description for ship_together_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_action_type,": {"name": "x_action_type,", "description": "Description for x_action_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_binding_end,": {"name": "x_binding_end,", "description": "Description for x_binding_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_binding_start,": {"name": "x_binding_start,", "description": "Description for x_binding_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_cred_chk,": {"name": "x_cred_chk,", "description": "Description for x_cred_chk,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_credit_control_number,": {"name": "x_credit_control_number,", "description": "Description for x_credit_control_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_discnt_reason,": {"name": "x_discnt_reason,", "description": "Description for x_discnt_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_code,": {"name": "x_error_code,", "description": "Description for x_error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_message,": {"name": "x_error_message,", "description": "Description for x_error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_expected_delivery_date,": {"name": "x_expected_delivery_date,", "description": "Description for x_expected_delivery_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_loc_name,": {"name": "x_loc_name,", "description": "Description for x_loc_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_loc_ssn,": {"name": "x_loc_ssn,", "description": "Description for x_loc_ssn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_notice_period_prod,": {"name": "x_notice_period_prod,", "description": "Description for x_notice_period_prod,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_password,": {"name": "x_password,", "description": "Description for x_password,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_penalty_over_amt,": {"name": "x_penalty_over_amt,", "description": "Description for x_penalty_over_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disconnect_date,": {"name": "x_planned_disconnect_date,", "description": "Description for x_planned_disconnect_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_portin_deadln_dt,": {"name": "x_portin_deadln_dt,", "description": "Description for x_portin_deadln_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_postal_tracking_id,": {"name": "x_postal_tracking_id,", "description": "Description for x_postal_tracking_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attrib_name,": {"name": "x_primary_attrib_name,", "description": "Description for x_primary_attrib_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_primary_attrib_val,": {"name": "x_primary_attrib_val,", "description": "Description for x_primary_attrib_val,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_promotion_end_date,": {"name": "x_promotion_end_date,", "description": "Description for x_promotion_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_reactivation_date,": {"name": "x_reactivation_date,", "description": "Description for x_reactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_status_code,": {"name": "x_status_code,", "description": "Description for x_status_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_substatus,": {"name": "x_substatus,", "description": "Description for x_substatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_wsc_admin_flg,": {"name": "x_wsc_admin_flg,", "description": "Description for x_wsc_admin_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wrnty_rcvr_flg,": {"name": "wrnty_rcvr_flg,", "description": "Description for wrnty_rcvr_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_name,": {"name": "prod_name,", "description": "Description for prod_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id,": {"name": "order_id,", "description": "Description for order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adj_unit_pri,": {"name": "adj_unit_pri,", "description": "Description for adj_unit_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "net_pri,": {"name": "net_pri,", "description": "Description for net_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pri_adj_amt,": {"name": "pri_adj_amt,", "description": "Description for pri_adj_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_integ_id,": {"name": "asset_integ_id,", "description": "Description for asset_integ_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_accnt_id,": {"name": "bill_accnt_id,", "description": "Description for bill_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bo_order_num,": {"name": "bo_order_num,", "description": "Description for bo_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_order_item_id,": {"name": "par_order_item_id,", "description": "Description for par_order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prod_id,": {"name": "prod_id,", "description": "Description for prod_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_order_item_id,": {"name": "root_order_item_id,", "description": "Description for root_order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_num,": {"name": "service_num,", "description": "Description for service_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "serv_accnt_id,": {"name": "serv_accnt_id,", "description": "Description for serv_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_planned_disc_reason,": {"name": "x_planned_disc_reason,", "description": "Description for x_planned_disc_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_product_description,": {"name": "x_product_description,", "description": "Description for x_product_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_root_bind_period,": {"name": "x_root_bind_period,", "description": "Description for x_root_bind_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_version_date,": {"name": "x_version_date,", "description": "Description for x_version_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "base_item_id,": {"name": "base_item_id,", "description": "Description for base_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_account_id,": {"name": "owner_account_id,", "description": "Description for owner_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_expected_pred_id,": {"name": "x_expected_pred_id,", "description": "Description for x_expected_pred_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_order_line_items_s_order_item", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_orders_s_order": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_orders_s_order", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_orders_s_order", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_orders_s_order"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_orders_s_order", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_flg,": {"name": "active_flg,", "description": "Description for active_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_dt,": {"name": "status_dt,", "description": "Description for status_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "eai_order_num,": {"name": "eai_order_num,", "description": "Description for eai_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_dt,": {"name": "order_dt,", "description": "Description for order_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_num,": {"name": "order_num,", "description": "Description for order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "req_ship_dt,": {"name": "req_ship_dt,", "description": "Description for req_ship_dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rev_num,": {"name": "rev_num,", "description": "Description for rev_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_agent_code,": {"name": "x_agent_code,", "description": "Description for x_agent_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_code,": {"name": "x_error_code,", "description": "Description for x_error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_error_message,": {"name": "x_error_message,", "description": "Description for x_error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_external_inv_code,": {"name": "x_external_inv_code,", "description": "Description for x_external_inv_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_handling_mthd_cd,": {"name": "x_handling_mthd_cd,", "description": "Description for x_handling_mthd_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_order_type,": {"name": "x_order_type,", "description": "Description for x_order_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_parent_order_num,": {"name": "x_parent_order_num,", "description": "Description for x_parent_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_partner_code,": {"name": "x_partner_code,", "description": "Description for x_partner_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_order_source,": {"name": "x_order_source,", "description": "Description for x_order_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accnt_id,": {"name": "accnt_id,", "description": "Description for accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_accnt_id,": {"name": "bill_accnt_id,", "description": "Description for bill_accnt_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id,": {"name": "customer_id,", "description": "Description for customer_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_billing_addr_id,": {"name": "x_billing_addr_id,", "description": "Description for x_billing_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ca_addr_id,": {"name": "x_ca_addr_id,", "description": "Description for x_ca_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_order_channel,": {"name": "x_order_channel,", "description": "Description for x_order_channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ship_addr_id,": {"name": "x_ship_addr_id,", "description": "Description for x_ship_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_order_id,": {"name": "root_order_id,", "description": "Description for root_order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_st_external_ref,": {"name": "x_st_external_ref,", "description": "Description for x_st_external_ref,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_orders_s_order", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_products_s_prod_int": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_products_s_prod_int", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_products_s_prod_int", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_products_s_prod_int"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_products_s_prod_int", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "desc_text,": {"name": "desc_text,", "description": "Description for desc_text,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "orderable_flg,": {"name": "orderable_flg,", "description": "Description for orderable_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "part_num,": {"name": "part_num,", "description": "Description for part_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "crt_ast_rec_flg,": {"name": "crt_ast_rec_flg,", "description": "Description for crt_ast_rec_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uom_cd,": {"name": "uom_cd,", "description": "Description for uom_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_products_s_prod_int", "created_at": 1718885162.128057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_users_s_user": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_users_s_user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_users_s_user", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_users_s_user"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_users_s_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id,": {"name": "par_row_id,", "description": "Description for par_row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "login,": {"name": "login,", "description": "Description for login,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_role,": {"name": "x_role,", "description": "Description for x_role,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_cd,": {"name": "status_cd,", "description": "Description for status_cd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_users_s_user", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset_x": {"database": "bdh_raw_lt", "schema": "siebel", "name": "raw_sbl_assets_s_asset_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lt\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lt\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lt", "bdh_raw_lt_siebel", "raw_sbl_assets_s_asset_x"], "source_name": "bdh_raw_lt_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_assets_s_asset_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created,": {"name": "created,", "description": "Description for created,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by,": {"name": "created_by,", "description": "Description for created_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd,": {"name": "last_upd,", "description": "Description for last_upd,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_upd_by,": {"name": "last_upd_by,", "description": "Description for last_upd_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_32,": {"name": "attrib_32,", "description": "Description for attrib_32,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_bind_period,": {"name": "x_bind_period,", "description": "Description for x_bind_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_31,": {"name": "attrib_31,", "description": "Description for attrib_31,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_invoice_flg,": {"name": "x_invoice_flg,", "description": "Description for x_invoice_flg,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_01,": {"name": "attrib_01,", "description": "Description for attrib_01,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_09,": {"name": "attrib_09,", "description": "Description for attrib_09,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_ref,": {"name": "x_ref,", "description": "Description for x_ref,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_07,": {"name": "attrib_07,", "description": "Description for attrib_07,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_34,": {"name": "attrib_34,", "description": "Description for attrib_34,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_03,": {"name": "attrib_03,", "description": "Description for attrib_03,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_27,": {"name": "attrib_27,", "description": "Description for attrib_27,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attrib_26,": {"name": "attrib_26,", "description": "Description for attrib_26,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lt.siebel.raw_sbl_assets_s_asset_x", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_users_s_user": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_users_s_user", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_users_s_user", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_users_s_user"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_users_s_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "par_row_id,": {"name": "par_row_id,", "description": "Description for par_row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "login_name,": {"name": "login_name,", "description": "Description for login_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_role,": {"name": "x_role,", "description": "Description for x_role,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_users_s_user", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_cbs_siebel_acc_map": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_cbs_siebel_acc_map", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_cbs_siebel_acc_map", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_cbs_siebel_acc_map"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_cbs_siebel_acc_map", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "siebel_asset_id,": {"name": "siebel_asset_id,", "description": "Description for siebel_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cbs_account_id,": {"name": "cbs_account_id,", "description": "Description for cbs_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_cbs_siebel_acc_map", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_consent_exacaster": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_lv_consent_exacaster", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_consent_exacaster", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_lv_consent_exacaster"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_lv_consent_exacaster", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country,": {"name": "country,", "description": "Description for country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consentlevel,": {"name": "consentlevel,", "description": "Description for consentlevel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountid,": {"name": "accountid,", "description": "Description for accountid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountstatus,": {"name": "accountstatus,", "description": "Description for accountstatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountbusinesskey,": {"name": "accountbusinesskey,", "description": "Description for accountbusinesskey,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "accountbusinesskeytype,": {"name": "accountbusinesskeytype,", "description": "Description for accountbusinesskeytype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetid,": {"name": "assetid,", "description": "Description for assetid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetstatus,": {"name": "assetstatus,", "description": "Description for assetstatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetbusinesskey,": {"name": "assetbusinesskey,", "description": "Description for assetbusinesskey,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assetbusinesskeytype,": {"name": "assetbusinesskeytype,", "description": "Description for assetbusinesskeytype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consenttitle,": {"name": "consenttitle,", "description": "Description for consenttitle,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customerconsentvalue,": {"name": "customerconsentvalue,", "description": "Description for customerconsentvalue,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consentversion,": {"name": "consentversion,", "description": "Description for consentversion,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consentstatus,": {"name": "consentstatus,", "description": "Description for consentstatus,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customerconsentupdatetime,": {"name": "customerconsentupdatetime,", "description": "Description for customerconsentupdatetime,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel,": {"name": "channel,", "description": "Description for channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_lv_consent_exacaster", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_notifications_exacaster": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_lv_notifications_exacaster", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_notifications_exacaster", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_lv_notifications_exacaster"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_lv_notifications_exacaster", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_business_key_type,": {"name": "account_business_key_type,", "description": "Description for account_business_key_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_business_key_value,": {"name": "account_business_key_value,", "description": "Description for account_business_key_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_business_key_type,": {"name": "asset_business_key_type,", "description": "Description for asset_business_key_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_business_key_value,": {"name": "asset_business_key_value,", "description": "Description for asset_business_key_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preference_level,": {"name": "preference_level,", "description": "Description for preference_level,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preference_name,": {"name": "preference_name,", "description": "Description for preference_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preference_value,": {"name": "preference_value,", "description": "Description for preference_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_updated,": {"name": "last_updated,", "description": "Description for last_updated,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_lv_notifications_exacaster", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_accounts_s_org_ext", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_accounts_s_org_ext"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_accounts_s_org_ext", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_class,": {"name": "account_class,", "description": "Description for account_class,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "marketing_e_mail,": {"name": "marketing_e_mail,", "description": "Description for marketing_e_mail,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sv_synch,": {"name": "sv_synch,", "description": "Description for sv_synch,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "good_standing,": {"name": "good_standing,", "description": "Description for good_standing,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "size,": {"name": "size,", "description": "Description for size,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_updated_date,": {"name": "last_updated_date,", "description": "Description for last_updated_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "main_phone__,": {"name": "main_phone__,", "description": "Description for main_phone__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bad_debt,": {"name": "bad_debt,", "description": "Description for bad_debt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deactivation_date,": {"name": "deactivation_date,", "description": "Description for deactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "csr_editable,": {"name": "csr_editable,", "description": "Description for csr_editable,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "disable_automatic_update,": {"name": "disable_automatic_update,", "description": "Description for disable_automatic_update,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "good_standing_override,": {"name": "good_standing_override,", "description": "Description for good_standing_override,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legacy_account__,": {"name": "legacy_account__,", "description": "Description for legacy_account__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loyalty,": {"name": "loyalty,", "description": "Description for loyalty,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ssn_org__,": {"name": "ssn_org__,", "description": "Description for ssn_org__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reason_for_vat_exemption,": {"name": "reason_for_vat_exemption,", "description": "Description for reason_for_vat_exemption,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "secret_answer,": {"name": "secret_answer,", "description": "Description for secret_answer,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "secret_question,": {"name": "secret_question,", "description": "Description for secret_question,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vat_number,": {"name": "vat_number,", "description": "Description for vat_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_type,": {"name": "account_type,", "description": "Description for account_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_since,": {"name": "customer_since,", "description": "Description for customer_since,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_address_id,": {"name": "primary_address_id,", "description": "Description for primary_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_billing_address_id,": {"name": "primary_billing_address_id,", "description": "Description for primary_billing_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_contact_id,": {"name": "primary_contact_id,", "description": "Description for primary_contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_ship_address_id,": {"name": "primary_ship_address_id,", "description": "Description for primary_ship_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "legal_check,": {"name": "legal_check,", "description": "Description for legal_check,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_list_id,": {"name": "price_list_id,", "description": "Description for price_list_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_account_id,": {"name": "customer_account_id,", "description": "Description for customer_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account,": {"name": "account,", "description": "Description for account,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "secret_customer,": {"name": "secret_customer,", "description": "Description for secret_customer,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_position_id,": {"name": "primary_position_id,", "description": "Description for primary_position_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_account_id,": {"name": "parent_account_id,", "description": "Description for parent_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_postpaid_segment,": {"name": "primary_postpaid_segment,", "description": "Description for primary_postpaid_segment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active_winback_case,": {"name": "active_winback_case,", "description": "Description for active_winback_case,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currenct_condition,": {"name": "currenct_condition,", "description": "Description for currenct_condition,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "manager,": {"name": "manager,", "description": "Description for manager,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_class,": {"name": "tax_class,", "description": "Description for tax_class,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_master_flag,": {"name": "is_master_flag,", "description": "Description for is_master_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_ssn,": {"name": "parent_ssn,", "description": "Description for parent_ssn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_accounts_s_org_ext", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_accounts_s_org_ext_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_accounts_s_org_ext_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_accounts_s_org_ext_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_sub_type,": {"name": "account_sub_type,", "description": "Description for account_sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automatic_credit_limit_increase,": {"name": "automatic_credit_limit_increase,", "description": "Description for automatic_credit_limit_increase,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankruptcy_date,": {"name": "bankruptcy_date,", "description": "Description for bankruptcy_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankruptcy_type,": {"name": "bankruptcy_type,", "description": "Description for bankruptcy_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "brand,": {"name": "brand,", "description": "Description for brand,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "collections_amount,": {"name": "collections_amount,", "description": "Description for collections_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_class,": {"name": "credit_class,", "description": "Description for credit_class,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_limit,": {"name": "credit_limit,", "description": "Description for credit_limit,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization_name,": {"name": "organization_name,", "description": "Description for organization_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization_type,": {"name": "organization_type,", "description": "Description for organization_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_exempt,": {"name": "tax_exempt,", "description": "Description for tax_exempt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vip_status,": {"name": "vip_status,", "description": "Description for vip_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_accounts_s_org_ext_x", "created_at": 1718885162.129057}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_activities_s_evt_act", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_activities_s_evt_act"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_activities_s_evt_act", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tasks,": {"name": "tasks,", "description": "Description for tasks,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice,": {"name": "invoice,", "description": "Description for invoice,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_id,": {"name": "session_id,", "description": "Description for session_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "screen_pop,": {"name": "screen_pop,", "description": "Description for screen_pop,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "document_product_area,": {"name": "document_product_area,", "description": "Description for document_product_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ivr_done_time,": {"name": "ivr_done_time,", "description": "Description for ivr_done_time,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "intensions,": {"name": "intensions,", "description": "Description for intensions,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "input_parameters,": {"name": "input_parameters,", "description": "Description for input_parameters,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_message,": {"name": "error_message,", "description": "Description for error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_code,": {"name": "error_code,", "description": "Description for error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "document_type,": {"name": "document_type,", "description": "Description for document_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "document_segment,": {"name": "document_segment,", "description": "Description for document_segment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "completed_by,": {"name": "completed_by,", "description": "Description for completed_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "application_country,": {"name": "application_country,", "description": "Description for application_country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount,": {"name": "amount,", "description": "Description for amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_start,": {"name": "planned_start,", "description": "Description for planned_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "due_date,": {"name": "due_date,", "description": "Description for due_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual_start,": {"name": "actual_start,", "description": "Description for actual_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual_end,": {"name": "actual_end,", "description": "Description for actual_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category,": {"name": "category,", "description": "Description for category,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution,": {"name": "resolution,", "description": "Description for resolution,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preceding_activity,": {"name": "preceding_activity,", "description": "Description for preceding_activity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_activity,": {"name": "parent_activity,", "description": "Description for parent_activity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description,": {"name": "description,", "description": "Description for description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "priority,": {"name": "priority,", "description": "Description for priority,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "to_,": {"name": "to_,", "description": "Description for to_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "from_,": {"name": "from_,", "description": "Description for from_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billable,": {"name": "billable,", "description": "Description for billable,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "repeat,": {"name": "repeat,", "description": "Description for repeat,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "alarm,": {"name": "alarm,", "description": "Description for alarm,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id,": {"name": "group_id,", "description": "Description for group_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position_id,": {"name": "position_id,", "description": "Description for position_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_ou_addr_id,": {"name": "target_ou_addr_id,", "description": "Description for target_ou_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_per_addr_id,": {"name": "target_per_addr_id,", "description": "Description for target_per_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_per_id,": {"name": "target_per_id,", "description": "Description for target_per_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_group_id,": {"name": "created_group_id,", "description": "Description for created_group_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_request_commit_time,": {"name": "service_request_commit_time,", "description": "Description for service_request_commit_time,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_id,": {"name": "sr_id,", "description": "Description for sr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offer_response,": {"name": "offer_response,", "description": "Description for offer_response,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaignid,": {"name": "campaignid,", "description": "Description for campaignid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_activities_s_evt_act", "created_at": 1718885162.1300566}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_activities_s_evt_act_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_activities_s_evt_act_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_activities_s_evt_act_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment,": {"name": "comment,", "description": "Description for comment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_activities_s_evt_act_x", "created_at": 1718885162.1300566}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_s_addr_per": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_addresses_s_addr_per", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_s_addr_per", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_addresses_s_addr_per"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_addresses_s_addr_per", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parish,": {"name": "parish,", "description": "Description for parish,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apartment_required,": {"name": "apartment_required,", "description": "Description for apartment_required,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date,": {"name": "start_date,", "description": "Description for start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_source,": {"name": "integration_source,", "description": "Description for integration_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coordinate_quality,": {"name": "coordinate_quality,", "description": "Description for coordinate_quality,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "house_number,": {"name": "house_number,", "description": "Description for house_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "municipality,": {"name": "municipality,", "description": "Description for municipality,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "congregation_code,": {"name": "congregation_code,", "description": "Description for congregation_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address_line,": {"name": "address_line,", "description": "Description for address_line,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "system_source,": {"name": "system_source,", "description": "Description for system_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "congregation,": {"name": "congregation,", "description": "Description for congregation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address_quality,": {"name": "address_quality,", "description": "Description for address_quality,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apartment_number,": {"name": "apartment_number,", "description": "Description for apartment_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "village,": {"name": "village,", "description": "Description for village,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "longitude,": {"name": "longitude,", "description": "Description for longitude,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "real_estate,": {"name": "real_estate,", "description": "Description for real_estate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "county_code,": {"name": "county_code,", "description": "Description for county_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city,": {"name": "city,", "description": "Description for city,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "zip_code,": {"name": "zip_code,", "description": "Description for zip_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tas_address_id,": {"name": "tas_address_id,", "description": "Description for tas_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "house_letter,": {"name": "house_letter,", "description": "Description for house_letter,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "latitude,": {"name": "latitude,", "description": "Description for latitude,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country,": {"name": "country,", "description": "Description for country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "county,": {"name": "county,", "description": "Description for county,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_address_id,": {"name": "parent_address_id,", "description": "Description for parent_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "municipality_code,": {"name": "municipality_code,", "description": "Description for municipality_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_date,": {"name": "end_date,", "description": "Description for end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address_name_id,": {"name": "address_name_id,", "description": "Description for address_name_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_addresses_s_addr_per", "created_at": 1718885162.1300566}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_intersection_s_con_addr": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_addresses_intersection_s_con_addr", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_intersection_s_con_addr", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_addresses_intersection_s_con_addr"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_addresses_intersection_s_con_addr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active,": {"name": "active,", "description": "Description for active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address_id,": {"name": "address_id,", "description": "Description for address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_addresses_intersection_s_con_addr", "created_at": 1718885162.1300566}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_assets_s_asset", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_assets_s_asset"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_assets_s_asset", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_description,": {"name": "asset_description,", "description": "Description for asset_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_num,": {"name": "asset_num,", "description": "Description for asset_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual_disconnect,": {"name": "actual_disconnect,", "description": "Description for actual_disconnect,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "activation_date,": {"name": "activation_date,", "description": "Description for activation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "application_country,": {"name": "application_country,", "description": "Description for application_country,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_details,": {"name": "asset_details,", "description": "Description for asset_details,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "brand,": {"name": "brand,", "description": "Description for brand,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "company_card,": {"name": "company_card,", "description": "Description for company_card,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dual_card,": {"name": "dual_card,", "description": "Description for dual_card,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pending_order,": {"name": "pending_order,", "description": "Description for pending_order,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_disconnect,": {"name": "planned_disconnect,", "description": "Description for planned_disconnect,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_plan_code,": {"name": "price_plan_code,", "description": "Description for price_plan_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attribute_name,": {"name": "primary_attribute_name,", "description": "Description for primary_attribute_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attribute_value,": {"name": "primary_attribute_value,", "description": "Description for primary_attribute_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_end_date,": {"name": "promotion_end_date,", "description": "Description for promotion_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reactivation_date,": {"name": "reactivation_date,", "description": "Description for reactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_date,": {"name": "version_date,", "description": "Description for version_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uom,": {"name": "uom,", "description": "Description for uom,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "allow_port_out,": {"name": "allow_port_out,", "description": "Description for allow_port_out,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_specification,": {"name": "call_specification,", "description": "Description for call_specification,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notice_period,": {"name": "notice_period,", "description": "Description for notice_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notice_period_end_date,": {"name": "notice_period_end_date,", "description": "Description for notice_period_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "package_code,": {"name": "package_code,", "description": "Description for package_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pin,": {"name": "pin,", "description": "Description for pin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_disconnect_reason,": {"name": "planned_disconnect_reason,", "description": "Description for planned_disconnect_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_plan_start_date,": {"name": "price_plan_start_date,", "description": "Description for price_plan_start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "puk1,": {"name": "puk1,", "description": "Description for puk1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regret_end,": {"name": "regret_end,", "description": "Description for regret_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_sub_type,": {"name": "service_sub_type,", "description": "Description for service_sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wsc_admin,": {"name": "wsc_admin,", "description": "Description for wsc_admin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "install_date,": {"name": "install_date,", "description": "Description for install_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "purchase_date,": {"name": "purchase_date,", "description": "Description for purchase_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "registered_date,": {"name": "registered_date,", "description": "Description for registered_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date,": {"name": "start_date,", "description": "Description for start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "entitlement_id,": {"name": "entitlement_id,", "description": "Description for entitlement_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agreement_id,": {"name": "agreement_id,", "description": "Description for agreement_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id,": {"name": "product_id,", "description": "Description for product_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_account_id,": {"name": "customer_account_id,", "description": "Description for customer_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_account_id,": {"name": "billing_account_id,", "description": "Description for billing_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_account_id,": {"name": "service_account_id,", "description": "Description for service_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_profile_id,": {"name": "billing_profile_id,", "description": "Description for billing_profile_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_asset_id,": {"name": "parent_asset_id,", "description": "Description for parent_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_asset_id,": {"name": "root_asset_id,", "description": "Description for root_asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_contact_id,": {"name": "primary_contact_id,", "description": "Description for primary_contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address_id,": {"name": "address_id,", "description": "Description for address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_contact_id,": {"name": "owner_contact_id,", "description": "Description for owner_contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_id,": {"name": "promotion_id,", "description": "Description for promotion_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_start_date,": {"name": "promotion_start_date,", "description": "Description for promotion_start_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscriber_integration_id,": {"name": "subscriber_integration_id,", "description": "Description for subscriber_integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_assets_s_asset", "created_at": 1718885162.1300566}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_assets_s_asset_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_assets_s_asset_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_assets_s_asset_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_end,": {"name": "binding_end,", "description": "Description for binding_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_period,": {"name": "binding_period,", "description": "Description for binding_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_start,": {"name": "binding_start,", "description": "Description for binding_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_itemisation,": {"name": "invoice_itemisation,", "description": "Description for invoice_itemisation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_plan_description,": {"name": "price_plan_description,", "description": "Description for price_plan_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "publish_number,": {"name": "publish_number,", "description": "Description for publish_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_id,": {"name": "reference_id,", "description": "Description for reference_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "secret_number,": {"name": "secret_number,", "description": "Description for secret_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_code,": {"name": "status_code,", "description": "Description for status_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_area,": {"name": "status_area,", "description": "Description for status_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suspend_end,": {"name": "suspend_end,", "description": "Description for suspend_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suspend_start,": {"name": "suspend_start,", "description": "Description for suspend_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_assets_s_asset_x", "created_at": 1718885162.1300566}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_asset_attributes_s_asset_xa": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_asset_attributes_s_asset_xa", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_asset_attributes_s_asset_xa", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_asset_attributes_s_asset_xa"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_asset_attributes_s_asset_xa", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribute_name,": {"name": "attribute_name,", "description": "Description for attribute_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "display_name,": {"name": "display_name,", "description": "Description for display_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hidden_flag,": {"name": "hidden_flag,", "description": "Description for hidden_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "data_type,": {"name": "data_type,", "description": "Description for data_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "character_value,": {"name": "character_value,", "description": "Description for character_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_value,": {"name": "number_value,", "description": "Description for number_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_value,": {"name": "date_value,", "description": "Description for date_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attribute_id,": {"name": "attribute_id,", "description": "Description for attribute_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_asset_attributes_s_asset_xa", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_audit_trail_s_audit_item": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_audit_trail_s_audit_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_audit_trail_s_audit_item", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_audit_trail_s_audit_item"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_audit_trail_s_audit_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "business_component,": {"name": "business_component,", "description": "Description for business_component,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operation,": {"name": "operation,", "description": "Description for operation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "record_id,": {"name": "record_id,", "description": "Description for record_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_login,": {"name": "employee_login,", "description": "Description for employee_login,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audit_log,": {"name": "audit_log,", "description": "Description for audit_log,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operation_date,": {"name": "operation_date,", "description": "Description for operation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "base_table_name,": {"name": "base_table_name,", "description": "Description for base_table_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "child_bc_base_tbl,": {"name": "child_bc_base_tbl,", "description": "Description for child_bc_base_tbl,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "child_bc_name,": {"name": "child_bc_name,", "description": "Description for child_bc_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "child_record_id,": {"name": "child_record_id,", "description": "Description for child_record_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "field_name,": {"name": "field_name,", "description": "Description for field_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_num,": {"name": "group_num,", "description": "Description for group_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_name,": {"name": "link_name,", "description": "Description for link_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_values,": {"name": "new_values,", "description": "Description for new_values,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "node_name,": {"name": "node_name,", "description": "Description for node_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "old_values,": {"name": "old_values,", "description": "Description for old_values,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "src_dest_id,": {"name": "src_dest_id,", "description": "Description for src_dest_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "table_name,": {"name": "table_name,", "description": "Description for table_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "table_record_id,": {"name": "table_record_id,", "description": "Description for table_record_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_audit_trail_s_audit_item", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_billing_profile_s_inv_prof": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_billing_profile_s_inv_prof", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_billing_profile_s_inv_prof", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_billing_profile_s_inv_prof"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_billing_profile_s_inv_prof", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_cycle_cut_off_day,": {"name": "bill_cycle_cut_off_day,", "description": "Description for bill_cycle_cut_off_day,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frequency,": {"name": "frequency,", "description": "Description for frequency,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_type,": {"name": "bill_type,", "description": "Description for bill_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email_bill_to,": {"name": "email_bill_to,", "description": "Description for email_bill_to,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_media,": {"name": "bill_media,", "description": "Description for bill_media,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method,": {"name": "payment_method,", "description": "Description for payment_method,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_cycle,": {"name": "bill_cycle,", "description": "Description for bill_cycle,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_report_level,": {"name": "billing_report_level,", "description": "Description for billing_report_level,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_invoice_reference,": {"name": "customer_invoice_reference,", "description": "Description for customer_invoice_reference,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dd_expiry_date,": {"name": "dd_expiry_date,", "description": "Description for dd_expiry_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_fee,": {"name": "invoice_fee,", "description": "Description for invoice_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_information,": {"name": "invoice_information,", "description": "Description for invoice_information,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max__dd_transaction_amount,": {"name": "max__dd_transaction_amount,", "description": "Description for max__dd_transaction_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "no_post,": {"name": "no_post,", "description": "Description for no_post,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notification_language,": {"name": "notification_language,", "description": "Description for notification_language,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exempt_from_treatment,": {"name": "exempt_from_treatment,", "description": "Description for exempt_from_treatment,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method_provider,": {"name": "payment_method_provider,", "description": "Description for payment_method_provider,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_terms,": {"name": "payment_terms,", "description": "Description for payment_terms,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoice_specification_fee,": {"name": "invoice_specification_fee,", "description": "Description for invoice_specification_fee,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "treatment_category,": {"name": "treatment_category,", "description": "Description for treatment_category,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address_id,": {"name": "address_id,", "description": "Description for address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_billing_profile_s_inv_prof", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_contacts_s_contact", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_contacts_s_contact"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_contacts_s_contact", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pr_per_addr_id,": {"name": "pr_per_addr_id,", "description": "Description for pr_per_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_addr_id,": {"name": "x_legal_addr_id,", "description": "Description for x_legal_addr_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_legal_check,": {"name": "x_legal_check,", "description": "Description for x_legal_check,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_phone__,": {"name": "mobile_phone__,", "description": "Description for mobile_phone__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "effective_to,": {"name": "effective_to,", "description": "Description for effective_to,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email,": {"name": "email,", "description": "Description for email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "secondary_email,": {"name": "secondary_email,", "description": "Description for secondary_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "send_email_updates,": {"name": "send_email_updates,", "description": "Description for send_email_updates,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_name,": {"name": "first_name,", "description": "Description for first_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_name,": {"name": "last_name,", "description": "Description for last_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "electronic_contact_method,": {"name": "electronic_contact_method,", "description": "Description for electronic_contact_method,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_method,": {"name": "contact_method,", "description": "Description for contact_method,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "person_number,": {"name": "person_number,", "description": "Description for person_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "do_not_call,": {"name": "do_not_call,", "description": "Description for do_not_call,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "do_not_mail,": {"name": "do_not_mail,", "description": "Description for do_not_mail,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_phone___1,": {"name": "additional_phone___1,", "description": "Description for additional_phone___1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_phone___2,": {"name": "additional_phone___2,", "description": "Description for additional_phone___2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_source,": {"name": "contact_source,", "description": "Description for contact_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "disable_person___validation,": {"name": "disable_person___validation,", "description": "Description for disable_person___validation,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inspect_alternative_email,": {"name": "inspect_alternative_email,", "description": "Description for inspect_alternative_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inspect_email,": {"name": "inspect_email,", "description": "Description for inspect_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offers_by_email,": {"name": "offers_by_email,", "description": "Description for offers_by_email,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_phone__,": {"name": "primary_phone__,", "description": "Description for primary_phone__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "protected_identity,": {"name": "protected_identity,", "description": "Description for protected_identity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "selfservice_portal,": {"name": "selfservice_portal,", "description": "Description for selfservice_portal,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_type,": {"name": "contact_type,", "description": "Description for contact_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "work_phone__,": {"name": "work_phone__,", "description": "Description for work_phone__,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_account_id,": {"name": "primary_account_id,", "description": "Description for primary_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "positionid,": {"name": "positionid,", "description": "Description for positionid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birthday,": {"name": "birthday,", "description": "Description for birthday,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_foreign_flag,": {"name": "x_foreign_flag,", "description": "Description for x_foreign_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_contacts_s_contact", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_contacts_s_contact_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_contacts_s_contact_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_contacts_s_contact_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consent_to_register,": {"name": "consent_to_register,", "description": "Description for consent_to_register,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "do_not_sms_mms,": {"name": "do_not_sms_mms,", "description": "Description for do_not_sms_mms,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preferred_language_spoken,": {"name": "preferred_language_spoken,", "description": "Description for preferred_language_spoken,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preferred_language_written,": {"name": "preferred_language_written,", "description": "Description for preferred_language_written,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_contacts_s_contact_x", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_list_of_values_s_lst_of_val": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_list_of_values_s_lst_of_val", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_list_of_values_s_lst_of_val", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_list_of_values_s_lst_of_val"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_list_of_values_s_lst_of_val", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active,": {"name": "active,", "description": "Description for active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "default,": {"name": "default,", "description": "Description for default,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description,": {"name": "description,", "description": "Description for description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "high,": {"name": "high,", "description": "Description for high,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "low,": {"name": "low,", "description": "Description for low,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_type,": {"name": "sub_type,", "description": "Description for sub_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "multilingual,": {"name": "multilingual,", "description": "Description for multilingual,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code,": {"name": "code,", "description": "Description for code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order,": {"name": "order,", "description": "Description for order,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "replication_level,": {"name": "replication_level,", "description": "Description for replication_level,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "translate,": {"name": "translate,", "description": "Description for translate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "display_value,": {"name": "display_value,", "description": "Description for display_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "language_code,": {"name": "language_code,", "description": "Description for language_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_lov_id,": {"name": "parent_lov_id,", "description": "Description for parent_lov_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dt,": {"name": "dt,", "description": "Description for dt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_list_of_values_s_lst_of_val", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_notification_cx_nt_acc_pref": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_notification_cx_nt_acc_pref", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_notification_cx_nt_acc_pref", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_notification_cx_nt_acc_pref"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_notification_cx_nt_acc_pref", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "preference_name,": {"name": "preference_name,", "description": "Description for preference_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id,": {"name": "account_id,", "description": "Description for account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value,": {"name": "value,", "description": "Description for value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_notification_cx_nt_acc_pref", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_order_line_items_s_order_item", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_order_line_items_s_order_item"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_order_line_items_s_order_item", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action,": {"name": "action,", "description": "Description for action,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_as_of,": {"name": "status_as_of,", "description": "Description for status_as_of,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "list_price,": {"name": "list_price,", "description": "Description for list_price,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billable,": {"name": "billable,", "description": "Description for billable,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_carrier,": {"name": "ship_carrier,", "description": "Description for ship_carrier,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency,": {"name": "currency,", "description": "Description for currency,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comments,": {"name": "comments,", "description": "Description for comments,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "due_date,": {"name": "due_date,", "description": "Description for due_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "override_policy_discounts,": {"name": "override_policy_discounts,", "description": "Description for override_policy_discounts,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line_num,": {"name": "line_num,", "description": "Description for line_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loaner,": {"name": "loaner,", "description": "Description for loaner,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mrc_subtotal,": {"name": "mrc_subtotal,", "description": "Description for mrc_subtotal,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_note,": {"name": "customer_note,", "description": "Description for customer_note,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nrc_subtotal,": {"name": "nrc_subtotal,", "description": "Description for nrc_subtotal,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partial_ship,": {"name": "partial_ship,", "description": "Description for partial_ship,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pricing_comments,": {"name": "pricing_comments,", "description": "Description for pricing_comments,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_status,": {"name": "product_status,", "description": "Description for product_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qty,": {"name": "qty,", "description": "Description for qty,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qty_shipped,": {"name": "qty_shipped,", "description": "Description for qty_shipped,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "port_in_date,": {"name": "port_in_date,", "description": "Description for port_in_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "revenue_type,": {"name": "revenue_type,", "description": "Description for revenue_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_date,": {"name": "ship_date,", "description": "Description for ship_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_complete,": {"name": "ship_complete,", "description": "Description for ship_complete,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_via,": {"name": "ship_via,", "description": "Description for ship_via,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_together,": {"name": "ship_together,", "description": "Description for ship_together,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action_type,": {"name": "action_type,", "description": "Description for action_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_period_end,": {"name": "binding_period_end,", "description": "Description for binding_period_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_period_start,": {"name": "binding_period_start,", "description": "Description for binding_period_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_check_result,": {"name": "credit_check_result,", "description": "Description for credit_check_result,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_control_number,": {"name": "credit_control_number,", "description": "Description for credit_control_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "additional_discount_reason,": {"name": "additional_discount_reason,", "description": "Description for additional_discount_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_code,": {"name": "error_code,", "description": "Description for error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_message,": {"name": "error_message,", "description": "Description for error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "expected_delivery_date,": {"name": "expected_delivery_date,", "description": "Description for expected_delivery_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loc_name,": {"name": "loc_name,", "description": "Description for loc_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "loc_ssn,": {"name": "loc_ssn,", "description": "Description for loc_ssn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notice_period,": {"name": "notice_period,", "description": "Description for notice_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "password,": {"name": "password,", "description": "Description for password,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "penalty_override_amount,": {"name": "penalty_override_amount,", "description": "Description for penalty_override_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "planned_disconnect_date,": {"name": "planned_disconnect_date,", "description": "Description for planned_disconnect_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "portin_deadline,": {"name": "portin_deadline,", "description": "Description for portin_deadline,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "postal_tracking_id,": {"name": "postal_tracking_id,", "description": "Description for postal_tracking_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attribute_name,": {"name": "primary_attribute_name,", "description": "Description for primary_attribute_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_attribute_value,": {"name": "primary_attribute_value,", "description": "Description for primary_attribute_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_end_date,": {"name": "promotion_end_date,", "description": "Description for promotion_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reactivation_date,": {"name": "reactivation_date,", "description": "Description for reactivation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_code,": {"name": "status_code,", "description": "Description for status_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_status,": {"name": "sub_status,", "description": "Description for sub_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wsc_admin,": {"name": "wsc_admin,", "description": "Description for wsc_admin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty_recovery,": {"name": "warranty_recovery,", "description": "Description for warranty_recovery,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "write_in_product,": {"name": "write_in_product,", "description": "Description for write_in_product,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id,": {"name": "order_id,", "description": "Description for order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adj_unit_pri,": {"name": "adj_unit_pri,", "description": "Description for adj_unit_pri,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "net_price,": {"name": "net_price,", "description": "Description for net_price,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pri_adj_amt,": {"name": "pri_adj_amt,", "description": "Description for pri_adj_amt,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_id,": {"name": "asset_id,", "description": "Description for asset_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset_integration_id,": {"name": "asset_integration_id,", "description": "Description for asset_integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_account_id,": {"name": "billing_account_id,", "description": "Description for billing_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bo_order_num,": {"name": "bo_order_num,", "description": "Description for bo_order_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "integration_id,": {"name": "integration_id,", "description": "Description for integration_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "parent_order_item_id,": {"name": "parent_order_item_id,", "description": "Description for parent_order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id,": {"name": "product_id,", "description": "Description for product_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_order_item_id,": {"name": "root_order_item_id,", "description": "Description for root_order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_num,": {"name": "service_num,", "description": "Description for service_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_account_id,": {"name": "service_account_id,", "description": "Description for service_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "disconnect_reason,": {"name": "disconnect_reason,", "description": "Description for disconnect_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_description,": {"name": "product_description,", "description": "Description for product_description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_period,": {"name": "binding_period,", "description": "Description for binding_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "version_date,": {"name": "version_date,", "description": "Description for version_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "base_item_id,": {"name": "base_item_id,", "description": "Description for base_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "owner_account_id,": {"name": "owner_account_id,", "description": "Description for owner_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_expected_pred_id,": {"name": "x_expected_pred_id,", "description": "Description for x_expected_pred_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "x_previous_number,": {"name": "x_previous_number,", "description": "Description for x_previous_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_order_line_items_s_order_item", "created_at": 1718885162.1310575}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_order_line_items_s_order_item_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_order_line_items_s_order_item_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_order_line_items_s_order_item_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modification_number,": {"name": "modification_number,", "description": "Description for modification_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conflict_id,": {"name": "conflict_id,", "description": "Description for conflict_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_item_id,": {"name": "order_item_id,", "description": "Description for order_item_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lpo_retry_flag,": {"name": "lpo_retry_flag,", "description": "Description for lpo_retry_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "number_reserve_success,": {"name": "number_reserve_success,", "description": "Description for number_reserve_success,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installed_date,": {"name": "installed_date,", "description": "Description for installed_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cool_down_start,": {"name": "cool_down_start,", "description": "Description for cool_down_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "penalty_amount,": {"name": "penalty_amount,", "description": "Description for penalty_amount,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subscribers_ssn,": {"name": "subscribers_ssn,", "description": "Description for subscribers_ssn,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line_owner_check_org_num,": {"name": "line_owner_check_org_num,", "description": "Description for line_owner_check_org_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cool_down_period,": {"name": "cool_down_period,", "description": "Description for cool_down_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cool_down_end,": {"name": "cool_down_end,", "description": "Description for cool_down_end,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_last_updated,": {"name": "database_last_updated,", "description": "Description for database_last_updated,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner,": {"name": "partner,", "description": "Description for partner,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_reason,": {"name": "status_reason,", "description": "Description for status_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "validation_type,": {"name": "validation_type,", "description": "Description for validation_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_code,": {"name": "status_code,", "description": "Description for status_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "binding_period,": {"name": "binding_period,", "description": "Description for binding_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id,": {"name": "campaign_id,", "description": "Description for campaign_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_type,": {"name": "sales_type,", "description": "Description for sales_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_sales_rep,": {"name": "partner_sales_rep,", "description": "Description for partner_sales_rep,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_channel,": {"name": "sales_channel,", "description": "Description for sales_channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_code,": {"name": "project_code,", "description": "Description for project_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_origin,": {"name": "customer_origin,", "description": "Description for customer_origin,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "station_id_adsl,": {"name": "station_id_adsl,", "description": "Description for station_id_adsl,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "benefit_agreement,": {"name": "benefit_agreement,", "description": "Description for benefit_agreement,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "letter_id,": {"name": "letter_id,", "description": "Description for letter_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "line_owner_status,": {"name": "line_owner_status,", "description": "Description for line_owner_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_code,": {"name": "source_code,", "description": "Description for source_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_check_code,": {"name": "credit_check_code,", "description": "Description for credit_check_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_operator,": {"name": "current_operator,", "description": "Description for current_operator,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fixed_number_benefit_agreement,": {"name": "fixed_number_benefit_agreement,", "description": "Description for fixed_number_benefit_agreement,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mobile_number_benefit_agreement,": {"name": "mobile_number_benefit_agreement,", "description": "Description for mobile_number_benefit_agreement,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "init_status,": {"name": "init_status,", "description": "Description for init_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "db_last_updated_source,": {"name": "db_last_updated_source,", "description": "Description for db_last_updated_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type_oli,": {"name": "order_type_oli,", "description": "Description for order_type_oli,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_regret_end_date,": {"name": "original_regret_end_date,", "description": "Description for original_regret_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_trial_period,": {"name": "product_trial_period,", "description": "Description for product_trial_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_trial_period,": {"name": "promotion_trial_period,", "description": "Description for promotion_trial_period,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regret_period_end_date_calc,": {"name": "regret_period_end_date_calc,", "description": "Description for regret_period_end_date_calc,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regret_period_end_date,": {"name": "regret_period_end_date,", "description": "Description for regret_period_end_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_address,": {"name": "shop_address,", "description": "Description for shop_address,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_city,": {"name": "shop_city,", "description": "Description for shop_city,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_company,": {"name": "shop_company,", "description": "Description for shop_company,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_email_address,": {"name": "shop_email_address,", "description": "Description for shop_email_address,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_name,": {"name": "shop_name,", "description": "Description for shop_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_phone_number,": {"name": "shop_phone_number,", "description": "Description for shop_phone_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_zip_code,": {"name": "shop_zip_code,", "description": "Description for shop_zip_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_order_line_items_s_order_item_x", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_orders_s_order_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_orders_s_order_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_orders_s_order_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modification_number,": {"name": "modification_number,", "description": "Description for modification_number,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conflict_id,": {"name": "conflict_id,", "description": "Description for conflict_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id,": {"name": "order_id,", "description": "Description for order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_check_skip_flag,": {"name": "credit_check_skip_flag,", "description": "Description for credit_check_skip_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conf_letter_sent,": {"name": "conf_letter_sent,", "description": "Description for conf_letter_sent,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "smtp_error_out_flag,": {"name": "smtp_error_out_flag,", "description": "Description for smtp_error_out_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_notification_flag,": {"name": "suppress_notification_flag,", "description": "Description for suppress_notification_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installation_date,": {"name": "installation_date,", "description": "Description for installation_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "regret_start,": {"name": "regret_start,", "description": "Description for regret_start,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resend_retry_flag,": {"name": "resend_retry_flag,", "description": "Description for resend_retry_flag,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cancelled_after_ponr,": {"name": "cancelled_after_ponr,", "description": "Description for cancelled_after_ponr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "database_last_updated,": {"name": "database_last_updated,", "description": "Description for database_last_updated,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_message,": {"name": "error_message,", "description": "Description for error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_code,": {"name": "error_code,", "description": "Description for error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_sales_rep,": {"name": "partner_sales_rep,", "description": "Description for partner_sales_rep,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "primary_position_id,": {"name": "primary_position_id,", "description": "Description for primary_position_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action,": {"name": "action,", "description": "Description for action,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hold_reason,": {"name": "hold_reason,", "description": "Description for hold_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_reason,": {"name": "status_reason,", "description": "Description for status_reason,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "high_level_project,": {"name": "high_level_project,", "description": "Description for high_level_project,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner,": {"name": "partner,", "description": "Description for partner,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source_code,": {"name": "source_code,", "description": "Description for source_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "project_code,": {"name": "project_code,", "description": "Description for project_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_to_care_of,": {"name": "ship_to_care_of,", "description": "Description for ship_to_care_of,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id,": {"name": "service_id,", "description": "Description for service_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "infile_source,": {"name": "infile_source,", "description": "Description for infile_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_to_attention_of,": {"name": "ship_to_attention_of,", "description": "Description for ship_to_attention_of,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "db_last_updated_source,": {"name": "db_last_updated_source,", "description": "Description for db_last_updated_source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "batch_validate_output,": {"name": "batch_validate_output,", "description": "Description for batch_validate_output,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_orders_s_order_x", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_orders_s_order", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_orders_s_order"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_orders_s_order", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "active,": {"name": "active,", "description": "Description for active,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status_as_of,": {"name": "status_as_of,", "description": "Description for status_as_of,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "external_order_id,": {"name": "external_order_id,", "description": "Description for external_order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_date,": {"name": "order_date,", "description": "Description for order_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_,": {"name": "order_,", "description": "Description for order_,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "due,": {"name": "due,", "description": "Description for due,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "revision,": {"name": "revision,", "description": "Description for revision,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_agent_code,": {"name": "sales_agent_code,", "description": "Description for sales_agent_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_code,": {"name": "error_code,", "description": "Description for error_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "error_message,": {"name": "error_message,", "description": "Description for error_message,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "external_invoice_code,": {"name": "external_invoice_code,", "description": "Description for external_invoice_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "handling_method,": {"name": "handling_method,", "description": "Description for handling_method,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type,": {"name": "order_type,", "description": "Description for order_type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "linked_order,": {"name": "linked_order,", "description": "Description for linked_order,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_partner_code,": {"name": "sales_partner_code,", "description": "Description for sales_partner_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_account_id,": {"name": "customer_account_id,", "description": "Description for customer_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_account_id,": {"name": "billing_account_id,", "description": "Description for billing_account_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_account_id1,": {"name": "customer_account_id1,", "description": "Description for customer_account_id1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "billing_address_id,": {"name": "billing_address_id,", "description": "Description for billing_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_address_id,": {"name": "customer_address_id,", "description": "Description for customer_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel,": {"name": "channel,", "description": "Description for channel,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping_address_id,": {"name": "shipping_address_id,", "description": "Description for shipping_address_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_order_id,": {"name": "root_order_id,", "description": "Description for root_order_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "external_order_ref_id,": {"name": "external_order_ref_id,", "description": "Description for external_order_ref_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_name,": {"name": "agent_name,", "description": "Description for agent_name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_orders_s_order", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_positions_s_postn": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_positions_s_postn", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_positions_s_postn", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_positions_s_postn"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_positions_s_postn", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pdemp,": {"name": "pdemp,", "description": "Description for pdemp,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "divisionid,": {"name": "divisionid,", "description": "Description for divisionid,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name,": {"name": "name,", "description": "Description for name,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lastupdate,": {"name": "lastupdate,", "description": "Description for lastupdate,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_positions_s_postn", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_products_s_prod_int": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_products_s_prod_int", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_products_s_prod_int", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_products_s_prod_int"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_products_s_prod_int", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description,": {"name": "description,", "description": "Description for description,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product,": {"name": "product,", "description": "Description for product,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "orderable,": {"name": "orderable,", "description": "Description for orderable,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "part_num,": {"name": "part_num,", "description": "Description for part_num,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "track_as_asset,": {"name": "track_as_asset,", "description": "Description for track_as_asset,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unit_of_measure,": {"name": "unit_of_measure,", "description": "Description for unit_of_measure,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status,": {"name": "status,", "description": "Description for status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment_value,": {"name": "adjustment_value,", "description": "Description for adjustment_value,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_products_s_prod_int", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_service_request_s_srv_req", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_service_request_s_srv_req"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_service_request_s_srv_req", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr,": {"name": "sr,", "description": "Description for sr,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_creation_date_on,": {"name": "sr_creation_date_on,", "description": "Description for sr_creation_date_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_status,": {"name": "sr_status,", "description": "Description for sr_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_sub_status,": {"name": "sr_sub_status,", "description": "Description for sr_sub_status,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "summary,": {"name": "summary,", "description": "Description for summary,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type,": {"name": "type,", "description": "Description for type,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "area,": {"name": "area,", "description": "Description for area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_area,": {"name": "sub_area,", "description": "Description for sub_area,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "notes,": {"name": "notes,", "description": "Description for notes,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "case_level_1,": {"name": "case_level_1,", "description": "Description for case_level_1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "case_level_2,": {"name": "case_level_2,", "description": "Description for case_level_2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "case_level_3,": {"name": "case_level_3,", "description": "Description for case_level_3,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_1,": {"name": "product_level_1,", "description": "Description for product_level_1,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_2,": {"name": "product_level_2,", "description": "Description for product_level_2,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_level_3,": {"name": "product_level_3,", "description": "Description for product_level_3,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "suppress_notification,": {"name": "suppress_notification,", "description": "Description for suppress_notification,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution_code,": {"name": "resolution_code,", "description": "Description for resolution_code,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "root_cause,": {"name": "root_cause,", "description": "Description for root_cause,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "priority,": {"name": "priority,", "description": "Description for priority,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impact,": {"name": "impact,", "description": "Description for impact,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "severity,": {"name": "severity,", "description": "Description for severity,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "committed_date,": {"name": "committed_date,", "description": "Description for committed_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_opened,": {"name": "date_opened,", "description": "Description for date_opened,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "on_hold_till,": {"name": "on_hold_till,", "description": "Description for on_hold_till,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group,": {"name": "group,", "description": "Description for group,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_owner,": {"name": "sr_owner,", "description": "Description for sr_owner,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "responsible_group,": {"name": "responsible_group,", "description": "Description for responsible_group,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_on_resume,": {"name": "group_on_resume,", "description": "Description for group_on_resume,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id,": {"name": "customer_id,", "description": "Description for customer_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id,": {"name": "contact_id,", "description": "Description for contact_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_group,": {"name": "created_by_group,", "description": "Description for created_by_group,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asset,": {"name": "asset,", "description": "Description for asset,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source,": {"name": "source,", "description": "Description for source,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "due_date,": {"name": "due_date,", "description": "Description for due_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "external_reference_id,": {"name": "external_reference_id,", "description": "Description for external_reference_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "srtype,": {"name": "srtype,", "description": "Description for srtype,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_service_request_s_srv_req", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req_x": {"database": "bdh_raw_lv", "schema": "siebel", "name": "raw_sbl_service_request_s_srv_req_x", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_raw_lv\\siebel.yml", "original_file_path": "models\\sources\\bdh_raw_lv\\siebel.yml", "unique_id": "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req_x", "fqn": ["bdh_dbt_models", "sources", "bdh_raw_lv", "bdh_raw_lv_siebel", "raw_sbl_service_request_s_srv_req_x"], "source_name": "bdh_raw_lv_siebel", "source_description": "", "loader": "", "identifier": "raw_sbl_service_request_s_srv_req_x", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "description for raw table.", "columns": {"bdh_raw_record": {"name": "bdh_raw_record", "description": "Description for bdh_raw_record", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_row_number": {"name": "bdh_row_number", "description": "Description for bdh_row_number", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_id": {"name": "bdh_source_id", "description": "Description for bdh_source_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_type_id": {"name": "bdh_file_type_id", "description": "Description for bdh_file_type_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_path_and_name": {"name": "bdh_file_path_and_name", "description": "Description for bdh_file_path_and_name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_file_timestamp": {"name": "bdh_source_file_timestamp", "description": "Description for bdh_source_file_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_source_date": {"name": "bdh_source_date", "description": "Description for bdh_source_date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_stage_timestamp": {"name": "bdh_load_stage_timestamp", "description": "Description for bdh_load_stage_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_load_raw_timestamp": {"name": "bdh_load_raw_timestamp", "description": "Description for bdh_load_raw_timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_execution_log_id": {"name": "bdh_execution_log_id", "description": "Description for bdh_execution_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bdh_file_log_id": {"name": "bdh_file_log_id", "description": "Description for bdh_file_log_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id,": {"name": "row_id,", "description": "Description for row_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_on,": {"name": "created_on,", "description": "Description for created_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id,": {"name": "created_by_id,", "description": "Description for created_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_on,": {"name": "updated_on,", "description": "Description for updated_on,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_by_id,": {"name": "updated_by_id,", "description": "Description for updated_by_id,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sr_resolution_date,": {"name": "sr_resolution_date,", "description": "Description for sr_resolution_date,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "auto_service_notification_preference,": {"name": "auto_service_notification_preference,", "description": "Description for auto_service_notification_preference,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resolution,": {"name": "resolution,", "description": "Description for resolution,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "caused_by,": {"name": "caused_by,", "description": "Description for caused_by,", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_raw_lv.siebel.raw_sbl_service_request_s_srv_req_x", "created_at": 1718885162.1320567}, "source.bdh_dbt_models.bdh_test_lv_one_time_load.baltcom_fbb_addresses": {"database": "bdh_lv", "schema": "test", "name": "baltcom_fbb_addresses", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_test_lv\\one_time_load.yml", "original_file_path": "models\\sources\\bdh_test_lv\\one_time_load.yml", "unique_id": "source.bdh_dbt_models.bdh_test_lv_one_time_load.baltcom_fbb_addresses", "fqn": ["bdh_dbt_models", "sources", "bdh_test_lv", "bdh_test_lv_one_time_load", "baltcom_fbb_addresses"], "source_name": "bdh_test_lv_one_time_load", "source_description": "", "loader": "", "identifier": "baltcom_fbb_addresses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.baltcom_fbb_addresses", "created_at": 1718885162.1330569}, "source.bdh_dbt_models.bdh_test_lv_one_time_load.t2lv_monthly_b2b_mng_hist": {"database": "bdh_lv", "schema": "test", "name": "t2lv_monthly_b2b_mng_hist", "resource_type": "source", "package_name": "bdh_dbt_models", "path": "models\\sources\\bdh_test_lv\\one_time_load.yml", "original_file_path": "models\\sources\\bdh_test_lv\\one_time_load.yml", "unique_id": "source.bdh_dbt_models.bdh_test_lv_one_time_load.t2lv_monthly_b2b_mng_hist", "fqn": ["bdh_dbt_models", "sources", "bdh_test_lv", "bdh_test_lv_one_time_load", "t2lv_monthly_b2b_mng_hist"], "source_name": "bdh_test_lv_one_time_load", "source_description": "", "loader": "", "identifier": "t2lv_monthly_b2b_mng_hist", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bdh_lv.test.t2lv_monthly_b2b_mng_hist", "created_at": 1718885162.1330569}}, "macros": {"macro.bdh_dbt_models.ee_get_vat_coeff": {"name": "ee_get_vat_coeff", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\ee_get_vat_coeff.sql", "original_file_path": "macros\\ee_get_vat_coeff.sql", "unique_id": "macro.bdh_dbt_models.ee_get_vat_coeff", "macro_sql": "{% macro ee_get_vat_coeff(dt) %}\r\n    {% set query %}\r\n        SELECT \r\n            vat_rate + 1 AS vat_coeff\r\n        FROM {{ source('bdh_ee_analysts_tables', 'vat_rate') }}\r\n        WHERE TO_DATE(valid_from) <= TO_DATE('{{ dt }}', 'YYYY-MM-DD')\r\n          AND TO_DATE(valid_to) >= TO_DATE('{{ dt }}', 'YYYY-MM-DD')\r\n        LIMIT 1\r\n    {% endset %}\r\n\r\n    {% set results = run_query(query) %}\r\n    \r\n    {% if execute %}\r\n        {% set vat_coeff = results.columns[0].values()[0] %}\r\n    {% else %}\r\n        {% set vat_coeff = None %}\r\n    {% endif %}\r\n\r\n    {{ vat_coeff }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.8966029, "supported_languages": null}, "macro.bdh_dbt_models.generate_schema_name_for_model": {"name": "generate_schema_name_for_model", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\generate_schema_name.sql", "original_file_path": "macros\\generate_schema_name.sql", "unique_id": "macro.bdh_dbt_models.generate_schema_name_for_model", "macro_sql": "{% macro generate_schema_name_for_model(custom_schema_name, node) -%}\r\n    {%- set default_schema = target.schema -%}\r\n    {%- if target.name in ('dev', 'prod') and custom_schema_name is not none -%}\r\n        {{ custom_schema_name | trim }}\r\n    {%- elif custom_schema_name is none -%}\r\n        {{ default_schema }}\r\n    {%- else -%}\r\n        {{ default_schema }}_{{ custom_schema_name | trim }}\r\n    {%- endif -%}\r\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.8976119, "supported_languages": null}, "macro.bdh_dbt_models.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\generate_schema_name.sql", "original_file_path": "macros\\generate_schema_name.sql", "unique_id": "macro.bdh_dbt_models.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\r\n    {%- if node.resource_type == 'snapshot' -%}\r\n        {%- if not node.config.target_schema -%}\r\n            {{ exceptions.raise_compiler_error(\"Snapshots must be configured with a 'target_schema'\") }}\r\n        {%- elif target.name in ('dev', 'prod') -%}\r\n            {{ node.config.target_schema | trim }}\r\n        {%- else -%}\r\n            {{ target.schema | trim }}_{{ node.config.target_schema | trim }}\r\n        {%- endif -%}\r\n    {%- else -%}\r\n        {{ generate_schema_name_for_model(custom_schema_name, node) }}\r\n    {%- endif -%}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.bdh_dbt_models.generate_schema_name_for_model"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.8986044, "supported_languages": null}, "macro.bdh_dbt_models.snowflake__get_external_build_plan": {"name": "snowflake__get_external_build_plan", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\get_external_build_plan.sql", "original_file_path": "macros\\get_external_build_plan.sql", "unique_id": "macro.bdh_dbt_models.snowflake__get_external_build_plan", "macro_sql": "{% macro snowflake__get_external_build_plan(source_node) %}\r\n\r\n    {% set build_plan = [] %}\r\n    {%- set external = source_node.external -%}\r\n\r\n    {% set old_relation = adapter.get_relation(\r\n        database = source_node.database,\r\n        schema = source_node.schema,\r\n        identifier = source_node.identifier\r\n    ) %}\r\n    \r\n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\r\n\r\n    {% if source_node.external.get('snowpipe', none) is not none %}\r\n    \r\n        {% if create_or_replace %}\r\n            {% set build_plan = build_plan + (\r\n                [\r\n                    dbt_external_tables.snowflake_create_empty_table(source_node),\r\n                    dbt_external_tables.snowflake_get_copy_sql(source_node, explicit_transaction=true),\r\n                    dbt_external_tables.snowflake_create_snowpipe(source_node)\r\n                ]\r\n            ) %}\r\n        {% else %}\r\n            {% set build_plan = build_plan + [dbt_external_tables.snowflake_refresh_snowpipe(source_node)] %}\r\n        {% endif %}\r\n\r\n            \r\n    {% else %}\r\n    \r\n        {% if create_or_replace %}\r\n            {% set build_plan = build_plan + (\r\n                [dbt_external_tables.create_external_table(source_node)]\r\n            ) %}\r\n        {% else %}\r\n            {% set build_plan = build_plan + [dbt_external_tables.refresh_external_table(source_node)] %}\r\n        {% endif %}\r\n\r\n    {% endif %}\r\n\r\n    {% do return(build_plan) %}\r\n\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.snowflake_create_empty_table", "macro.dbt_external_tables.snowflake_get_copy_sql", "macro.dbt_external_tables.snowflake_create_snowpipe", "macro.dbt_external_tables.snowflake_refresh_snowpipe", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.8996022, "supported_languages": null}, "macro.bdh_dbt_models.insert_overwrite_config": {"name": "insert_overwrite_config", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\insert_overwrite_config.sql", "original_file_path": "macros\\insert_overwrite_config.sql", "unique_id": "macro.bdh_dbt_models.insert_overwrite_config", "macro_sql": "{% macro insert_overwrite_config(unique_key='dt') %}\r\n{{\r\n  config(\r\n    materialized='incremental',\r\n    incremental_strategy='delete+insert',\r\n    unique_key=unique_key\r\n  )\r\n}}\r\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9006023, "supported_languages": null}, "macro.bdh_dbt_models.query_comment": {"name": "query_comment", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\query_comment.sql", "original_file_path": "macros\\query_comment.sql", "unique_id": "macro.bdh_dbt_models.query_comment", "macro_sql": "{% macro query_comment(node) %}\r\n    {%- set comment_dict = {} -%}\r\n    {%- do comment_dict.update(\r\n        app='dbt',\r\n        dbt_version=dbt_version,\r\n        profile_name=target.get('profile_name'),\r\n        target_name=target.get('target_name'),\r\n        target_user=target.get('user')\r\n    ) -%}\r\n    {%- if node is not none -%}\r\n      {%- do comment_dict.update(\r\n        file=node.original_file_path,\r\n        node_id=node.unique_id,\r\n        node_name=node.name,\r\n        resource_type=node.resource_type,\r\n        package_name=node.package_name,\r\n        relation={\r\n            \"database\": node.database,\r\n            \"schema\": node.schema,\r\n            \"identifier\": node.identifier\r\n        }\r\n      ) -%}\r\n    {% else %}\r\n      {%- do comment_dict.update(node_id='internal') -%}\r\n    {%- endif -%}\r\n    {% do return(tojson(comment_dict)) %}\r\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9016023, "supported_languages": null}, "macro.bdh_dbt_models.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "bdh_dbt_models", "path": "macros\\set_query_tag.sql", "original_file_path": "macros\\set_query_tag.sql", "unique_id": "macro.bdh_dbt_models.set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\r\n  {% set tag_dict = {\"model_name\": model.name, \"user_name\": target.user,\"user_role\": target.role} %}\r\n  {% set new_query_tag = tojson(tag_dict) %}\r\n  {% if new_query_tag %}\r\n    {% set original_query_tag = get_current_query_tag() %}\r\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\r\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\r\n    {{ return(original_query_tag)}}\r\n  {% endif %}\r\n  {{ return(none)}}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9026096, "supported_languages": null}, "macro.dbt_snowflake.get_column_comment_sql": {"name": "get_column_comment_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.get_column_comment_sql", "macro_sql": "{% macro get_column_comment_sql(column_name, column_dict) -%}\n  {% if (column_name|upper in column_dict) -%}\n    {% set matched_column = column_name|upper -%}\n  {% elif (column_name|lower in column_dict) -%}\n    {% set matched_column = column_name|lower -%}\n  {% elif (column_name in column_dict) -%}\n    {% set matched_column = column_name -%}\n  {% else -%}\n    {% set matched_column = None -%}\n  {% endif -%}\n  {% if matched_column -%}\n    {{ adapter.quote(column_name) }} COMMENT $${{ column_dict[matched_column]['description'] | replace('$', '[$]') }}$$\n  {%- else -%}\n    {{ adapter.quote(column_name) }} COMMENT $$$$\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9106152, "supported_languages": null}, "macro.dbt_snowflake.get_persist_docs_column_list": {"name": "get_persist_docs_column_list", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.get_persist_docs_column_list", "macro_sql": "{% macro get_persist_docs_column_list(model_columns, query_columns) %}\n(\n  {% for column_name in query_columns %}\n    {{ get_column_comment_sql(column_name, model_columns) }}\n    {{- \", \" if not loop.last else \"\" }}\n  {% endfor %}\n)\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_column_comment_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9106152, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_columns_in_relation": {"name": "snowflake__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_columns_in_relation", "macro_sql": "{% macro snowflake__get_columns_in_relation(relation) -%}\n  {%- set sql -%}\n    describe table {{ relation }}\n  {%- endset -%}\n  {%- set result = run_query(sql) -%}\n\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many columns in relation {{ relation }}! dbt can only get\n      information about relations with fewer than {{ maximum }} columns.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n\n  {% set columns = [] %}\n  {% for row in result %}\n    {% do columns.append(api.Column.from_description(row['name'], row['type'])) %}\n  {% endfor %}\n  {% do return(columns) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9116137, "supported_languages": null}, "macro.dbt_snowflake.snowflake__list_schemas": {"name": "snowflake__list_schemas", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__list_schemas", "macro_sql": "{% macro snowflake__list_schemas(database) -%}\n  {# 10k limit from here: https://docs.snowflake.net/manuals/sql-reference/sql/show-schemas.html#usage-notes #}\n  {% set maximum = 10000 %}\n  {% set sql -%}\n    show terse schemas in database {{ database }}\n    limit {{ maximum }}\n  {%- endset %}\n  {% set result = run_query(sql) %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in database {{ database }}! dbt can only get\n      information about databases with fewer than {{ maximum }} schemas.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {{ return(result) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9116137, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_paginated_relations_array": {"name": "snowflake__get_paginated_relations_array", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_paginated_relations_array", "macro_sql": "{% macro snowflake__get_paginated_relations_array(max_iter, max_results_per_iter, max_total_results, schema_relation, watermark) %}\n\n  {% set paginated_relations = [] %}\n\n  {% for _ in range(0, max_iter) %}\n\n      {%- set paginated_sql -%}\n         show terse objects in {{ schema_relation }} limit {{ max_results_per_iter }} from '{{ watermark.table_name }}'\n      {%- endset -%}\n\n      {%- set paginated_result = run_query(paginated_sql) %}\n      {%- set paginated_n = (paginated_result | length) -%}\n\n      {#\n        terminating condition: if there are 0 records in the result we reached\n        the end exactly on the previous iteration\n      #}\n      {%- if paginated_n == 0 -%}\n        {%- break -%}\n      {%- endif -%}\n\n      {#\n        terminating condition: At some point the user needs to be reasonable with how\n        many objects are contained in their schemas. Since there was already\n        one iteration before attempting pagination, loop.index == max_iter means\n        the limit has been surpassed.\n      #}\n\n      {%- if loop.index == max_iter -%}\n        {%- set msg -%}\n           dbt will list a maximum of {{ max_total_results }} objects in schema {{ schema_relation }}.\n           Your schema exceeds this limit. Please contact support@getdbt.com for troubleshooting tips,\n           or review and reduce the number of objects contained.\n        {%- endset -%}\n\n        {% do exceptions.raise_compiler_error(msg) %}\n      {%- endif -%}\n\n      {%- do paginated_relations.append(paginated_result) -%}\n      {% set watermark.table_name = paginated_result.columns[1].values()[-1] %}\n\n      {#\n        terminating condition: paginated_n < max_results_per_iter means we reached the end\n      #}\n      {%- if paginated_n < max_results_per_iter -%}\n         {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n\n  {{ return(paginated_relations) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9126134, "supported_languages": null}, "macro.dbt_snowflake.snowflake__list_relations_without_caching": {"name": "snowflake__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__list_relations_without_caching", "macro_sql": "{% macro snowflake__list_relations_without_caching(schema_relation, max_iter=10, max_results_per_iter=10000) %}\n\n  {%- set max_total_results = max_results_per_iter * max_iter -%}\n\n  {%- set sql -%}\n    show terse objects in {{ schema_relation }} limit {{ max_results_per_iter }}\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n\n  {%- set n = (result | length) -%}\n  {%- set watermark = namespace(table_name=result.columns[1].values()[-1]) -%}\n  {%- set paginated = namespace(result=[]) -%}\n\n  {% if n >= max_results_per_iter %}\n\n    {% set paginated.result = snowflake__get_paginated_relations_array(\n         max_iter,\n         max_results_per_iter,\n         max_total_results,\n         schema_relation,\n         watermark\n       )\n    %}\n\n  {% endif %}\n\n  {%- set all_results_array = [result] + paginated.result -%}\n  {%- set result = result.merge(all_results_array) -%}\n  {%- do return(result) -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_snowflake.snowflake__get_paginated_relations_array"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9136133, "supported_languages": null}, "macro.dbt_snowflake.snowflake__check_schema_exists": {"name": "snowflake__check_schema_exists", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__check_schema_exists", "macro_sql": "{% macro snowflake__check_schema_exists(information_schema, schema) -%}\n  {% call statement('check_schema_exists', fetch_result=True) -%}\n        select count(*)\n        from {{ information_schema }}.schemata\n        where upper(schema_name) = upper('{{ schema }}')\n            and upper(catalog_name) = upper('{{ information_schema.database }}')\n  {%- endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9146132, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_column_type": {"name": "snowflake__alter_column_type", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_column_type", "macro_sql": "{% macro snowflake__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} alter {{ adapter.quote(column_name) }} set data type {{ new_column_type }};\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9146132, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_relation_comment": {"name": "snowflake__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_relation_comment", "macro_sql": "{% macro snowflake__alter_relation_comment(relation, relation_comment) -%}\n    {%- if relation.is_dynamic_table -%}\n        {%- set relation_type = 'dynamic table' -%}\n    {%- else -%}\n        {%- set relation_type = relation.type -%}\n    {%- endif -%}\n    comment on {{ relation_type }} {{ relation }} IS $${{ relation_comment | replace('$', '[$]') }}$$;\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9146132, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_column_comment": {"name": "snowflake__alter_column_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_column_comment", "macro_sql": "{% macro snowflake__alter_column_comment(relation, column_dict) -%}\n    {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n    {% if relation.is_dynamic_table -%}\n        {% set relation_type = \"table\" %}\n    {% else -%}\n        {% set relation_type = relation.type %}\n    {% endif %}\n    alter {{ relation_type }} {{ relation }} alter\n    {% for column_name in existing_columns if (column_name in existing_columns) or (column_name|lower in existing_columns) %}\n        {{ get_column_comment_sql(column_name, column_dict) }} {{- ',' if not loop.last else ';' }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_column_comment_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9156132, "supported_languages": null}, "macro.dbt_snowflake.get_current_query_tag": {"name": "get_current_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.get_current_query_tag", "macro_sql": "{% macro get_current_query_tag() -%}\n  {{ return(run_query(\"show parameters like 'query_tag' in session\").rows[0]['value']) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9156132, "supported_languages": null}, "macro.dbt_snowflake.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n    {{ return(adapter.dispatch('set_query_tag', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9166129, "supported_languages": null}, "macro.dbt_snowflake.snowflake__set_query_tag": {"name": "snowflake__set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__set_query_tag", "macro_sql": "{% macro snowflake__set_query_tag() -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% set original_query_tag = get_current_query_tag() %}\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\n    {{ return(original_query_tag)}}\n  {% endif %}\n  {{ return(none)}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9166129, "supported_languages": null}, "macro.dbt_snowflake.unset_query_tag": {"name": "unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n    {{ return(adapter.dispatch('unset_query_tag', 'dbt')(original_query_tag)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.91762, "supported_languages": null}, "macro.dbt_snowflake.snowflake__unset_query_tag": {"name": "snowflake__unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__unset_query_tag", "macro_sql": "{% macro snowflake__unset_query_tag(original_query_tag) -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% if original_query_tag %}\n      {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n      {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n      {{ log(\"No original query_tag, unsetting parameter.\") }}\n      {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.917856, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns": {"name": "snowflake__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns", "macro_sql": "{% macro snowflake__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n    {% if relation.is_dynamic_table -%}\n        {% set relation_type = \"dynamic table\" %}\n    {% else -%}\n        {% set relation_type = relation.type %}\n    {% endif %}\n\n    {% if add_columns %}\n\n    {% set sql -%}\n       alter {{ relation_type }} {{ relation }} add column\n          {% for column in add_columns %}\n            {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n          {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n    {% endif %}\n\n    {% if remove_columns %}\n\n    {% set sql -%}\n        alter {{ relation_type }} {{ relation }} drop column\n            {% for column in remove_columns %}\n                {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.919396, "supported_languages": null}, "macro.dbt_snowflake.snowflake_dml_explicit_transaction": {"name": "snowflake_dml_explicit_transaction", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake_dml_explicit_transaction", "macro_sql": "{% macro snowflake_dml_explicit_transaction(dml) %}\n  {#\n    Use this macro to wrap all INSERT, MERGE, UPDATE, DELETE, and TRUNCATE\n    statements before passing them into run_query(), or calling in the 'main' statement\n    of a materialization\n  #}\n  {% set dml_transaction -%}\n    begin;\n    {{ dml }};\n    commit;\n  {%- endset %}\n\n  {% do return(dml_transaction) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.919396, "supported_languages": null}, "macro.dbt_snowflake.snowflake__truncate_relation": {"name": "snowflake__truncate_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__truncate_relation", "macro_sql": "{% macro snowflake__truncate_relation(relation) -%}\n  {% set truncate_dml %}\n    truncate table {{ relation }}\n  {% endset %}\n  {% call statement('truncate_relation') -%}\n    {{ snowflake_dml_explicit_transaction(truncate_dml) }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9199226, "supported_languages": null}, "macro.dbt_snowflake.snowflake__copy_grants": {"name": "snowflake__copy_grants", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\apply_grants.sql", "original_file_path": "macros\\apply_grants.sql", "unique_id": "macro.dbt_snowflake.snowflake__copy_grants", "macro_sql": "{% macro snowflake__copy_grants() %}\n    {% set copy_grants = config.get('copy_grants', False) %}\n    {{ return(copy_grants) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9199226, "supported_languages": null}, "macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement": {"name": "snowflake__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\apply_grants.sql", "original_file_path": "macros\\apply_grants.sql", "unique_id": "macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro snowflake__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(False) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9199226, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog": {"name": "snowflake__get_catalog", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog", "macro_sql": "{% macro snowflake__get_catalog(information_schema, schemas) -%}\n\n    {% set query %}\n        with tables as (\n            {{ snowflake__get_catalog_tables_sql(information_schema) }}\n            {{ snowflake__get_catalog_schemas_where_clause_sql(schemas) }}\n        ),\n        columns as (\n            {{ snowflake__get_catalog_columns_sql(information_schema) }}\n            {{ snowflake__get_catalog_schemas_where_clause_sql(schemas) }}\n        )\n        {{ snowflake__get_catalog_results_sql() }}\n    {%- endset -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql", "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.922965, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_relations": {"name": "snowflake__get_catalog_relations", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_relations", "macro_sql": "{% macro snowflake__get_catalog_relations(information_schema, relations) -%}\n\n    {% set query %}\n        with tables as (\n            {{ snowflake__get_catalog_tables_sql(information_schema) }}\n            {{ snowflake__get_catalog_relations_where_clause_sql(relations) }}\n        ),\n        columns as (\n            {{ snowflake__get_catalog_columns_sql(information_schema) }}\n            {{ snowflake__get_catalog_relations_where_clause_sql(relations) }}\n        )\n        {{ snowflake__get_catalog_results_sql() }}\n    {%- endset -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql", "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.922965, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_tables_sql": {"name": "snowflake__get_catalog_tables_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro_sql": "{% macro snowflake__get_catalog_tables_sql(information_schema) -%}\n    select\n        table_catalog as \"table_database\",\n        table_schema as \"table_schema\",\n        table_name as \"table_name\",\n        coalesce(table_type, 'DYNAMIC TABLE') as \"table_type\",\n        comment as \"table_comment\",\n\n        -- note: this is the _role_ that owns the table\n        table_owner as \"table_owner\",\n\n        'Clustering Key' as \"stats:clustering_key:label\",\n        clustering_key as \"stats:clustering_key:value\",\n        'The key used to cluster this table' as \"stats:clustering_key:description\",\n        (clustering_key is not null) as \"stats:clustering_key:include\",\n\n        'Row Count' as \"stats:row_count:label\",\n        row_count as \"stats:row_count:value\",\n        'An approximate count of rows in this table' as \"stats:row_count:description\",\n        (row_count is not null) as \"stats:row_count:include\",\n\n        'Approximate Size' as \"stats:bytes:label\",\n        bytes as \"stats:bytes:value\",\n        'Approximate size of the table as reported by Snowflake' as \"stats:bytes:description\",\n        (bytes is not null) as \"stats:bytes:include\",\n\n        'Last Modified' as \"stats:last_modified:label\",\n        to_varchar(convert_timezone('UTC', last_altered), 'yyyy-mm-dd HH24:MI'||'UTC') as \"stats:last_modified:value\",\n        'The timestamp for last update/change' as \"stats:last_modified:description\",\n        (last_altered is not null and table_type='BASE TABLE') as \"stats:last_modified:include\"\n    from {{ information_schema }}.tables\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.922965, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_columns_sql": {"name": "snowflake__get_catalog_columns_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro_sql": "{% macro snowflake__get_catalog_columns_sql(information_schema) -%}\n    select\n        table_catalog as \"table_database\",\n        table_schema as \"table_schema\",\n        table_name as \"table_name\",\n\n        column_name as \"column_name\",\n        ordinal_position as \"column_index\",\n        data_type as \"column_type\",\n        comment as \"column_comment\"\n    from {{ information_schema }}.columns\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9243536, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_results_sql": {"name": "snowflake__get_catalog_results_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro_sql": "{% macro snowflake__get_catalog_results_sql() -%}\n    select *\n    from tables\n    join columns using (\"table_database\", \"table_schema\", \"table_name\")\n    order by \"column_index\"\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9243536, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql": {"name": "snowflake__get_catalog_schemas_where_clause_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql", "macro_sql": "{% macro snowflake__get_catalog_schemas_where_clause_sql(schemas) -%}\n    where ({%- for schema in schemas -%}\n        upper(\"table_schema\") = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9243536, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql": {"name": "snowflake__get_catalog_relations_where_clause_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql", "macro_sql": "{% macro snowflake__get_catalog_relations_where_clause_sql(relations) -%}\n    where (\n        {%- for relation in relations -%}\n            {% if relation.schema and relation.identifier %}\n                (\n                    upper(\"table_schema\") = upper('{{ relation.schema }}')\n                    and upper(\"table_name\") = upper('{{ relation.identifier }}')\n                )\n            {% elif relation.schema %}\n                (\n                    upper(\"table_schema\") = upper('{{ relation.schema }}')\n                )\n            {% else %}\n                {% do exceptions.raise_compiler_error(\n                    '`get_catalog_relations` requires a list of relations, each with a schema'\n                ) %}\n            {% endif %}\n\n            {%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.925362, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_relation_last_modified": {"name": "snowflake__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\metadata.sql", "original_file_path": "macros\\metadata.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_relation_last_modified", "macro_sql": "{% macro snowflake__get_relation_last_modified(information_schema, relations) -%}\n\n  {%- call statement('last_modified', fetch_result=True) -%}\n        select table_schema as schema,\n               table_name as identifier,\n               last_altered as last_modified,\n               {{ current_timestamp() }} as snapshotted_at\n        from {{ information_schema }}.tables\n        where (\n          {%- for relation in relations -%}\n            (upper(table_schema) = upper('{{ relation.schema }}') and\n             upper(table_name) = upper('{{ relation.identifier }}')){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n  {%- endcall -%}\n\n  {{ return(load_result('last_modified')) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.925362, "supported_languages": null}, "macro.dbt_snowflake.snowflake__can_clone_table": {"name": "snowflake__can_clone_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\clone.sql", "original_file_path": "macros\\materializations\\clone.sql", "unique_id": "macro.dbt_snowflake.snowflake__can_clone_table", "macro_sql": "{% macro snowflake__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9263525, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_or_replace_clone": {"name": "snowflake__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\clone.sql", "original_file_path": "macros\\materializations\\clone.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_or_replace_clone", "macro_sql": "{% macro snowflake__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      {{ \"transient\" if config.get(\"transient\", true) }}\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n      {{ \"copy grants\" if config.get(\"copy_grants\", false) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9263525, "supported_languages": null}, "macro.dbt_snowflake.materialization_dynamic_table_snowflake": {"name": "materialization_dynamic_table_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\dynamic_table.sql", "original_file_path": "macros\\materializations\\dynamic_table.sql", "unique_id": "macro.dbt_snowflake.materialization_dynamic_table_snowflake", "macro_sql": "{% materialization dynamic_table, adapter='snowflake' %}\n\n    {% set query_tag = set_query_tag() %}\n\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.DynamicTable) %}\n\n    {{ run_hooks(pre_hooks) }}\n\n    {% set build_sql = dynamic_table_get_build_sql(existing_relation, target_relation) %}\n\n    {% if build_sql == '' %}\n        {{ dynamic_table_execute_no_op(target_relation) }}\n    {% else %}\n        {{ dynamic_table_execute_build_sql(build_sql, existing_relation, target_relation) }}\n    {% endif %}\n\n    {{ run_hooks(post_hooks) }}\n\n    {% do unset_query_tag(query_tag) %}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.load_cached_relation", "macro.dbt.run_hooks", "macro.dbt_snowflake.dynamic_table_get_build_sql", "macro.dbt_snowflake.dynamic_table_execute_no_op", "macro.dbt_snowflake.dynamic_table_execute_build_sql", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9283571, "supported_languages": ["sql"]}, "macro.dbt_snowflake.dynamic_table_get_build_sql": {"name": "dynamic_table_get_build_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\dynamic_table.sql", "original_file_path": "macros\\materializations\\dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_get_build_sql", "macro_sql": "{% macro dynamic_table_get_build_sql(existing_relation, target_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_dynamic_table %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = snowflake__get_dynamic_table_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"No configuration changes were identified on: `\" ~ target_relation ~ \"`. Continuing.\") }}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = snowflake__get_alter_dynamic_table_as_sql(existing_relation, configuration_changes, target_relation, sql) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'continue', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario: `\" ~ on_configuration_change ~ \"`\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_sql", "macro.dbt.get_replace_sql", "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes", "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9303553, "supported_languages": null}, "macro.dbt_snowflake.dynamic_table_execute_no_op": {"name": "dynamic_table_execute_no_op", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\dynamic_table.sql", "original_file_path": "macros\\materializations\\dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_execute_no_op", "macro_sql": "{% macro dynamic_table_execute_no_op(relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9303553, "supported_languages": null}, "macro.dbt_snowflake.dynamic_table_execute_build_sql": {"name": "dynamic_table_execute_build_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\dynamic_table.sql", "original_file_path": "macros\\materializations\\dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_execute_build_sql", "macro_sql": "{% macro dynamic_table_execute_build_sql(build_sql, existing_relation, target_relation) %}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9303553, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes": {"name": "snowflake__get_dynamic_table_configuration_changes", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\dynamic_table.sql", "original_file_path": "macros\\materializations\\dynamic_table.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes", "macro_sql": "{% macro snowflake__get_dynamic_table_configuration_changes(existing_relation, new_config) -%}\n    {% set _existing_dynamic_table = snowflake__describe_dynamic_table(existing_relation) %}\n    {% set _configuration_changes = existing_relation.dynamic_table_config_changeset(_existing_dynamic_table, new_config) %}\n    {% do return(_configuration_changes) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__describe_dynamic_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9313562, "supported_languages": null}, "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type": {"name": "dbt_snowflake_get_tmp_relation_type", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "unique_id": "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type", "macro_sql": "{% macro dbt_snowflake_get_tmp_relation_type(strategy, unique_key, language) %}\n{%- set tmp_relation_type = config.get('tmp_relation_type') -%}\n  /* {#\n       High-level principles:\n       If we are running multiple statements (DELETE + INSERT),\n       and we want to guarantee identical inputs to both statements,\n       then we must first save the model query results as a temporary table\n       (which presumably comes with a performance cost).\n       If we are running a single statement (MERGE or INSERT alone),\n       we _may_ save the model query definition as a view instead,\n       for (presumably) faster overall incremental processing.\n\n       Low-level specifics:\n       If an invalid option is specified, then we will raise an\n       excpetion with corresponding message.\n\n       Languages other than SQL (like Python) will use a temporary table.\n       With the default strategy of merge, the user may choose between a temporary\n       table and view (defaulting to view).\n\n       The append strategy can use a view because it will run a single INSERT statement.\n\n       When unique_key is none, the delete+insert strategy can use a view beacuse a\n       single INSERT statement is run with no DELETES as part of the statement.\n       Otherwise, play it safe by using a temporary table.\n  #} */\n\n  {% if language == \"python\" and tmp_relation_type is not none %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models currently only support 'table' for tmp_relation_type but \"\n       ~ tmp_relation_type ~ \" was specified.\"\n    ) %}\n  {% endif %}\n\n  {% if strategy == \"delete+insert\" and tmp_relation_type is not none and tmp_relation_type != \"table\" and unique_key is not none %}\n    {% do exceptions.raise_compiler_error(\n      \"In order to maintain consistent results when `unique_key` is not none,\n      the `delete+insert` strategy only supports `table` for `tmp_relation_type` but \"\n      ~ tmp_relation_type ~ \" was specified.\"\n      )\n  %}\n  {% endif %}\n\n  {% if language != \"sql\" %}\n    {{ return(\"table\") }}\n  {% elif tmp_relation_type == \"table\" %}\n    {{ return(\"table\") }}\n  {% elif tmp_relation_type == \"view\" %}\n    {{ return(\"view\") }}\n  {% elif strategy in (\"default\", \"merge\", \"append\") %}\n    {{ return(\"view\") }}\n  {% elif strategy == \"delete+insert\" and unique_key is none %}\n    {{ return(\"view\") }}\n  {% else %}\n    {{ return(\"table\") }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9343572, "supported_languages": null}, "macro.dbt_snowflake.materialization_incremental_snowflake": {"name": "materialization_incremental_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "unique_id": "macro.dbt_snowflake.materialization_incremental_snowflake", "macro_sql": "{% materialization incremental, adapter='snowflake', supported_languages=['sql', 'python'] -%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {#-- Set vars --#}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] -%}\n  {% set target_relation = this %}\n  {% set existing_relation = load_relation(this) %}\n\n  {#-- The temp relation will be a view (faster) or temp table, depending on upsert/merge strategy --#}\n  {%- set unique_key = config.get('unique_key') -%}\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set tmp_relation_type = dbt_snowflake_get_tmp_relation_type(incremental_strategy, unique_key, language) %}\n  {% set tmp_relation = make_temp_relation(this).incorporate(type=tmp_relation_type) %}\n\n  {% set grant_config = config.get('grants') %}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n    {#-- Can't overwrite a view with a table - we must drop --#}\n    {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and this model is a table.\") }}\n    {% do adapter.drop_relation(existing_relation) %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n  {% elif full_refresh_mode %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% else %}\n    {#-- Create the temp relation, either as a view or as a temp table --#}\n    {% if tmp_relation_type == 'view' %}\n        {%- call statement('create_tmp_relation') -%}\n          {{ snowflake__create_view_as_with_temp_flag(tmp_relation, compiled_code, True) }}\n        {%- endcall -%}\n    {% else %}\n        {%- call statement('create_tmp_relation', language=language) -%}\n          {{ create_table_as(True, tmp_relation, compiled_code, language) }}\n        {%- endcall -%}\n    {% endif %}\n\n    {% do adapter.expand_target_column_types(\n           from_relation=tmp_relation,\n           to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': tmp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n\n    {%- call statement('main') -%}\n      {{ strategy_sql_macro_func(strategy_arg_dict) }}\n    {%- endcall -%}\n  {% endif %}\n\n  {% do drop_relation_if_exists(tmp_relation) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = target_relation.incorporate(type='table') %}\n\n  {% set should_revoke =\n   should_revoke(existing_relation.is_table, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type", "macro.dbt.make_temp_relation", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro.dbt.process_schema_changes", "macro.dbt.drop_relation_if_exists", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.937355, "supported_languages": ["sql", "python"]}, "macro.dbt_snowflake.snowflake__get_incremental_default_sql": {"name": "snowflake__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_default_sql", "macro_sql": "{% macro snowflake__get_incremental_default_sql(arg_dict) %}\n  {{ return(get_incremental_merge_sql(arg_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9383552, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_merge_sql": {"name": "snowflake__get_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\merge.sql", "original_file_path": "macros\\materializations\\merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_merge_sql", "macro_sql": "{% macro snowflake__get_merge_sql(target, source_sql, unique_key, dest_columns, incremental_predicates) -%}\n\n    {#\n       Workaround for Snowflake not being happy with a merge on a constant-false predicate.\n       When no unique_key is provided, this macro will do a regular insert. If a unique_key\n       is provided, then this macro will do a proper merge instead.\n    #}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute='name')) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set dml -%}\n    {%- if unique_key is none -%}\n\n        {{ sql_header if sql_header is not none }}\n\n        insert into {{ target }} ({{ dest_cols_csv }})\n        (\n            select {{ dest_cols_csv }}\n            from {{ source_sql }}\n        )\n\n    {%- else -%}\n\n        {{ default__get_merge_sql(target, source_sql, unique_key, dest_columns, incremental_predicates) }}\n\n    {%- endif -%}\n    {%- endset -%}\n\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.default__get_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9393551, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql": {"name": "snowflake__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\merge.sql", "original_file_path": "macros\\materializations\\merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql", "macro_sql": "{% macro snowflake__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) %}\n    {% set dml = default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9393551, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_merge_sql": {"name": "snowflake__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\merge.sql", "original_file_path": "macros\\materializations\\merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_merge_sql", "macro_sql": "{% macro snowflake__snapshot_merge_sql(target, source, insert_cols) %}\n    {% set dml = default__snapshot_merge_sql(target, source, insert_cols) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.940352, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_incremental_append_sql": {"name": "snowflake__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\merge.sql", "original_file_path": "macros\\materializations\\merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_append_sql", "macro_sql": "{% macro snowflake__get_incremental_append_sql(get_incremental_append_sql) %}\n    {% set dml = default__get_incremental_append_sql(get_incremental_append_sql) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.940352, "supported_languages": null}, "macro.dbt_snowflake.snowflake__load_csv_rows": {"name": "snowflake__load_csv_rows", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\seed.sql", "original_file_path": "macros\\materializations\\seed.sql", "unique_id": "macro.dbt_snowflake.snowflake__load_csv_rows", "macro_sql": "{% macro snowflake__load_csv_rows(model, agate_table) %}\n    {% set batch_size = get_batch_size() %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query('BEGIN', auto_begin=False) %}\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n        {% do adapter.add_query('COMMIT', auto_begin=False) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9433537, "supported_languages": null}, "macro.dbt_snowflake.materialization_seed_snowflake": {"name": "materialization_seed_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\seed.sql", "original_file_path": "macros\\materializations\\seed.sql", "unique_id": "macro.dbt_snowflake.materialization_seed_snowflake", "macro_sql": "{% materialization seed, adapter='snowflake' %}\n    {% set original_query_tag = set_query_tag() %}\n\n    {% set relations = materialization_seed_default() %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {{ return(relations) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_seed_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9433537, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_snapshot_snowflake": {"name": "materialization_snapshot_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot.sql", "unique_id": "macro.dbt_snowflake.materialization_snapshot_snowflake", "macro_sql": "{% materialization snapshot, adapter='snowflake' %}\n    {% set original_query_tag = set_query_tag() %}\n    {% set relations = materialization_snapshot_default() %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {{ return(relations) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_snapshot_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9443672, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_table_snowflake": {"name": "materialization_table_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "unique_id": "macro.dbt_snowflake.materialization_table_snowflake", "macro_sql": "{% materialization table, adapter='snowflake', supported_languages=['sql', 'python']%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set language = model['language'] -%}\n\n  {% set grant_config = config.get('grants') %}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database, type='table') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#-- Drop the relation if it was a view to \"convert\" it in a table. This may lead to\n    -- downtime, but it should be a relatively infrequent occurrence  #}\n  {% if old_relation is not none and not old_relation.is_table %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ drop_relation_if_exists(old_relation) }}\n  {% endif %}\n\n  {% call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9473565, "supported_languages": ["sql", "python"]}, "macro.dbt_snowflake.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "unique_id": "macro.dbt_snowflake.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation, temporary=False, table_type=none) %}\n{#- The following logic is only for backwards-compatiblity with deprecated `temporary` parameter -#}\n{% if table_type is not none %}\n    {#- Just use the table_type as-is -#}\n{% elif temporary -%}\n    {#- Case 1 when the deprecated `temporary` parameter is used without the replacement `table_type` parameter -#}\n    {%- set table_type = \"temporary\" -%}\n{% else %}\n    {#- Case 2 when the deprecated `temporary` parameter is used without the replacement `table_type` parameter -#}\n    {#- Snowflake treats \"\" as meaning \"permanent\" -#}\n    {%- set table_type = \"\" -%}\n{%- endif %}\n{{ compiled_code }}\ndef materialize(session, df, target_relation):\n    # make sure pandas exists\n    import importlib.util\n    package_name = 'pandas'\n    if importlib.util.find_spec(package_name):\n        import pandas\n        if isinstance(df, pandas.core.frame.DataFrame):\n          session.use_database(target_relation.database)\n          session.use_schema(target_relation.schema)\n          # session.write_pandas does not have overwrite function\n          df = session.createDataFrame(df)\n    {% set target_relation_name = resolve_model_name(target_relation) %}\n    df.write.mode(\"overwrite\").save_as_table('{{ target_relation_name }}', table_type='{{table_type}}')\n\ndef main(session):\n    dbt = dbtObj(session.table)\n    df = model(dbt, session)\n    materialize(session, df, dbt.this)\n    return \"OK\"\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9473565, "supported_languages": null}, "macro.dbt_snowflake.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "unique_id": "macro.dbt_snowflake.py_script_comment", "macro_sql": "{% macro py_script_comment()%}\n# To run this in snowsight, you need to select entry point to be main\n# And you may have to modify the return type to text to get the result back\n# def main(session):\n#     dbt = dbtObj(session.table)\n#     df = model(dbt, session)\n#     return df.collect()\n\n# to run this in local notebook, you need to create a session following examples https://github.com/Snowflake-Labs/sfguide-getting-started-snowpark-python\n# then you can do the following to run model\n# dbt = dbtObj(session.table)\n# df = model(dbt, session)\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9483666, "supported_languages": null}, "macro.dbt_snowflake.materialization_test_snowflake": {"name": "materialization_test_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\test.sql", "original_file_path": "macros\\materializations\\test.sql", "unique_id": "macro.dbt_snowflake.materialization_test_snowflake", "macro_sql": "{%- materialization test, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set relations = materialization_test_default() %}\n    {% do unset_query_tag(original_query_tag) %}\n    {{ return(relations) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_test_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9485633, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_view_snowflake": {"name": "materialization_view_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\materializations\\view.sql", "original_file_path": "macros\\materializations\\view.sql", "unique_id": "macro.dbt_snowflake.materialization_view_snowflake", "macro_sql": "{% materialization view, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set to_return = snowflake__create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model, for_columns=false) %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt_snowflake.snowflake__create_or_replace_view", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9490786, "supported_languages": ["sql"]}, "macro.dbt_snowflake.snowflake__get_create_sql": {"name": "snowflake__get_create_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\create.sql", "original_file_path": "macros\\relations\\create.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_sql", "macro_sql": "{% macro snowflake__get_create_sql(relation, sql) %}\n\n    {% if relation.is_dynamic_table %}\n        {{ snowflake__get_create_dynamic_table_as_sql(relation, sql) }}\n\n    {% else %}\n        {{ default__get_create_sql(relation, sql) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql", "macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9500961, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_sql": {"name": "snowflake__get_drop_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\drop.sql", "original_file_path": "macros\\relations\\drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_sql", "macro_sql": "{% macro snowflake__get_drop_sql(relation) %}\n\n    {% if relation.is_dynamic_table %}\n        {{ snowflake__get_drop_dynamic_table_sql(relation) }}\n\n    {% else %}\n        {{ default__get_drop_sql(relation) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql", "macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9500961, "supported_languages": null}, "macro.dbt_snowflake.snowflake__rename_relation": {"name": "snowflake__rename_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\rename.sql", "original_file_path": "macros\\relations\\rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__rename_relation", "macro_sql": "{% macro snowflake__rename_relation(from_relation, to_relation) -%}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ to_relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9500961, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_sql": {"name": "snowflake__get_replace_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\replace.sql", "original_file_path": "macros\\relations\\replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_sql", "macro_sql": "{% macro snowflake__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {% if existing_relation.is_dynamic_table and target_relation.is_dynamic_table %}\n        {{ snowflake__get_replace_dynamic_table_sql(target_relation, sql) }}\n\n    {% else %}\n        {{ default__get_replace_sql(existing_relation, target_relation, sql) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql", "macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9510918, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql": {"name": "snowflake__get_alter_dynamic_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\dynamic_table\\alter.sql", "original_file_path": "macros\\relations\\dynamic_table\\alter.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql", "macro_sql": "{% macro snowflake__get_alter_dynamic_table_as_sql(\n    existing_relation,\n    configuration_changes,\n    target_relation,\n    sql\n) -%}\n    {{- log('Applying ALTER to: ' ~ existing_relation) -}}\n\n    {% if configuration_changes.requires_full_refresh %}\n        {{- get_replace_sql(existing_relation, target_relation, sql) -}}\n\n    {% else %}\n\n        {%- set target_lag = configuration_changes.target_lag -%}\n        {%- if target_lag -%}{{- log('Applying UPDATE TARGET_LAG to: ' ~ existing_relation) -}}{%- endif -%}\n        {%- set snowflake_warehouse = configuration_changes.snowflake_warehouse -%}\n        {%- if snowflake_warehouse -%}{{- log('Applying UPDATE WAREHOUSE to: ' ~ existing_relation) -}}{%- endif -%}\n\n        alter dynamic table {{ existing_relation }} set\n            {% if target_lag %}target_lag = '{{ target_lag.context }}'{% endif %}\n            {% if snowflake_warehouse %}warehouse = {{ snowflake_warehouse.context }}{% endif %}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9520912, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql": {"name": "snowflake__get_create_dynamic_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\dynamic_table\\create.sql", "original_file_path": "macros\\relations\\dynamic_table\\create.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql", "macro_sql": "{% macro snowflake__get_create_dynamic_table_as_sql(relation, sql) -%}\n\n    create dynamic table {{ relation }}\n        target_lag = '{{ config.get(\"target_lag\") }}'\n        warehouse = {{ config.get(\"snowflake_warehouse\") }}\n        as (\n            {{ sql }}\n        )\n    ;\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9520912, "supported_languages": null}, "macro.dbt_snowflake.snowflake__describe_dynamic_table": {"name": "snowflake__describe_dynamic_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\dynamic_table\\describe.sql", "original_file_path": "macros\\relations\\dynamic_table\\describe.sql", "unique_id": "macro.dbt_snowflake.snowflake__describe_dynamic_table", "macro_sql": "{% macro snowflake__describe_dynamic_table(relation) %}\n    {%- set _dynamic_table_sql -%}\n        show dynamic tables\n            like '{{ relation.identifier }}'\n            in schema {{ relation.database }}.{{ relation.schema }}\n        ;\n        select\n            \"name\",\n            \"schema_name\",\n            \"database_name\",\n            \"text\",\n            \"target_lag\",\n            \"warehouse\"\n        from table(result_scan(last_query_id()))\n    {%- endset %}\n    {% set _dynamic_table = run_query(_dynamic_table_sql) %}\n\n    {% do return({'dynamic_table': _dynamic_table}) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9520912, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql": {"name": "snowflake__get_drop_dynamic_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\dynamic_table\\drop.sql", "original_file_path": "macros\\relations\\dynamic_table\\drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql", "macro_sql": "{% macro snowflake__get_drop_dynamic_table_sql(relation) %}\n    drop dynamic table if exists {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9530919, "supported_languages": null}, "macro.dbt_snowflake.snowflake__refresh_dynamic_table": {"name": "snowflake__refresh_dynamic_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\dynamic_table\\refresh.sql", "original_file_path": "macros\\relations\\dynamic_table\\refresh.sql", "unique_id": "macro.dbt_snowflake.snowflake__refresh_dynamic_table", "macro_sql": "{% macro snowflake__refresh_dynamic_table(relation) -%}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n\n    alter dynamic table {{ relation }} refresh\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9530919, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql": {"name": "snowflake__get_replace_dynamic_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\dynamic_table\\replace.sql", "original_file_path": "macros\\relations\\dynamic_table\\replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql", "macro_sql": "{% macro snowflake__get_replace_dynamic_table_sql(relation, sql) %}\n\n    create or replace dynamic table {{ relation }}\n        target_lag = '{{ config.get(\"target_lag\") }}'\n        warehouse = {{ config.get(\"snowflake_warehouse\") }}\n        as (\n            {{ sql }}\n        )\n    ;\n    {{ snowflake__refresh_dynamic_table(relation) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__refresh_dynamic_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9530919, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_table_as": {"name": "snowflake__create_table_as", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- set transient = config.get('transient', default=true) -%}\n\n  {% if temporary -%}\n    {%- set table_type = \"temporary\" -%}\n  {%- elif transient -%}\n    {%- set table_type = \"transient\" -%}\n  {%- else -%}\n    {%- set table_type = \"\" -%}\n  {%- endif %}\n\n  {%- if language == 'sql' -%}\n    {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n    {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n    {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n    {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n      {%- set cluster_by_keys = [cluster_by_keys] -%}\n    {%- endif -%}\n    {%- if cluster_by_keys is not none -%}\n      {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n    {% else %}\n      {%- set cluster_by_string = none -%}\n    {%- endif -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none }}\n\n        create or replace {{ table_type }} table {{ relation }}\n        {%- set contract_config = config.get('contract') -%}\n        {%- if contract_config.enforced -%}\n          {{ get_assert_columns_equivalent(sql) }}\n          {{ get_table_columns_and_constraints() }}\n          {% set compiled_code = get_select_subquery(compiled_code) %}\n        {% endif %}\n        {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n        (\n          {%- if cluster_by_string is not none -%}\n            select * from (\n              {{ compiled_code }}\n              ) order by ({{ cluster_by_string }})\n          {%- else -%}\n            {{ compiled_code }}\n          {%- endif %}\n        );\n      {% if cluster_by_string is not none and not temporary -%}\n        alter table {{relation}} cluster by ({{cluster_by_string}});\n      {%- endif -%}\n      {% if enable_automatic_clustering and cluster_by_string is not none and not temporary  -%}\n        alter table {{relation}} resume recluster;\n      {%- endif -%}\n\n  {%- elif language == 'python' -%}\n    {{ py_write_table(compiled_code=compiled_code, target_relation=relation, table_type=table_type) }}\n  {%- else -%}\n      {% do exceptions.raise_compiler_error(\"snowflake__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt_snowflake.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9570875, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_table_sql": {"name": "snowflake__get_drop_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\table\\drop.sql", "original_file_path": "macros\\relations\\table\\drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_table_sql", "macro_sql": "{% macro snowflake__get_drop_table_sql(relation) %}\n    drop table if exists {{ relation }} cascade\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9570875, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_table_sql": {"name": "snowflake__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\table\\rename.sql", "original_file_path": "macros\\relations\\table\\rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_table_sql", "macro_sql": "{%- macro snowflake__get_rename_table_sql(relation, new_name) -%}\n    alter table {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9570875, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_table_sql": {"name": "snowflake__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\table\\replace.sql", "original_file_path": "macros\\relations\\table\\replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_table_sql", "macro_sql": "{% macro snowflake__get_replace_table_sql(relation, sql) %}\n    {{ snowflake__create_table_as(False, relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.958595, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag": {"name": "snowflake__create_view_as_with_temp_flag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro_sql": "{% macro snowflake__create_view_as_with_temp_flag(relation, sql, is_temporary=False) -%}\n  {%- set secure = config.get('secure', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create or replace {% if secure -%}\n    secure\n  {%- endif %} {% if is_temporary -%}\n    temporary\n  {%- endif %} view {{ relation }}\n  {% if config.persist_column_docs() -%}\n    {% set model_columns = model.columns %}\n    {% set query_columns = get_columns_in_query(sql) %}\n    {{ get_persist_docs_column_list(model_columns, query_columns) }}\n\n  {%- endif %}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  {% if copy_grants -%} copy grants {%- endif %} as (\n    {{ sql }}\n  );\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt_snowflake.get_persist_docs_column_list", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.960606, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_view_as": {"name": "snowflake__create_view_as", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_view_as", "macro_sql": "{% macro snowflake__create_view_as(relation, sql) -%}\n  {{ snowflake__create_view_as_with_temp_flag(relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.960606, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_or_replace_view": {"name": "snowflake__create_or_replace_view", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_or_replace_view", "macro_sql": "{% macro snowflake__create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and not old_relation.is_view -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9626067, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_view_sql": {"name": "snowflake__get_drop_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\view\\drop.sql", "original_file_path": "macros\\relations\\view\\drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_view_sql", "macro_sql": "{% macro snowflake__get_drop_view_sql(relation) %}\n    drop view if exists {{ relation }} cascade\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9626067, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_view_sql": {"name": "snowflake__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\view\\rename.sql", "original_file_path": "macros\\relations\\view\\rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_view_sql", "macro_sql": "{%- macro snowflake__get_rename_view_sql(relation, new_name) -%}\n    alter view {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9626067, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_view_sql": {"name": "snowflake__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\relations\\view\\replace.sql", "original_file_path": "macros\\relations\\view\\replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_view_sql", "macro_sql": "{% macro snowflake__get_replace_view_sql(relation, sql) %}\n    {{ snowflake__create_view_as(relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9626067, "supported_languages": null}, "macro.dbt_snowflake.snowflake__array_construct": {"name": "snowflake__array_construct", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "unique_id": "macro.dbt_snowflake.snowflake__array_construct", "macro_sql": "{% macro snowflake__array_construct(inputs, data_type) -%}\n    array_construct( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9636028, "supported_languages": null}, "macro.dbt_snowflake.snowflake__bool_or": {"name": "snowflake__bool_or", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "unique_id": "macro.dbt_snowflake.snowflake__bool_or", "macro_sql": "{% macro snowflake__bool_or(expression) -%}\n\n    boolor_agg({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9636028, "supported_languages": null}, "macro.dbt_snowflake.snowflake__escape_single_quotes": {"name": "snowflake__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "unique_id": "macro.dbt_snowflake.snowflake__escape_single_quotes", "macro_sql": "{% macro snowflake__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9636028, "supported_languages": null}, "macro.dbt_snowflake.snowflake__right": {"name": "snowflake__right", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "unique_id": "macro.dbt_snowflake.snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt_snowflake.snowflake__safe_cast": {"name": "snowflake__safe_cast", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "unique_id": "macro.dbt_snowflake.snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp": {"name": "snowflake__current_timestamp", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\timestamps.sql", "original_file_path": "macros\\utils\\timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp", "macro_sql": "{% macro snowflake__current_timestamp() -%}\n  convert_timezone('UTC', current_timestamp())\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_string_as_time": {"name": "snowflake__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\timestamps.sql", "original_file_path": "macros\\utils\\timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_string_as_time", "macro_sql": "{% macro snowflake__snapshot_string_as_time(timestamp) -%}\n  {%- set result = \"to_timestamp_ntz('\" ~ timestamp ~ \"')\" -%}\n  {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_get_time": {"name": "snowflake__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\timestamps.sql", "original_file_path": "macros\\utils\\timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_get_time", "macro_sql": "{% macro snowflake__snapshot_get_time() -%}\n  to_timestamp_ntz({{ current_timestamp() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp_backcompat": {"name": "snowflake__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\timestamps.sql", "original_file_path": "macros\\utils\\timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp_backcompat", "macro_sql": "{% macro snowflake__current_timestamp_backcompat() %}\n  current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat": {"name": "snowflake__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros\\utils\\timestamps.sql", "original_file_path": "macros\\utils\\timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro snowflake__current_timestamp_in_utc_backcompat() %}\n  convert_timezone('UTC', {{ snowflake__current_timestamp_backcompat() }})::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_backcompat", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.964605, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9666066, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9666066, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9666066, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9666066, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9666066, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9676063, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9676063, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9676063, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9676063, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9676063, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9676063, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9686067, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9686067, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9686067, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9696066, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9696066, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\apply_grants.sql", "original_file_path": "macros\\adapters\\apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9706066, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.972606, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.972606, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9736023, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9736023, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9736023, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9736023, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      cast(null as {{ col['data_type'] }}) as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9746065, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9756064, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9756064, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9756064, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9756064, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9766061, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9766061, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\columns.sql", "original_file_path": "macros\\adapters\\columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9776058, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9786067, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\freshness.sql", "original_file_path": "macros\\adapters\\freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9796126, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9806037, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9806037, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9806037, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9806037, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.981607, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.981607, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.981607, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\indexes.sql", "original_file_path": "macros\\adapters\\indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.981607, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9836068, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.984606, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.984606, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.984606, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.984606, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.985607, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.985607, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.985607, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.985607, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9866068, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9866068, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9866068, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9866068, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9876063, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885159.9876063, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\metadata.sql", "original_file_path": "macros\\adapters\\metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0609405, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0619376, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0619376, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0619376, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0619376, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.062937, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\persist_docs.sql", "original_file_path": "macros\\adapters\\persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.062937, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0649464, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0649464, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.065941, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.065941, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.065941, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0669415, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0669415, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0669415, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0679424, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0679424, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0679424, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\relation.sql", "original_file_path": "macros\\adapters\\relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0689375, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0689375, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0689375, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0699615, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\schema.sql", "original_file_path": "macros\\adapters\\schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0699615, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\show.sql", "original_file_path": "macros\\adapters\\show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header -%}\n  {{ sql_header }}\n  {%- endif -%}\n  {%- if limit is not none -%}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n  {%- else -%}\n  {{ compiled_code }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0710504, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\show.sql", "original_file_path": "macros\\adapters\\show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "{% macro get_limit_subquery_sql(sql, limit) %}\n  {{ adapter.dispatch('get_limit_subquery_sql', 'dbt')(sql, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.071557, "supported_languages": null}, "macro.dbt.default__get_limit_subquery_sql": {"name": "default__get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\show.sql", "original_file_path": "macros\\adapters\\show.sql", "unique_id": "macro.dbt.default__get_limit_subquery_sql", "macro_sql": "{% macro default__get_limit_subquery_sql(sql, limit) %}\n    select *\n    from (\n        {{ sql }}\n    ) as model_limit_subq\n    limit {{ limit }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.071557, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0725636, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0725636, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0725636, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0725636, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0725636, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.073563, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.073563, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\timestamps.sql", "original_file_path": "macros\\adapters\\timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_snowflake.snowflake__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.073563, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\validate_sql.sql", "original_file_path": "macros\\adapters\\validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0745747, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\adapters\\validate_sql.sql", "original_file_path": "macros\\adapters\\validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0745747, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.075573, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0775678, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0775678, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0785677, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.080567, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.080567, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros\\etc\\statement.sql", "original_file_path": "macros\\etc\\statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.081567, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\accepted_values.sql", "original_file_path": "macros\\generic_test_sql\\accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0825644, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\not_null.sql", "original_file_path": "macros\\generic_test_sql\\not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0825644, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\relationships.sql", "original_file_path": "macros\\generic_test_sql\\relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0825644, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros\\generic_test_sql\\unique.sql", "original_file_path": "macros\\generic_test_sql\\unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0835695, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0835695, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_alias.sql", "original_file_path": "macros\\get_custom_name\\get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.084567, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.084567, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_database.sql", "original_file_path": "macros\\get_custom_name\\get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.085567, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.085567, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.086565, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros\\get_custom_name\\get_custom_schema.sql", "original_file_path": "macros\\get_custom_name\\get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.087565, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.087565, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.088568, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\configs.sql", "original_file_path": "macros\\materializations\\configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.088568, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.089568, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.090563, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.090563, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.090563, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\hooks.sql", "original_file_path": "macros\\materializations\\hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.090563, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\materialized_view.sql", "original_file_path": "macros\\materializations\\models\\materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0955677, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\materialized_view.sql", "original_file_path": "macros\\materializations\\models\\materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0955677, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\materialized_view.sql", "original_file_path": "macros\\materializations\\models\\materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.0965672, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\materialized_view.sql", "original_file_path": "macros\\materializations\\models\\materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.097567, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\materialized_view.sql", "original_file_path": "macros\\materializations\\models\\materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.097567, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\materialized_view.sql", "original_file_path": "macros\\materializations\\models\\materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.098567, "supported_languages": null}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\table.sql", "original_file_path": "macros\\materializations\\models\\table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1025734, "supported_languages": ["sql"]}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\view.sql", "original_file_path": "macros\\materializations\\models\\view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1055799, "supported_languages": ["sql"]}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\clone\\can_clone_table.sql", "original_file_path": "macros\\materializations\\models\\clone\\can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1055799, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\clone\\can_clone_table.sql", "original_file_path": "macros\\materializations\\models\\clone\\can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1055799, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\clone\\clone.sql", "original_file_path": "macros\\materializations\\models\\clone\\clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {% if target_relation and defer_relation and target_relation == defer_relation %}\n              {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation) }}\n          {% else %}\n              {{ create_or_replace_clone(target_relation, defer_relation) }}\n          {% endif %}\n\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1095812, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\clone\\create_or_replace_clone.sql", "original_file_path": "macros\\materializations\\models\\clone\\create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1105824, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\clone\\create_or_replace_clone.sql", "original_file_path": "macros\\materializations\\models\\clone\\create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation }} clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1105824, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.112581, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.112581, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.113581, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1145813, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "original_file_path": "macros\\materializations\\models\\incremental\\column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1145813, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1200876, "supported_languages": ["sql"]}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "original_file_path": "macros\\materializations\\models\\incremental\\is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1210983, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1250982, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.127103, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.127103, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1281002, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1281002, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\merge.sql", "original_file_path": "macros\\materializations\\models\\incremental\\merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1291008, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1335678, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1345646, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1355643, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "original_file_path": "macros\\materializations\\models\\incremental\\on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.136564, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.137564, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.137564, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.138564, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.138564, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.138564, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.139565, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.139565, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.139565, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1405616, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1405616, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\models\\incremental\\strategies.sql", "original_file_path": "macros\\materializations\\models\\incremental\\strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1405616, "supported_languages": null}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1445642, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.145565, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1465647, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1465647, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1465647, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.147564, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.147564, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.147564, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.147564, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.147564, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1485715, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1485715, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\helpers.sql", "original_file_path": "macros\\materializations\\seeds\\helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1495664, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\seeds\\seed.sql", "original_file_path": "macros\\materializations\\seeds\\seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1525643, "supported_languages": ["sql"]}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1555648, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1555648, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1555648, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1565642, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1565642, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1565642, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1565642, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1585646, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1585646, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.159565, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\helpers.sql", "original_file_path": "macros\\materializations\\snapshots\\helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.159565, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1655667, "supported_languages": ["sql"]}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1655667, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshots\\snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1655667, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.168564, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.168564, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.168564, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1695642, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1695642, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1695642, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.171564, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\snapshots\\strategies.sql", "original_file_path": "macros\\materializations\\snapshots\\strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.172564, "supported_languages": null}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1735623, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\helpers.sql", "original_file_path": "macros\\materializations\\tests\\helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1735623, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\test.sql", "original_file_path": "macros\\materializations\\tests\\test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.176562, "supported_languages": ["sql"]}, "macro.dbt.materialization_unit_default": {"name": "materialization_unit_default", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\unit.sql", "original_file_path": "macros\\materializations\\tests\\unit.sql", "unique_id": "macro.dbt.materialization_unit_default", "macro_sql": "{%- materialization unit, default -%}\n\n  {% set relations = [] %}\n\n  {% set expected_rows = config.get('expected_rows') %}\n  {% set expected_sql = config.get('expected_sql') %}\n  {% set tested_expected_column_names = expected_rows[0].keys() if (expected_rows | length ) > 0 else get_columns_in_query(sql) %} %}\n\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {% do run_query(get_create_table_as_sql(True, temp_relation, get_empty_subquery_sql(sql))) %}\n  {%- set columns_in_relation = adapter.get_columns_in_relation(temp_relation) -%}\n  {%- set column_name_to_data_types = {} -%}\n  {%- for column in columns_in_relation -%}\n  {%-   do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n  {%- endfor -%}\n\n  {% if not expected_sql %}\n  {%   set expected_sql = get_expected_sql(expected_rows, column_name_to_data_types) %}\n  {% endif %}\n  {% set unit_test_sql = get_unit_test_sql(sql, expected_sql, tested_expected_column_names) %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ unit_test_sql }}\n\n  {%- endcall %}\n\n  {% do adapter.drop_relation(temp_relation) %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_empty_subquery_sql", "macro.dbt.get_expected_sql", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1785648, "supported_languages": ["sql"]}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1795638, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\materializations\\tests\\where_subquery.sql", "original_file_path": "macros\\materializations\\tests\\where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1795638, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1805656, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1805656, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1815653, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.182564, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.182564, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.183565, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros\\python_model\\python.sql", "original_file_path": "macros\\python_model\\python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.183565, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\create.sql", "original_file_path": "macros\\relations\\create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.183565, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\create.sql", "original_file_path": "macros\\relations\\create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1845648, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\create_backup.sql", "original_file_path": "macros\\relations\\create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1845648, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\create_backup.sql", "original_file_path": "macros\\relations\\create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1855648, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\create_intermediate.sql", "original_file_path": "macros\\relations\\create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1855648, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\create_intermediate.sql", "original_file_path": "macros\\relations\\create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1855648, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop.sql", "original_file_path": "macros\\relations\\drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1865647, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop.sql", "original_file_path": "macros\\relations\\drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1865647, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop.sql", "original_file_path": "macros\\relations\\drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1875641, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop.sql", "original_file_path": "macros\\relations\\drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1875641, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop.sql", "original_file_path": "macros\\relations\\drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1875641, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop_backup.sql", "original_file_path": "macros\\relations\\drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1875641, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\drop_backup.sql", "original_file_path": "macros\\relations\\drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.188564, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\rename.sql", "original_file_path": "macros\\relations\\rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.188564, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\rename.sql", "original_file_path": "macros\\relations\\rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1895642, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\rename.sql", "original_file_path": "macros\\relations\\rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1895642, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\rename.sql", "original_file_path": "macros\\relations\\rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1905606, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\rename_intermediate.sql", "original_file_path": "macros\\relations\\rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1905606, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\rename_intermediate.sql", "original_file_path": "macros\\relations\\rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1905606, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\replace.sql", "original_file_path": "macros\\relations\\replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.191566, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\replace.sql", "original_file_path": "macros\\relations\\replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation_type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.192564, "supported_languages": null}, "macro.dbt.drop_schema_named": {"name": "drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\schema.sql", "original_file_path": "macros\\relations\\schema.sql", "unique_id": "macro.dbt.drop_schema_named", "macro_sql": "{% macro drop_schema_named(schema_name) %}\n    {{ return(adapter.dispatch('drop_schema_named', 'dbt') (schema_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema_named"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.192564, "supported_languages": null}, "macro.dbt.default__drop_schema_named": {"name": "default__drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\schema.sql", "original_file_path": "macros\\relations\\schema.sql", "unique_id": "macro.dbt.default__drop_schema_named", "macro_sql": "{% macro default__drop_schema_named(schema_name) %}\n  {% set schema_relation = api.Relation.create(schema=schema_name) %}\n  {{ adapter.drop_schema(schema_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1935608, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1935608, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1945653, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1955652, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1955652, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1955652, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.197566, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column", "macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.197566, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\column\\columns_spec_ddl.sql", "original_file_path": "macros\\relations\\column\\columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.197566, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\alter.sql", "original_file_path": "macros\\relations\\materialized_view\\alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1985643, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\alter.sql", "original_file_path": "macros\\relations\\materialized_view\\alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1985643, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\alter.sql", "original_file_path": "macros\\relations\\materialized_view\\alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1995647, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\alter.sql", "original_file_path": "macros\\relations\\materialized_view\\alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1995647, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\create.sql", "original_file_path": "macros\\relations\\materialized_view\\create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1995647, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\create.sql", "original_file_path": "macros\\relations\\materialized_view\\create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.1995647, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\drop.sql", "original_file_path": "macros\\relations\\materialized_view\\drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{ return(adapter.dispatch('drop_materialized_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.200565, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\drop.sql", "original_file_path": "macros\\relations\\materialized_view\\drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.200565, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\refresh.sql", "original_file_path": "macros\\relations\\materialized_view\\refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.200565, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\refresh.sql", "original_file_path": "macros\\relations\\materialized_view\\refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.200565, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\rename.sql", "original_file_path": "macros\\relations\\materialized_view\\rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.20157, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\rename.sql", "original_file_path": "macros\\relations\\materialized_view\\rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.20157, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\replace.sql", "original_file_path": "macros\\relations\\materialized_view\\replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.20157, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\materialized_view\\replace.sql", "original_file_path": "macros\\relations\\materialized_view\\replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.20157, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.202564, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.203564, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.203564, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2045643, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.205575, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.205575, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\create.sql", "original_file_path": "macros\\relations\\table\\create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.205575, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\drop.sql", "original_file_path": "macros\\relations\\table\\drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{ return(adapter.dispatch('drop_table', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.205575, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\drop.sql", "original_file_path": "macros\\relations\\table\\drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.205575, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\rename.sql", "original_file_path": "macros\\relations\\table\\rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2065747, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\rename.sql", "original_file_path": "macros\\relations\\table\\rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2065747, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\replace.sql", "original_file_path": "macros\\relations\\table\\replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2065747, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\table\\replace.sql", "original_file_path": "macros\\relations\\table\\replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2075756, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2075756, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2075756, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2085748, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\create.sql", "original_file_path": "macros\\relations\\view\\create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2085748, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\drop.sql", "original_file_path": "macros\\relations\\view\\drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{ return(adapter.dispatch('drop_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2085748, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\drop.sql", "original_file_path": "macros\\relations\\view\\drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2095747, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\rename.sql", "original_file_path": "macros\\relations\\view\\rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2095747, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\rename.sql", "original_file_path": "macros\\relations\\view\\rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2095747, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\replace.sql", "original_file_path": "macros\\relations\\view\\replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2115736, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\replace.sql", "original_file_path": "macros\\relations\\view\\replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2115736, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\replace.sql", "original_file_path": "macros\\relations\\view\\replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2135713, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\replace.sql", "original_file_path": "macros\\relations\\view\\replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2135713, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros\\relations\\view\\replace.sql", "original_file_path": "macros\\relations\\view\\replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2135713, "supported_languages": null}, "macro.dbt.get_fixture_sql": {"name": "get_fixture_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\unit_test_sql\\get_fixture_sql.sql", "original_file_path": "macros\\unit_test_sql\\get_fixture_sql.sql", "unique_id": "macro.dbt.get_fixture_sql", "macro_sql": "{% macro get_fixture_sql(rows, column_name_to_data_types) %}\n-- Fixture for {{ model.name }}\n{% set default_row = {} %}\n\n{%- if not column_name_to_data_types -%}\n{#-- Use defer_relation IFF it is available in the manifest and 'this' is missing from the database --#}\n{%-   set this_or_defer_relation = defer_relation if (defer_relation and not load_relation(this)) else this -%}\n{%-   set columns_in_relation = adapter.get_columns_in_relation(this_or_defer_relation) -%}\n\n{%-   set column_name_to_data_types = {} -%}\n{%-   for column in columns_in_relation -%}\n{#-- This needs to be a case-insensitive comparison --#}\n{%-     do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n{%-   endfor -%}\n{%- endif -%}\n\n{%- if not column_name_to_data_types -%}\n    {{ exceptions.raise_compiler_error(\"Not able to get columns for unit test '\" ~ model.name ~ \"' from relation \" ~ this ~ \" because the relation doesn't exist\") }}\n{%- endif -%}\n\n{%- for column_name, column_type in column_name_to_data_types.items() -%}\n    {%- do default_row.update({column_name: (safe_cast(\"null\", column_type) | trim )}) -%}\n{%- endfor -%}\n\n\n{%- for row in rows -%}\n{%-   set formatted_row = format_row(row, column_name_to_data_types) -%}\n{%-   set default_row_copy = default_row.copy() -%}\n{%-   do default_row_copy.update(formatted_row) -%}\nselect\n{%-   for column_name, column_value in default_row_copy.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%-   endfor %}\n{%-   if not loop.last %}\nunion all\n{%    endif %}\n{%- endfor -%}\n\n{%- if (rows | length) == 0 -%}\n    select\n    {%- for column_name, column_value in default_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%},{%- endif %}\n    {%- endfor %}\n    limit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.safe_cast", "macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.216575, "supported_languages": null}, "macro.dbt.get_expected_sql": {"name": "get_expected_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros\\unit_test_sql\\get_fixture_sql.sql", "original_file_path": "macros\\unit_test_sql\\get_fixture_sql.sql", "unique_id": "macro.dbt.get_expected_sql", "macro_sql": "{% macro get_expected_sql(rows, column_name_to_data_types) %}\n\n{%- if (rows | length) == 0 -%}\n    select * from dbt_internal_unit_test_actual\n    limit 0\n{%- else -%}\n{%- for row in rows -%}\n{%- set formatted_row = format_row(row, column_name_to_data_types) -%}\nselect\n{%- for column_name, column_value in formatted_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%- endfor %}\n{%- if not loop.last %}\nunion all\n{% endif %}\n{%- endfor -%}\n{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2175746, "supported_languages": null}, "macro.dbt.format_row": {"name": "format_row", "resource_type": "macro", "package_name": "dbt", "path": "macros\\unit_test_sql\\get_fixture_sql.sql", "original_file_path": "macros\\unit_test_sql\\get_fixture_sql.sql", "unique_id": "macro.dbt.format_row", "macro_sql": "\n\n{%- macro format_row(row, column_name_to_data_types) -%}\n    {#-- generate case-insensitive formatted row --#}\n    {% set formatted_row = {} %}\n    {%- for column_name, column_value in row.items() -%}\n        {% set column_name = column_name|lower %}\n\n        {%- if column_name not in column_name_to_data_types %}\n            {#-- if user-provided row contains column name that relation does not contain, raise an error --#}\n            {% set fixture_name = \"expected output\" if model.resource_type == 'unit_test' else (\"'\" ~ model.name ~ \"'\") %}\n            {{ exceptions.raise_compiler_error(\n                \"Invalid column name: '\" ~ column_name ~ \"' in unit test fixture for \" ~ fixture_name ~ \".\"\n                \"\\nAccepted columns for \" ~ fixture_name ~ \" are: \" ~ (column_name_to_data_types.keys()|list)\n            ) }}\n        {%- endif -%}\n\n        {%- set column_type = column_name_to_data_types[column_name] %}\n\n        {#-- sanitize column_value: wrap yaml strings in quotes, apply cast --#}\n        {%- set column_value_clean = column_value -%}\n        {%- if column_value is string -%}\n            {%- set column_value_clean = dbt.string_literal(dbt.escape_single_quotes(column_value)) -%}\n        {%- elif column_value is none -%}\n            {%- set column_value_clean = 'null' -%}\n        {%- endif -%}\n\n        {%- set row_update = {column_name: safe_cast(column_value_clean, column_type) } -%}\n        {%- do formatted_row.update(row_update) -%}\n    {%- endfor -%}\n    {{ return(formatted_row) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.escape_single_quotes", "macro.dbt.safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.218575, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.218575, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\any_value.sql", "original_file_path": "macros\\utils\\any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.218575, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_append.sql", "original_file_path": "macros\\utils\\array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.218575, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_append.sql", "original_file_path": "macros\\utils\\array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.218575, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_concat.sql", "original_file_path": "macros\\utils\\array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2195745, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_concat.sql", "original_file_path": "macros\\utils\\array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2195745, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.220088, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\array_construct.sql", "original_file_path": "macros\\utils\\array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.220088, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.220088, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\bool_or.sql", "original_file_path": "macros\\utils\\bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2211, "supported_languages": null}, "macro.dbt.cast": {"name": "cast", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\cast.sql", "original_file_path": "macros\\utils\\cast.sql", "unique_id": "macro.dbt.cast", "macro_sql": "{% macro cast(field, type) %}\n  {{ return(adapter.dispatch('cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2211, "supported_languages": null}, "macro.dbt.default__cast": {"name": "default__cast", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\cast.sql", "original_file_path": "macros\\utils\\cast.sql", "unique_id": "macro.dbt.default__cast", "macro_sql": "{% macro default__cast(field, type) %}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2211, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\cast_bool_to_text.sql", "original_file_path": "macros\\utils\\cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2211, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\cast_bool_to_text.sql", "original_file_path": "macros\\utils\\cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2211, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\concat.sql", "original_file_path": "macros\\utils\\concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2220998, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\concat.sql", "original_file_path": "macros\\utils\\concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2220998, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2231, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2231, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2231, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2240973, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2240973, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2240973, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2240973, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.225096, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.225096, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.225096, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.225096, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.225096, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2260964, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\data_types.sql", "original_file_path": "macros\\utils\\data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2260964, "supported_languages": null}, "macro.dbt.date": {"name": "date", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date.sql", "original_file_path": "macros\\utils\\date.sql", "unique_id": "macro.dbt.date", "macro_sql": "{% macro date(year, month, day) %}\n  {{ return(adapter.dispatch('date', 'dbt') (year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2271018, "supported_languages": null}, "macro.dbt.default__date": {"name": "default__date", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date.sql", "original_file_path": "macros\\utils\\date.sql", "unique_id": "macro.dbt.default__date", "macro_sql": "{% macro default__date(year, month, day) -%}\n    {%- set dt = modules.datetime.date(year, month, day) -%}\n    {%- set iso_8601_formatted_date = dt.strftime('%Y-%m-%d') -%}\n    to_date('{{ iso_8601_formatted_date }}', 'YYYY-MM-DD')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2271018, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2271018, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\dateadd.sql", "original_file_path": "macros\\utils\\dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2281034, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2290971, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\datediff.sql", "original_file_path": "macros\\utils\\datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2290971, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_spine.sql", "original_file_path": "macros\\utils\\date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2301013, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_spine.sql", "original_file_path": "macros\\utils\\date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.231099, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_spine.sql", "original_file_path": "macros\\utils\\date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.231099, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_spine.sql", "original_file_path": "macros\\utils\\date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.231099, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_trunc.sql", "original_file_path": "macros\\utils\\date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2321024, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\date_trunc.sql", "original_file_path": "macros\\utils\\date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2321024, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2321024, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\escape_single_quotes.sql", "original_file_path": "macros\\utils\\escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2321024, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\except.sql", "original_file_path": "macros\\utils\\except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2321024, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\except.sql", "original_file_path": "macros\\utils\\except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2321024, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\generate_series.sql", "original_file_path": "macros\\utils\\generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2331018, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\generate_series.sql", "original_file_path": "macros\\utils\\generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2331018, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\generate_series.sql", "original_file_path": "macros\\utils\\generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.234101, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\generate_series.sql", "original_file_path": "macros\\utils\\generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.234101, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\hash.sql", "original_file_path": "macros\\utils\\hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.234101, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\hash.sql", "original_file_path": "macros\\utils\\hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.234101, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\intersect.sql", "original_file_path": "macros\\utils\\intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2351012, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\intersect.sql", "original_file_path": "macros\\utils\\intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2351012, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2351012, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2351012, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\last_day.sql", "original_file_path": "macros\\utils\\last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2360961, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\length.sql", "original_file_path": "macros\\utils\\length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2360961, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\length.sql", "original_file_path": "macros\\utils\\length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2360961, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2360961, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\listagg.sql", "original_file_path": "macros\\utils\\listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2371004, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\literal.sql", "original_file_path": "macros\\utils\\literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2381008, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\literal.sql", "original_file_path": "macros\\utils\\literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2381008, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\position.sql", "original_file_path": "macros\\utils\\position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2381008, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\position.sql", "original_file_path": "macros\\utils\\position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2381008, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\replace.sql", "original_file_path": "macros\\utils\\replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.239101, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\replace.sql", "original_file_path": "macros\\utils\\replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.239101, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.239101, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\right.sql", "original_file_path": "macros\\utils\\right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.239101, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2400966, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\safe_cast.sql", "original_file_path": "macros\\utils\\safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2400966, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.241102, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.241102, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros\\utils\\split_part.sql", "original_file_path": "macros\\utils\\split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.241102, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2421, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2421, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2421, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests\\generic\\builtin.sql", "original_file_path": "tests\\generic\\builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2431061, "supported_languages": null}, "macro.codegen.create_base_models": {"name": "create_base_models", "resource_type": "macro", "package_name": "codegen", "path": "macros\\create_base_models.sql", "original_file_path": "macros\\create_base_models.sql", "unique_id": "macro.codegen.create_base_models", "macro_sql": "{% macro create_base_models(source_name, tables) %}\n    {{ return(adapter.dispatch('create_base_models', 'codegen')(source_name, tables)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.default__create_base_models"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2431061, "supported_languages": null}, "macro.codegen.default__create_base_models": {"name": "default__create_base_models", "resource_type": "macro", "package_name": "codegen", "path": "macros\\create_base_models.sql", "original_file_path": "macros\\create_base_models.sql", "unique_id": "macro.codegen.default__create_base_models", "macro_sql": "{% macro default__create_base_models(source_name, tables) %}\n\n{% set source_name = \"\"~ source_name ~\"\" %}\n\n{% set zsh_command_models = \"source dbt_packages/codegen/bash_scripts/base_model_creation.sh \"\"\"~ source_name ~\"\"\" \" %}\n\n{%- set models_array = [] -%}\n\n{% for t in tables %}\n    {% set help_command = zsh_command_models + t %}\n    {{ models_array.append(help_command) }}\n{% endfor %}\n\n{{ log(\"Run these commands in your shell to generate the models:\\n\" ~ models_array|join(' && \\n'), info=True) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.244102, "supported_languages": null}, "macro.codegen.generate_base_model": {"name": "generate_base_model", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_base_model.sql", "original_file_path": "macros\\generate_base_model.sql", "unique_id": "macro.codegen.generate_base_model", "macro_sql": "{% macro generate_base_model(source_name, table_name, leading_commas=False, case_sensitive_cols=False, materialized=None) %}\n  {{ return(adapter.dispatch('generate_base_model', 'codegen')(source_name, table_name, leading_commas, case_sensitive_cols, materialized)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.default__generate_base_model"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2451003, "supported_languages": null}, "macro.codegen.default__generate_base_model": {"name": "default__generate_base_model", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_base_model.sql", "original_file_path": "macros\\generate_base_model.sql", "unique_id": "macro.codegen.default__generate_base_model", "macro_sql": "{% macro default__generate_base_model(source_name, table_name, leading_commas, case_sensitive_cols, materialized) %}\n\n{%- set source_relation = source(source_name, table_name) -%}\n\n{%- set columns = adapter.get_columns_in_relation(source_relation) -%}\n{% set column_names=columns | map(attribute='name') %}\n{% set base_model_sql %}\n\n{%- if materialized is not none -%}\n    {{ \"{{ config(materialized='\" ~ materialized ~ \"') }}\" }}\n{%- endif %}\n\nwith source as (\n\n    select * from {% raw %}{{ source({% endraw %}'{{ source_name }}', '{{ table_name }}'{% raw %}) }}{% endraw %}\n\n),\n\nrenamed as (\n\n    select\n        {%- if leading_commas -%}\n        {%- for column in column_names %}\n        {{\", \" if not loop.first}}{% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}\n        {%- endfor %}\n        {%- else -%}\n        {%- for column in column_names %}\n        {% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}{{\",\" if not loop.last}}\n        {%- endfor -%}\n        {%- endif %}\n\n    from source\n\n)\n\nselect * from renamed\n{% endset %}\n\n{% if execute %}\n\n{{ print(base_model_sql) }}\n{% do return(base_model_sql) %}\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2471006, "supported_languages": null}, "macro.codegen.generate_model_import_ctes": {"name": "generate_model_import_ctes", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_model_import_ctes.sql", "original_file_path": "macros\\generate_model_import_ctes.sql", "unique_id": "macro.codegen.generate_model_import_ctes", "macro_sql": "{% macro generate_model_import_ctes(model_name, leading_commas = False) %}\n    {{ return(adapter.dispatch('generate_model_import_ctes', 'codegen')(model_name, leading_commas)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.default__generate_model_import_ctes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2520998, "supported_languages": null}, "macro.codegen.default__generate_model_import_ctes": {"name": "default__generate_model_import_ctes", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_model_import_ctes.sql", "original_file_path": "macros\\generate_model_import_ctes.sql", "unique_id": "macro.codegen.default__generate_model_import_ctes", "macro_sql": "{% macro default__generate_model_import_ctes(model_name, leading_commas) %}\n\n    {%- if execute -%}\n    {%- set nodes = graph.nodes.values() -%}\n\n    {%- set model = (nodes\n        | selectattr('name', 'equalto', model_name) \n        | selectattr('resource_type', 'equalto', 'model')\n        | list).pop() -%}\n\n    {%- set model_raw_sql = model.raw_sql or model.raw_code -%}\n    {%- else -%}\n    {%- set model_raw_sql = '' -%}\n    {%- endif -%}\n\n    {#-\n\n        REGEX Explanations\n\n        # with_regex\n        - matches (start of file followed by anything then whitespace\n        or whitespace\n        or a comma) followed by the word with then a space   \n\n        # from_ref \n        - matches (from or join) followed by some spaces and then {{ref(<something>)}}\n\n        # from_source \n        - matches (from or join) followed by some spaces and then {{source(<something>,<something_else>)}}\n\n        # from_var_1\n        - matches (from or join) followed by some spaces and then {{var(<something>)}}\n\n        # from_var_2\n        - matches (from or join) followed by some spaces and then {{var(<something>,<something_else>)}}\n\n        # from_table_1\n        - matches (from or join) followed by some spaces and then <something>.<something_else>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_2\n        - matches (from or join) followed by some spaces and then <something>.<something_else>.<something_different>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_3\n        - matches (from or join) followed by some spaces and then <something>\n          where <something> is enclosed by (` or [ or \" or ')\n\n        # config block\n        - matches the start of the file followed by anything and then {{config(<something>)}}\n\n    -#}\n\n    {%- set re = modules.re -%}\n\n    {%- set with_regex = '(?i)(?s)(^.*\\s*|\\s+|,)with\\s' -%}\n    {%- set does_raw_sql_contain_cte = re.search(with_regex, model_raw_sql) -%}\n\n    {%- set from_regexes = {\n        'from_ref':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), ref, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*ref\\s*\\(\\s*[\\'\\\"]?)\n            \n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n        \n            ',\n        'from_source':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), source, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*source\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark\n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n\n            ',\n        'from_var_1':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n            \n            ',\n        'from_var_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n            \n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark            \n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)            \n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}            \n            (\\)\\s*}})\n            \n            ',\n        'from_table_1':\n            '(?ix)\n            \n            # first matching group\n            # from or join followed by at least 1 whitespace character            \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)\n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period\n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # seventh matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n\n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)            \n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period            \n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n\n            # seventh matching group\n            # at least 1 word character            \n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) \n            ([\\]`\\\"\\']?)\n            \n            # ninth matching group\n            # a period             \n            (\\.)\n            \n            # tenth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)             \n            ([\\[`\\\"\\']?)\n            \n            # eleventh matching group\n            # at least 1 word character   \n            (\\w+)\n\n            # twelfth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_3':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character             \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\'])\n            \n            # third matching group\n            # at least 1 word character or space \n            ([\\w ]+)\n\n            # fourth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\'])(?=\\s|$)\n            \n            ',\n        'config_block':'(?i)(?s)^.*{{\\s*config\\s*\\([^)]+\\)\\s*}}'\n    } -%}\n\n    {%- set from_list = [] -%}\n    {%- set config_list = [] -%}\n    {%- set ns = namespace(model_sql = model_raw_sql) -%}\n\n    {%- for regex_name, regex_pattern in from_regexes.items() -%}\n\n        {%- set all_regex_matches = re.findall(regex_pattern, model_raw_sql) -%}\n\n        {%- for match in all_regex_matches -%}\n\n            {%- if regex_name == 'config_block' -%}\n                {%- set match_tuple = (match|trim, regex_name) -%}\n                {%- do config_list.append(match_tuple) -%}\n            {%- elif regex_name == 'from_source' -%}    \n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = 'source_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%} \n            {%- elif regex_name == 'from_table_1' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}   \n            {%- elif regex_name == 'from_table_2' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower + '_' + match[10]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}                     \n            {%- else -%}\n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = match[2]|trim|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}\n            {%- endif -%}\n\n        {%- endfor -%}\n\n        {%- if regex_name == 'config_block' -%}\n        {%- elif regex_name == 'from_source' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> source_\\g<7>', ns.model_sql) -%}            \n        {%- elif regex_name == 'from_table_1' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>', ns.model_sql) -%}     \n        {%- elif regex_name == 'from_table_2' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>_\\g<11>', ns.model_sql) -%} \n        {%- else -%}   \n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>', ns.model_sql) -%}         \n        {% endif %}\n\n    {%- endfor -%}\n\n{%- if from_list|length > 0 -%}\n\n{%- set model_import_ctes -%}\n\n    {%- for config_obj in config_list -%}\n\n    {%- set ns.model_sql = ns.model_sql|replace(config_obj[0], '') -%}\n\n{{ config_obj[0] }}\n\n{% endfor -%}\n\n    {%- for from_obj in from_list|unique|sort -%}\n\n{%- if loop.first -%}with {% else -%}{%- if leading_commas -%},{%- endif -%}{%- endif -%}{{ from_obj[0] }} as (\n\n    select * from {{ from_obj[1] }}\n    {%- if from_obj[2] == 'from_source' and from_list|length > 1 %} \n    -- CAUTION: It's best practice to create staging layer for raw sources\n    {%- elif from_obj[2] == 'from_table_1' or from_obj[2] == 'from_table_2' or from_obj[2] == 'from_table_3' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a direct reference\n    {%- elif from_obj[2] == 'from_var_1' or from_obj[2] == 'from_var_2' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a var\n    {%- endif %}\n  \n){%- if ((loop.last and does_raw_sql_contain_cte) or (not loop.last)) and not leading_commas -%},{%- endif %}\n\n{% endfor -%}\n\n{%- if does_raw_sql_contain_cte -%}\n    {%- if leading_commas -%}\n        {%- set replace_with = '\\g<1>,' -%}\n    {%- else -%}\n        {%- set replace_with = '\\g<1>' -%}\n    {%- endif -%}\n{{ re.sub(with_regex, replace_with, ns.model_sql, 1)|trim }}\n{%- else -%}\n{{ ns.model_sql|trim }}\n{%- endif -%}\n\n{%- endset -%}\n\n{%- else -%}\n\n{% set model_import_ctes = model_raw_sql %}\n\n{%- endif -%}\n\n{%- if execute -%}\n\n{{ print(model_import_ctes) }}\n{% do return(model_import_ctes) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2596228, "supported_languages": null}, "macro.codegen.generate_column_yaml": {"name": "generate_column_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_model_yaml.sql", "original_file_path": "macros\\generate_model_yaml.sql", "unique_id": "macro.codegen.generate_column_yaml", "macro_sql": "{% macro generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types, parent_column_name=\"\") %}\n  {{ return(adapter.dispatch('generate_column_yaml', 'codegen')(column, model_yaml, column_desc_dict, include_data_types, parent_column_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.default__generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2616346, "supported_languages": null}, "macro.codegen.default__generate_column_yaml": {"name": "default__generate_column_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_model_yaml.sql", "original_file_path": "macros\\generate_model_yaml.sql", "unique_id": "macro.codegen.default__generate_column_yaml", "macro_sql": "{% macro default__generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types, parent_column_name) %}\n    {% if parent_column_name %}\n        {% set column_name = parent_column_name ~ \".\" ~ column.name %}\n    {% else %}\n        {% set column_name = column.name %}\n    {% endif %}\n\n    {% do model_yaml.append('      - name: ' ~ column_name  | lower ) %}\n    {% if include_data_types %}\n        {% do model_yaml.append('        data_type: ' ~ codegen.data_type_format_model(column)) %}\n    {% endif %}\n    {% do model_yaml.append('        description: \"' ~ column_desc_dict.get(column.name | lower,'') ~ '\"') %}\n    {% do model_yaml.append('') %}\n\n    {% if column.fields|length > 0 %}\n        {% for child_column in column.fields %}\n            {% set model_yaml = codegen.generate_column_yaml(child_column, model_yaml, column_desc_dict, include_data_types, parent_column_name=column_name) %}\n        {% endfor %}\n    {% endif %}\n    {% do return(model_yaml) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.data_type_format_model", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2626345, "supported_languages": null}, "macro.codegen.generate_model_yaml": {"name": "generate_model_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_model_yaml.sql", "original_file_path": "macros\\generate_model_yaml.sql", "unique_id": "macro.codegen.generate_model_yaml", "macro_sql": "{% macro generate_model_yaml(model_names=[], upstream_descriptions=False, include_data_types=True) -%}\n  {{ return(adapter.dispatch('generate_model_yaml', 'codegen')(model_names, upstream_descriptions, include_data_types)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__generate_model_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2636342, "supported_languages": null}, "macro.codegen.default__generate_model_yaml": {"name": "default__generate_model_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_model_yaml.sql", "original_file_path": "macros\\generate_model_yaml.sql", "unique_id": "macro.codegen.default__generate_model_yaml", "macro_sql": "{% macro default__generate_model_yaml(model_names, upstream_descriptions, include_data_types) %}\n\n    {% set model_yaml=[] %}\n\n    {% do model_yaml.append('version: 2') %}\n    {% do model_yaml.append('') %}\n    {% do model_yaml.append('models:') %}\n\n    {% if model_names is string %}\n        {{ exceptions.raise_compiler_error(\"The `model_names` argument must always be a list, even if there is only one model.\") }}\n    {% else %}\n        {% for model in model_names %}\n            {% do model_yaml.append('  - name: ' ~ model | lower) %}\n            {% do model_yaml.append('    description: \"\"') %}\n            {% do model_yaml.append('    columns:') %}\n\n            {% set relation=ref(model) %}\n            {%- set columns = adapter.get_columns_in_relation(relation) -%}\n            {% set column_desc_dict =  codegen.build_dict_column_descriptions(model) if upstream_descriptions else {} %}\n\n            {% for column in columns %}\n                {% set model_yaml = codegen.generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types) %}\n            {% endfor %}\n        {% endfor %}\n    {% endif %}\n\n{% if execute %}\n\n    {% set joined = model_yaml | join ('\\n') %}\n    {{ print(joined) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.build_dict_column_descriptions", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2646317, "supported_languages": null}, "macro.codegen.get_tables_in_schema": {"name": "get_tables_in_schema", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_source.sql", "original_file_path": "macros\\generate_source.sql", "unique_id": "macro.codegen.get_tables_in_schema", "macro_sql": "{% macro get_tables_in_schema(schema_name, database_name=target.database, table_pattern='%', exclude='') %}\n    \n    {% set tables=dbt_utils.get_relations_by_pattern(\n        schema_pattern=schema_name,\n        database=database_name,\n        table_pattern=table_pattern,\n        exclude=exclude\n    ) %}\n\n    {% set table_list= tables | map(attribute='identifier') %}\n\n    {{ return(table_list | sort) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2676349, "supported_languages": null}, "macro.codegen.generate_source": {"name": "generate_source", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_source.sql", "original_file_path": "macros\\generate_source.sql", "unique_id": "macro.codegen.generate_source", "macro_sql": "{% macro generate_source(schema_name, database_name=target.database, generate_columns=False, include_descriptions=False, include_data_types=True, table_pattern='%', exclude='', name=schema_name, table_names=None, include_database=False, include_schema=False) %}\n    {{ return(adapter.dispatch('generate_source', 'codegen')(schema_name, database_name, generate_columns, include_descriptions, include_data_types, table_pattern, exclude, name, table_names, include_database, include_schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.default__generate_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2676349, "supported_languages": null}, "macro.codegen.default__generate_source": {"name": "default__generate_source", "resource_type": "macro", "package_name": "codegen", "path": "macros\\generate_source.sql", "original_file_path": "macros\\generate_source.sql", "unique_id": "macro.codegen.default__generate_source", "macro_sql": "{% macro default__generate_source(schema_name, database_name, generate_columns, include_descriptions, include_data_types, table_pattern, exclude, name, table_names, include_database, include_schema) %}\n\n{% set sources_yaml=[] %}\n{% do sources_yaml.append('version: 2') %}\n{% do sources_yaml.append('') %}\n{% do sources_yaml.append('sources:') %}\n{% do sources_yaml.append('  - name: ' ~ name | lower) %}\n\n{% if include_descriptions %}\n    {% do sources_yaml.append('    description: \"\"' ) %}\n{% endif %}\n\n{% if database_name != target.database or include_database %}\n{% do sources_yaml.append('    database: ' ~ database_name | lower) %}\n{% endif %}\n\n{% if schema_name != name or include_schema %}\n{% do sources_yaml.append('    schema: ' ~ schema_name | lower) %}\n{% endif %}\n\n{% do sources_yaml.append('    tables:') %}\n\n{% if table_names is none %}\n{% set tables=codegen.get_tables_in_schema(schema_name, database_name, table_pattern, exclude) %}\n{% else %}\n{% set tables = table_names %}\n{% endif %}\n\n{% for table in tables %}\n    {% do sources_yaml.append('      - name: ' ~ table | lower ) %}\n    {% if include_descriptions %}\n        {% do sources_yaml.append('        description: \"\"' ) %}\n    {% endif %}\n    {% if generate_columns %}\n    {% do sources_yaml.append('        columns:') %}\n\n        {% set table_relation=api.Relation.create(\n            database=database_name,\n            schema=schema_name,\n            identifier=table\n        ) %}\n\n        {% set columns=adapter.get_columns_in_relation(table_relation) %}\n\n        {% for column in columns %}\n            {% do sources_yaml.append('          - name: ' ~ column.name | lower ) %}\n            {% if include_data_types %}\n                {% do sources_yaml.append('            data_type: ' ~ codegen.data_type_format_source(column)) %}\n            {% endif %}\n            {% if include_descriptions %}\n                {% do sources_yaml.append('            description: \"\"' ) %}\n            {% endif %}\n        {% endfor %}\n            {% do sources_yaml.append('') %}\n\n    {% endif %}\n\n{% endfor %}\n\n{% if execute %}\n\n    {% set joined = sources_yaml | join ('\\n') %}\n    {{ print(joined) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_tables_in_schema", "macro.codegen.data_type_format_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2706344, "supported_languages": null}, "macro.codegen.get_model_dependencies": {"name": "get_model_dependencies", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.get_model_dependencies", "macro_sql": "{% macro get_model_dependencies(model_name) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {{ return(node.depends_on.nodes) }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2716353, "supported_languages": null}, "macro.codegen.add_model_column_descriptions_to_dict": {"name": "add_model_column_descriptions_to_dict", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.add_model_column_descriptions_to_dict", "macro_sql": "{% macro add_model_column_descriptions_to_dict(model_name,dict_with_descriptions={}) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {% for col_name, col_values in node.columns.items() %}\n            {% do dict_with_descriptions.update( {col_name: col_values.description} ) %}\n        {% endfor %}\n    {% endfor %}\n    {{ return(dict_with_descriptions) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.272635, "supported_languages": null}, "macro.codegen.build_dict_column_descriptions": {"name": "build_dict_column_descriptions", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.build_dict_column_descriptions", "macro_sql": "{% macro build_dict_column_descriptions(model_name) %}\n    {% if execute %}\n        {% set glob_dict = {} %}\n        {% for full_model in codegen.get_model_dependencies(model_name) %}\n            {% do codegen.add_model_column_descriptions_to_dict(full_model.split('.')[-1],glob_dict) %}\n        {% endfor %}\n        {{ return(glob_dict) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_model_dependencies", "macro.codegen.add_model_column_descriptions_to_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2736306, "supported_languages": null}, "macro.codegen.get_models": {"name": "get_models", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.get_models", "macro_sql": "{% macro get_models(directory=None, prefix=None) %}\n    {% set model_names=[] %}\n    {% set models = graph.nodes.values() | selectattr('resource_type', \"equalto\", 'model') %}\n    {% if directory and prefix %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory and model.name.startswith(prefix) %}\n                {% do model_names.append(model.name) %}\n            {% endif %} \n        {% endfor %}\n    {% elif directory %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory %}\n                {% do model_names.append(model.name) %}\n            {% endif %}\n        {% endfor %}\n    {% elif prefix %}\n        {% for model in models if model.name.startswith(prefix) %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% else %}\n        {% for model in models %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% endif %}\n    {{ return(model_names) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.274642, "supported_languages": null}, "macro.codegen.data_type_format_source": {"name": "data_type_format_source", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.data_type_format_source", "macro_sql": "{% macro data_type_format_source(column) -%}\n  {{ return(adapter.dispatch('data_type_format_source', 'codegen')(column)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__data_type_format_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2756367, "supported_languages": null}, "macro.codegen.default__data_type_format_source": {"name": "default__data_type_format_source", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.default__data_type_format_source", "macro_sql": "{% macro default__data_type_format_source(column) %}\n    {% set formatted = codegen.format_column(column) %}\n    {{ return(formatted['data_type'] | lower) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2756367, "supported_languages": null}, "macro.codegen.data_type_format_model": {"name": "data_type_format_model", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.data_type_format_model", "macro_sql": "{% macro data_type_format_model(column) -%}\n  {{ return(adapter.dispatch('data_type_format_model', 'codegen')(column)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__data_type_format_model"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2756367, "supported_languages": null}, "macro.codegen.default__data_type_format_model": {"name": "default__data_type_format_model", "resource_type": "macro", "package_name": "codegen", "path": "macros\\helpers\\helpers.sql", "original_file_path": "macros\\helpers\\helpers.sql", "unique_id": "macro.codegen.default__data_type_format_model", "macro_sql": "{% macro default__data_type_format_model(column) %}\n    {% set formatted = codegen.format_column(column) %}\n    {{ return(formatted['data_type'] | lower) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2756367, "supported_languages": null}, "macro.codegen.format_column": {"name": "format_column", "resource_type": "macro", "package_name": "codegen", "path": "macros\\vendored\\dbt_core\\format_column.sql", "original_file_path": "macros\\vendored\\dbt_core\\format_column.sql", "unique_id": "macro.codegen.format_column", "macro_sql": "{% macro format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2766347, "supported_languages": null}, "macro.dbt_external_tables.create_external_schema": {"name": "create_external_schema", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\create_external_schema.sql", "original_file_path": "macros\\common\\create_external_schema.sql", "unique_id": "macro.dbt_external_tables.create_external_schema", "macro_sql": "{%- macro create_external_schema(source_node) -%}\n    {{ adapter.dispatch('create_external_schema', 'dbt_external_tables')(source_node) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_external_tables.snowflake__create_external_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2766347, "supported_languages": null}, "macro.dbt_external_tables.default__create_external_schema": {"name": "default__create_external_schema", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\create_external_schema.sql", "original_file_path": "macros\\common\\create_external_schema.sql", "unique_id": "macro.dbt_external_tables.default__create_external_schema", "macro_sql": "{%- macro default__create_external_schema(source_node) -%}\n    {%- set fqn -%}\n        {%- if source_node.database -%}\n            {{ source_node.database }}.{{ source_node.schema }}\n        {%- else -%}\n            {{ source_node.schema }}\n        {%- endif -%}\n    {%- endset -%}\n\n    {%- set ddl -%}\n        create schema if not exists {{ fqn }}\n    {%- endset -%}\n\n    {{ return(ddl) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2766347, "supported_languages": null}, "macro.dbt_external_tables.create_external_table": {"name": "create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\create_external_table.sql", "original_file_path": "macros\\common\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.create_external_table", "macro_sql": "{% macro create_external_table(source_node) %}\n    {{ adapter.dispatch('create_external_table', 'dbt_external_tables')(source_node) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.snowflake__create_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2766347, "supported_languages": null}, "macro.dbt_external_tables.default__create_external_table": {"name": "default__create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\create_external_table.sql", "original_file_path": "macros\\common\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.default__create_external_table", "macro_sql": "{% macro default__create_external_table(source_node) %}\n    {{ exceptions.raise_compiler_error(\"External table creation is not implemented for the default adapter\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2776344, "supported_languages": null}, "macro.dbt_external_tables.get_external_build_plan": {"name": "get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\get_external_build_plan.sql", "original_file_path": "macros\\common\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.get_external_build_plan", "macro_sql": "{% macro get_external_build_plan(source_node) %}\n    {{ return(adapter.dispatch('get_external_build_plan', 'dbt_external_tables')(source_node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.snowflake__get_external_build_plan"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2776344, "supported_languages": null}, "macro.dbt_external_tables.default__get_external_build_plan": {"name": "default__get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\get_external_build_plan.sql", "original_file_path": "macros\\common\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.default__get_external_build_plan", "macro_sql": "{% macro default__get_external_build_plan(source_node) %}\n    {{ exceptions.raise_compiler_error(\"Staging external sources is not implemented for the default adapter\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2776344, "supported_languages": null}, "macro.dbt_external_tables.refresh_external_table": {"name": "refresh_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\refresh_external_table.sql", "original_file_path": "macros\\common\\refresh_external_table.sql", "unique_id": "macro.dbt_external_tables.refresh_external_table", "macro_sql": "{% macro refresh_external_table(source_node) %}\n    {{ return(adapter.dispatch('refresh_external_table', 'dbt_external_tables')(source_node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.snowflake__refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2776344, "supported_languages": null}, "macro.dbt_external_tables.default__refresh_external_table": {"name": "default__refresh_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\refresh_external_table.sql", "original_file_path": "macros\\common\\refresh_external_table.sql", "unique_id": "macro.dbt_external_tables.default__refresh_external_table", "macro_sql": "{% macro default__refresh_external_table(source_node) %}\n    {% do return([]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2776344, "supported_languages": null}, "macro.dbt_external_tables.stage_external_sources": {"name": "stage_external_sources", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\stage_external_sources.sql", "original_file_path": "macros\\common\\stage_external_sources.sql", "unique_id": "macro.dbt_external_tables.stage_external_sources", "macro_sql": "{% macro stage_external_sources(select=none) %}\n\n    {% set sources_to_stage = [] %}\n    \n    {% set source_nodes = graph.sources.values() if graph.sources else [] %}\n    \n    {% for node in source_nodes %}\n        {% if node.external %}\n            \n            {% if select %}\n            \n                {% for src in select.split(' ') %}\n                \n                    {% if '.' in src %}\n                        {% set src_s = src.split('.') %}\n                        {% if src_s[0] == node.source_name and src_s[1] == node.name %}\n                            {% do sources_to_stage.append(node) %}\n                        {% endif %}\n                    {% else %}\n                        {% if src == node.source_name %}\n                            {% do sources_to_stage.append(node) %}\n                        {% endif %}\n                    {% endif %}\n                    \n                {% endfor %}\n                        \n            {% else %}\n            \n                {% do sources_to_stage.append(node) %}\n                \n            {% endif %}\n        {% endif %}\n        \n    {% endfor %}\n    \n    {% if sources_to_stage|length == 0 %}\n        {% do log('No external sources selected', info = true) %}\n    {% endif %}\n            \n    {% for node in sources_to_stage %}\n\n        {% set loop_label = loop.index ~ ' of ' ~ loop.length %}\n\n        {% do log(loop_label ~ ' START external source ' ~ node.schema ~ '.' ~ node.identifier, info = true) -%}\n        \n        {% set run_queue = dbt_external_tables.get_external_build_plan(node) %}\n        \n        {% do log(loop_label ~ ' SKIP', info = true) if run_queue == [] %}\n        {% set width = flags.PRINTER_WIDTH %}\n        \n        {% for q in run_queue %}\n        \n            {% set q_msg = q|replace('\\n','')|replace('begin;','')|trim %}\n            {% set q_log = q_msg[:width] ~ '...  ' if q_msg|length > width else q_msg %}\n        \n            {% do log(loop_label ~ ' (' ~ loop.index ~ ') ' ~ q_log, info = true) %}\n            {% set exit_txn = dbt_external_tables.exit_transaction() %}\n        \n            {% call statement('runner', fetch_result = True, auto_begin = False) %}\n                {{ exit_txn }} {{ q }}\n            {% endcall %}\n            \n            {% set runner = load_result('runner') %}\n            {% set log_msg = runner['response'] if 'response' in runner.keys() else runner['status'] %}\n            {% do log(loop_label ~ ' (' ~ loop.index ~ ') ' ~ log_msg, info = true) %}\n            \n        {% endfor %}\n        \n    {% endfor %}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.get_external_build_plan", "macro.dbt_external_tables.exit_transaction", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2826355, "supported_languages": null}, "macro.dbt_external_tables.dropif": {"name": "dropif", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\helpers\\dropif.sql", "original_file_path": "macros\\common\\helpers\\dropif.sql", "unique_id": "macro.dbt_external_tables.dropif", "macro_sql": "{% macro dropif(node) %}\n    {{ adapter.dispatch('dropif', 'dbt_external_tables')(node) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.default__dropif"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2826355, "supported_languages": null}, "macro.dbt_external_tables.default__dropif": {"name": "default__dropif", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\helpers\\dropif.sql", "original_file_path": "macros\\common\\helpers\\dropif.sql", "unique_id": "macro.dbt_external_tables.default__dropif", "macro_sql": "{% macro default__dropif() %}\n    {{ exceptions.raise_compiler_error(\n        \"Dropping external tables is not implemented for the default adapter\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2826355, "supported_languages": null}, "macro.dbt_external_tables.exit_transaction": {"name": "exit_transaction", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\helpers\\transaction.sql", "original_file_path": "macros\\common\\helpers\\transaction.sql", "unique_id": "macro.dbt_external_tables.exit_transaction", "macro_sql": "{% macro exit_transaction() %}\n    {{ return(adapter.dispatch('exit_transaction', 'dbt_external_tables')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.default__exit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.283635, "supported_languages": null}, "macro.dbt_external_tables.default__exit_transaction": {"name": "default__exit_transaction", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\common\\helpers\\transaction.sql", "original_file_path": "macros\\common\\helpers\\transaction.sql", "unique_id": "macro.dbt_external_tables.default__exit_transaction", "macro_sql": "{% macro default__exit_transaction() %}\n    {{ return('') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.283635, "supported_languages": null}, "macro.dbt_external_tables.bigquery__create_external_schema": {"name": "bigquery__create_external_schema", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\bigquery\\create_external_schema.sql", "original_file_path": "macros\\plugins\\bigquery\\create_external_schema.sql", "unique_id": "macro.dbt_external_tables.bigquery__create_external_schema", "macro_sql": "{%- macro bigquery__create_external_schema(source_node) -%}\n    {%- set fqn -%}\n        {%- if source_node.database -%}\n            `{{ source_node.database }}`.{{ source_node.schema }}\n        {%- else -%}\n            {{ source_node.schema }}\n        {%- endif -%}\n    {%- endset -%}\n\n    {% set schema_exists_query %}\n        select * from {{ source_node.database }}.INFORMATION_SCHEMA.SCHEMATA where schema_name = '{{ source_node.schema }}' limit 1\n    {% endset %}\n    {% if execute %}\n        {% set schema_exists = run_query(schema_exists_query)|length > 0 %}\n    {% else %}\n        {% set schema_exists = false %}\n    {% endif %}  \n\n    {%- if not schema_exists -%}\n        {%- set ddl -%}\n            create schema if not exists {{ fqn }}\n        {%- endset -%}\n        {{ return(ddl) }}\n    {%- else -%}\n        {{ return('') }}\n    {% endif %} \n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2846344, "supported_languages": null}, "macro.dbt_external_tables.bigquery__create_external_table": {"name": "bigquery__create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\bigquery\\create_external_table.sql", "original_file_path": "macros\\plugins\\bigquery\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.bigquery__create_external_table", "macro_sql": "{% macro bigquery__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n    {%- set options = external.options -%}\n\n    {% if options is mapping and options.get('connection_name', none) %}\n        {% set connection_name = options.pop('connection_name') %}\n    {% endif %}\n    \n    {%- set uris = [] -%}\n    {%- if options is mapping and options.get('uris', none) -%}\n        {%- set uris = external.options.get('uris') -%}\n    {%- else -%}\n        {%- set uris = [external.location] -%}\n    {%- endif -%}\n\n    create or replace external table {{source(source_node.source_name, source_node.name)}}\n        {%- if columns -%}(\n            {% for column in columns %}\n                {%- set column_quoted = adapter.quote(column.name) if column.quote else column.name %}\n                {{column_quoted}} {{column.data_type}} {{- ',' if not loop.last -}}\n            {%- endfor -%}\n        )\n        {% endif %}\n        {% if options and options.get('hive_partition_uri_prefix', none) %}\n        with partition columns {%- if partitions %} (\n            {%- for partition in partitions %}\n                {{partition.name}} {{partition.data_type}}{{',' if not loop.last}}\n            {%- endfor -%}\n        ) {% endif -%}\n        {% endif %}\n        {% if connection_name %}\n            with connection `{{ connection_name }}`\n        {% endif %}\n        options (\n            uris = [{%- for uri in uris -%} '{{uri}}' {{- \",\" if not loop.last}} {%- endfor -%}]\n            {%- if options is mapping -%}\n            {%- for key, value in options.items() if key != 'uris' %}\n                {%- if value is string -%}\n                , {{key}} = '{{value}}'\n                {%- else -%}\n                , {{key}} = {{value}}\n                {%- endif -%}\n            {%- endfor -%}\n            {%- endif -%}\n        )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.287635, "supported_languages": null}, "macro.dbt_external_tables.bigquery__get_external_build_plan": {"name": "bigquery__get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\bigquery\\get_external_build_plan.sql", "original_file_path": "macros\\plugins\\bigquery\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.bigquery__get_external_build_plan", "macro_sql": "{% macro bigquery__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n    \n    {% set old_relation = adapter.get_relation(\n        database = source_node.database,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n    \n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if create_or_replace %}\n        {% if not dbt_external_tables.create_external_schema(source_node)|length %}\n            {% set build_plan = build_plan + [\n                dbt_external_tables.create_external_table(source_node)\n            ] %}\n        {% else %}\n            {% set build_plan = build_plan + [\n                dbt_external_tables.create_external_schema(source_node),\n                dbt_external_tables.create_external_table(source_node)\n            ] %}\n        {% endif %}\n    {% else %}\n        {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n    {% endif %}\n\n    {% do return(build_plan) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.create_external_schema", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2886348, "supported_languages": null}, "macro.dbt_external_tables.redshift__create_external_table": {"name": "redshift__create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\create_external_table.sql", "original_file_path": "macros\\plugins\\redshift\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.redshift__create_external_table", "macro_sql": "{% macro redshift__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n\n{# https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html #}\n{# This assumes you have already created an external schema #}\n\n    create external table {{source(source_node.source_name, source_node.name)}} (\n        {% for column in columns %}\n            {{adapter.quote(column.name)}} {{column.data_type}}\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    )\n    {% if partitions -%} partitioned by (\n        {%- for partition in partitions -%}\n            {{adapter.quote(partition.name)}} {{partition.data_type}}{{', ' if not loop.last}}\n        {%- endfor -%}\n    ) {%- endif %}\n    {% if external.row_format -%} row format {{external.row_format}} {%- endif %}\n    {% if external.file_format -%} stored as {{external.file_format}} {%- endif %}\n    {% if external.location -%} location '{{external.location}}' {%- endif %}\n    {% if external.table_properties -%} table properties {{external.table_properties}} {%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2906353, "supported_languages": null}, "macro.dbt_external_tables.redshift__get_external_build_plan": {"name": "redshift__get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\get_external_build_plan.sql", "original_file_path": "macros\\plugins\\redshift\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.redshift__get_external_build_plan", "macro_sql": "{% macro redshift__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n    \n    {% set create_or_replace = (var('ext_full_refresh', false) or not dbt_external_tables.redshift_is_ext_tbl(source_node)) %}\n    \n    {% if create_or_replace %}\n\n        {% set build_plan = [\n                dbt_external_tables.dropif(source_node),\n                dbt_external_tables.create_external_table(source_node)\n            ] + dbt_external_tables.refresh_external_table(source_node) \n        %}\n        \n    {% else %}\n    \n        {% set build_plan = dbt_external_tables.refresh_external_table(source_node) %}\n        \n    {% endif %}\n    \n    {% do return(build_plan) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.redshift_is_ext_tbl", "macro.dbt_external_tables.dropif", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2916362, "supported_languages": null}, "macro.dbt_external_tables.redshift__refresh_external_table": {"name": "redshift__refresh_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\refresh_external_table.sql", "original_file_path": "macros\\plugins\\redshift\\refresh_external_table.sql", "unique_id": "macro.dbt_external_tables.redshift__refresh_external_table", "macro_sql": "{% macro redshift__refresh_external_table(source_node) %}\n\n    {%- set partitions = source_node.external.get('partitions',[]) -%}\n\n    {%- if partitions -%}\n    \n        {%- set part_len = partitions|length -%}\n    \n        {%- set get_partitions_sql -%}\n        \n        select * from\n        \n        {%- for partition in partitions %} (\n        \n            {%- set part_num = loop.index -%}\n            \n            {%- if partition.vals.macro -%}\n                {%- set vals = dbt_external_tables.render_from_context(partition.vals.macro, **partition.vals.args) -%}\n            {%- elif partition.vals is string -%}\n                {%- set vals = [partition.vals] -%}\n            {%- else -%}\n                {%- set vals = partition.vals -%}\n            {%- endif -%}\n        \n            {%- for val in vals %}\n            \n                select\n                    '\"{{ partition.name }}\"' as name_{{ part_num }},\n                    '\"{{ val }}\"' as val_{{ part_num }},\n                    '\"{{ dbt_external_tables.render_from_context(partition.path_macro, partition.name, val) }}\"' as path_{{ part_num }}\n                \n                {{ 'union all' if not loop.last else ') ' }}\n            \n            {%- endfor -%}\n            \n            {{ 'cross join' if not loop.last }}\n            \n        {%- endfor -%}\n        \n        {%- endset -%}\n        \n        {%- set finals = [] -%}\n        \n        {%- if execute -%}\n            {%- set results = run_query(get_partitions_sql) -%}\n            {%- for row in results -%}\n                \n                {%- set partition_parts = [] -%}\n                {%- set path_parts = [] -%}\n                \n                {%- for i in range(0, part_len) -%}\n                    {%- do partition_parts.append({\n                        'name': row[i * 3][1:-1],\n                        'value': row[i * 3 + 1][1:-1]\n                    }) -%}\n                    {%- do path_parts.append(row[i * 3 + 2][1:-1]) -%}\n                {%- endfor -%}\n                \n                {%- set construct = {\n                    'partition_by': partition_parts,\n                    'path': path_parts | join('/')\n                }  -%}\n                \n                {% do finals.append(construct) %}\n            {%- endfor -%}\n        {%- endif -%}\n    \n        {%- set ddl = dbt_external_tables.redshift_alter_table_add_partitions(source_node, finals) -%}\n        {{ return(ddl) }}\n    \n    {% else %}\n    \n        {% do return([]) %}\n    \n    {% endif %}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.render_from_context", "macro.dbt.run_query", "macro.dbt_external_tables.redshift_alter_table_add_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2956343, "supported_languages": null}, "macro.dbt_external_tables.redshift_alter_table_add_partitions": {"name": "redshift_alter_table_add_partitions", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\add_partitions.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\add_partitions.sql", "unique_id": "macro.dbt_external_tables.redshift_alter_table_add_partitions", "macro_sql": "{% macro redshift_alter_table_add_partitions(source_node, partitions) %}\n\n  {{ log(\"Generating ADD PARTITION statement for partition set between \" \n         ~ partitions[0]['path'] ~ \" and \" ~ (partitions|last)['path']) }}\n\n  {% set ddl = [] %}\n  \n  {% if partitions|length > 0 %}\n  \n    {% set alter_table_add %}\n        alter table {{source(source_node.source_name, source_node.name)}} add if not exists \n    {% endset %}\n  \n    {%- set alters -%}\n\n      {{ alter_table_add }}\n\n    {%- for partition in partitions -%}\n\n      {%- if loop.index0 != 0 and loop.index0 % 100 == 0 -%}\n\n        ; {{ alter_table_add }}\n\n      {%- endif -%}\n\n        partition ({%- for part in partition.partition_by -%}{{ part.name }}='{{ part.value }}'{{', ' if not loop.last}}{%- endfor -%})\n        location '{{ source_node.external.location }}/{{ partition.path }}/'\n\n    {% endfor -%}\n    \n    {%- endset -%}\n    \n    {% set ddl = ddl + alters.split(';') %}\n\n  {% else %}\n\n    {{ log(\"No partitions to be added\") }}\n\n  {% endif %}\n  \n  {% do return(ddl) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2966344, "supported_languages": null}, "macro.dbt_external_tables.redshift__dropif": {"name": "redshift__dropif", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\dropif.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\dropif.sql", "unique_id": "macro.dbt_external_tables.redshift__dropif", "macro_sql": "{% macro redshift__dropif(node) %}\n    \n    {% set ddl %}\n        drop table if exists {{source(node.source_name, node.name)}} cascade\n    {% endset %}\n    \n    {{return(ddl)}}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2976344, "supported_languages": null}, "macro.dbt_external_tables.redshift_is_ext_tbl": {"name": "redshift_is_ext_tbl", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\is_ext_tbl.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\is_ext_tbl.sql", "unique_id": "macro.dbt_external_tables.redshift_is_ext_tbl", "macro_sql": "{% macro redshift_is_ext_tbl(node) %}\n\n    {% set existing_relation = load_relation(node) %}\n    \n    {#  external tables don't appear in information_schema.tables,\n        so dbt doesn't cache them #}\n    {% if existing_relation is none %}\n\n        {% set find_ext_tbl %}\n        \n            select count(*) from svv_external_tables\n            where schemaname = '{{node.schema}}'\n            and tablename = '{{node.identifier}}'\n        \n        {% endset %}\n        \n        {% if execute %}\n            {% set result = run_query(find_ext_tbl)[0][0] %}\n        {% else %}\n            {% set result = 0 %}\n        {% endif %}\n\n        {% set is_ext_tbl = (result > 0) %}\n        {% do return(is_ext_tbl) %}\n        \n    {% else %}\n    \n        {% do return(false) %}\n        \n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2986343, "supported_languages": null}, "macro.dbt_external_tables.year_month_day": {"name": "year_month_day", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\paths.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\paths.sql", "unique_id": "macro.dbt_external_tables.year_month_day", "macro_sql": "{% macro year_month_day(name, value) %}\n    {% set path = value.replace('-','/') %}\n    {{return(path)}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2986343, "supported_languages": null}, "macro.dbt_external_tables.key_value": {"name": "key_value", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\paths.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\paths.sql", "unique_id": "macro.dbt_external_tables.key_value", "macro_sql": "{% macro key_value(name, value) %}\n    {% set path = name ~ '=' ~ value %}\n    {{return(path)}}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2986343, "supported_languages": null}, "macro.dbt_external_tables.value_only": {"name": "value_only", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\paths.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\paths.sql", "unique_id": "macro.dbt_external_tables.value_only", "macro_sql": "{% macro value_only(name, value) %}\n    {% set path = value %}\n    {{return(path)}}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.2986343, "supported_languages": null}, "macro.dbt_external_tables.render_from_context": {"name": "render_from_context", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\render_macro.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\render_macro.sql", "unique_id": "macro.dbt_external_tables.render_from_context", "macro_sql": "{% macro render_from_context(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called by macro '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  \n    {{ return(package_context[name](*varargs, **kwargs)) }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3006349, "supported_languages": null}, "macro.dbt_external_tables.redshift__exit_transaction": {"name": "redshift__exit_transaction", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\redshift\\helpers\\transaction.sql", "original_file_path": "macros\\plugins\\redshift\\helpers\\transaction.sql", "unique_id": "macro.dbt_external_tables.redshift__exit_transaction", "macro_sql": "{% macro redshift__exit_transaction() %}\n    {{ return('begin; commit;') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3006349, "supported_languages": null}, "macro.dbt_external_tables.snowflake__create_external_schema": {"name": "snowflake__create_external_schema", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\create_external_schema.sql", "original_file_path": "macros\\plugins\\snowflake\\create_external_schema.sql", "unique_id": "macro.dbt_external_tables.snowflake__create_external_schema", "macro_sql": "{% macro snowflake__create_external_schema(source_node) %}\n\n    {% set schema_exists_query %}\n        show terse schemas like '{{ source_node.schema }}' in database {{ source_node.database }} limit 1;\n    {% endset %}\n    {% if execute %}\n        {% set schema_exists = run_query(schema_exists_query)|length > 0 %}\n    {% else %}\n        {% set schema_exists = false %}\n    {% endif %}    \n\n    {% if schema_exists %}\n        {% set ddl %}\n            select 'Schema {{ source_node.schema }} exists' from dual;\n        {% endset %}\n    {% else %}\n        {% set fqn %}\n            {% if source_node.database %}\n                {{ source_node.database }}.{{ source_node.schema }}\n            {% else %}\n                {{ source_node.schema }}\n            {% endif %}\n        {% endset %}\n\n        {% set ddl %}\n            create schema if not exists {{ fqn }};\n        {% endset %}\n    {% endif %}\n\n    {% do return(ddl) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3016343, "supported_languages": null}, "macro.dbt_external_tables.snowflake__create_external_table": {"name": "snowflake__create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\create_external_table.sql", "original_file_path": "macros\\plugins\\snowflake\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.snowflake__create_external_table", "macro_sql": "{% macro snowflake__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n    {%- set infer_schema = external.infer_schema -%}\n\n    {% if infer_schema %}\n        {% set query_infer_schema %}\n            select * from table( infer_schema( location=>'{{external.location}}', file_format=>'{{external.file_format}}') )\n        {% endset %}\n        {% if execute %}\n            {% set columns_infer = run_query(query_infer_schema) %}\n        {% endif %}\n    {% endif %}\n\n    {%- set is_csv = dbt_external_tables.is_csv(external.file_format) -%}\n\n{# https://docs.snowflake.net/manuals/sql-reference/sql/create-external-table.html #}\n{# This assumes you have already created an external stage #}\n    create or replace external table {{source(source_node.source_name, source_node.name)}}\n    {%- if columns or partitions or infer_schema -%}\n    (\n        {%- if partitions -%}{%- for partition in partitions %}\n            {{partition.name}} {{partition.data_type}} as {{partition.expression}}{{- ',' if not loop.last or columns|length > 0 or infer_schema -}}\n        {%- endfor -%}{%- endif -%}\n        {%- if not infer_schema -%}\n            {%- for column in columns %}\n                {%- set column_quoted = adapter.quote(column.name) if column.quote else column.name %}\n                {%- set col_expression -%}\n                    {%- set col_id = 'value:c' ~ loop.index if is_csv else 'value:' ~ column_quoted -%}\n                    (case when is_null_value({{col_id}}) or lower({{col_id}}) = 'null' then null else {{col_id}} end)\n                {%- endset %}\n                {{column_quoted}} {{column.data_type}} as ({{col_expression}}::{{column.data_type}})\n                {{- ',' if not loop.last -}}\n            {% endfor %}\n        {% else %}\n        {%- for column in columns_infer %}\n                {%- set col_expression -%}\n                    {%- set col_id = 'value:' ~ column[0] -%}\n                    (case when is_null_value({{col_id}}) or lower({{col_id}}) = 'null' then null else {{col_id}} end)\n                {%- endset %}\n                {{column[0]}} {{column[1]}} as ({{col_expression}}::{{column[1]}})\n                {{- ',' if not loop.last -}}\n            {% endfor %}\n        {%- endif -%}\n    )\n    {%- endif -%}\n    {% if partitions %} partition by ({{partitions|map(attribute='name')|join(', ')}}) {% endif %}\n    location = {{external.location}} {# stage #}\n    {% if external.auto_refresh in (true, false) -%}\n      auto_refresh = {{external.auto_refresh}}\n    {%- endif %}\n    {% if external.pattern -%} pattern = '{{external.pattern}}' {%- endif %}\n    {% if external.integration -%} integration = '{{external.integration}}' {%- endif %}\n    file_format = {{external.file_format}}\n    {% if external.table_format -%} table_format = '{{external.table_format}}' {%- endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_external_tables.is_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3056464, "supported_languages": null}, "macro.dbt_external_tables.snowflake__get_external_build_plan": {"name": "snowflake__get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\get_external_build_plan.sql", "original_file_path": "macros\\plugins\\snowflake\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.snowflake__get_external_build_plan", "macro_sql": "{% macro snowflake__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n    \n    {% set old_relation = adapter.get_relation(\n        database = source_node.database,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n    \n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if source_node.external.get('snowpipe', none) is not none %}\n    \n        {% if create_or_replace %}\n            {% set build_plan = build_plan + [\n                dbt_external_tables.create_external_schema(source_node),\n                dbt_external_tables.snowflake_create_empty_table(source_node),\n                dbt_external_tables.snowflake_get_copy_sql(source_node, explicit_transaction=true),\n                dbt_external_tables.snowflake_create_snowpipe(source_node)\n            ] %}\n        {% else %}\n            {% set build_plan = build_plan + dbt_external_tables.snowflake_refresh_snowpipe(source_node) %}\n        {% endif %}\n            \n    {% else %}\n    \n        {% if create_or_replace %}\n            {% set build_plan = build_plan + [\n                dbt_external_tables.create_external_schema(source_node),\n                dbt_external_tables.create_external_table(source_node)\n            ] %}\n        {% else %}\n            {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n        {% endif %}\n        \n    {% endif %}\n\n    {% do return(build_plan) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.create_external_schema", "macro.dbt_external_tables.snowflake_create_empty_table", "macro.dbt_external_tables.snowflake_get_copy_sql", "macro.dbt_external_tables.snowflake_create_snowpipe", "macro.dbt_external_tables.snowflake_refresh_snowpipe", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3086462, "supported_languages": null}, "macro.dbt_external_tables.snowflake__refresh_external_table": {"name": "snowflake__refresh_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\refresh_external_table.sql", "original_file_path": "macros\\plugins\\snowflake\\refresh_external_table.sql", "unique_id": "macro.dbt_external_tables.snowflake__refresh_external_table", "macro_sql": "{% macro snowflake__refresh_external_table(source_node) %}\n\n    {% set external = source_node.external %}\n    {% set snowpipe = source_node.external.get('snowpipe', none) %}\n    \n    {% set auto_refresh = external.get('auto_refresh', false) %}\n    {% set partitions = external.get('partitions', none) %}\n    \n    {% set manual_refresh = (partitions and not auto_refresh) %}\n    \n    {% if manual_refresh %}\n\n        {% set ddl %}\n        begin;\n        alter external table {{source(source_node.source_name, source_node.name)}} refresh;\n        commit;\n        {% endset %}\n        \n        {% do return([ddl]) %}\n    \n    {% else %}\n    \n        {% do return([]) %}\n    \n    {% endif %}\n    \n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.309646, "supported_languages": null}, "macro.dbt_external_tables.is_csv": {"name": "is_csv", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\helpers\\is_csv.sql", "original_file_path": "macros\\plugins\\snowflake\\helpers\\is_csv.sql", "unique_id": "macro.dbt_external_tables.is_csv", "macro_sql": "{% macro is_csv(file_format) %}\n\n{# From https://docs.snowflake.net/manuals/sql-reference/sql/create-external-table.html:\n\nImportant: The external table does not inherit the file format, if any, in the \nstage definition. You must explicitly specify any file format options for the \nexternal table using the FILE_FORMAT parameter.\n\nNote: FORMAT_NAME and TYPE are mutually exclusive; to avoid unintended behavior, \nyou should only specify one or the other when creating an external table.\n\n#}\n\n    {% set ff_ltrimmed = file_format|lower|replace(' ','') %}\n\n    {% if 'type=' in ff_ltrimmed %}\n    \n        {% if 'type=csv' in ff_ltrimmed %}\n\n            {{return(true)}}\n\n        {% else %}\n\n            {{return(false)}}\n            \n        {% endif %}\n        \n    {% else %}\n    \n        {% set ff_standardized = ff_ltrimmed\n            | replace('(','') | replace(')','')\n            | replace('format_name=','') %}\n        {% set fqn = ff_standardized.split('.') %}\n        \n        {% if fqn | length == 3 %}\n            {% set ff_database, ff_schema, ff_identifier = fqn[0], fqn[1], fqn[2] %}\n        {% elif fqn | length == 2 %}\n            {% set ff_database, ff_schema, ff_identifier = target.database, fqn[0], fqn[1] %}\n        {% else %}\n            {% set ff_database, ff_schema, ff_identifier = target.database, target.schema, fqn[0] %}\n        {% endif %}\n    \n        {% call statement('get_file_format', fetch_result = True) %}\n            show file formats in {{ff_database}}.{{ff_schema}}\n        {% endcall %}\n        \n        {% set ffs = load_result('get_file_format').table %}\n        \n        {% for ff in ffs %}\n            \n            {% if ff['name']|lower == ff_identifier and ff['type']|lower == 'csv' %}\n            \n                {{return(true)}}\n            \n            {% endif %}\n        \n        {% endfor %}\n        \n        {{return(false)}}        \n    \n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3126457, "supported_languages": null}, "macro.dbt_external_tables.snowflake_create_empty_table": {"name": "snowflake_create_empty_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\snowpipe\\create_empty_table.sql", "original_file_path": "macros\\plugins\\snowflake\\snowpipe\\create_empty_table.sql", "unique_id": "macro.dbt_external_tables.snowflake_create_empty_table", "macro_sql": "{% macro snowflake_create_empty_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() %}\n\n    create or replace table {{source(source_node.source_name, source_node.name)}} (\n        {% if columns|length == 0 %}\n            value variant,\n        {% else -%}\n        {%- for column in columns -%}\n            {{column.name}} {{column.data_type}},\n        {% endfor -%}\n        {% endif %}\n            metadata_filename varchar,\n            metadata_file_row_number bigint,\n            _dbt_copied_at timestamp\n    );\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3136458, "supported_languages": null}, "macro.dbt_external_tables.snowflake_create_snowpipe": {"name": "snowflake_create_snowpipe", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\snowpipe\\create_snowpipe.sql", "original_file_path": "macros\\plugins\\snowflake\\snowpipe\\create_snowpipe.sql", "unique_id": "macro.dbt_external_tables.snowflake_create_snowpipe", "macro_sql": "{% macro snowflake_create_snowpipe(source_node) %}\n\n    {%- set external = source_node.external -%}\n    {%- set snowpipe = external.snowpipe -%}\n\n{# https://docs.snowflake.com/en/sql-reference/sql/create-pipe.html #}\n    create or replace pipe {{source(source_node.source_name, source_node.name)}}\n        {% if snowpipe.auto_ingest -%} auto_ingest = {{snowpipe.auto_ingest}} {%- endif %}\n        {% if snowpipe.aws_sns_topic -%} aws_sns_topic = '{{snowpipe.aws_sns_topic}}' {%- endif %}\n        {% if snowpipe.integration -%} integration = '{{snowpipe.integration}}' {%- endif %}\n        {% if snowpipe.error_integration -%} error_integration = '{{snowpipe.error_integration}}' {%- endif %}\n        as {{ dbt_external_tables.snowflake_get_copy_sql(source_node) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.snowflake_get_copy_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3136458, "supported_languages": null}, "macro.dbt_external_tables.snowflake_get_copy_sql": {"name": "snowflake_get_copy_sql", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\snowpipe\\get_copy_sql.sql", "original_file_path": "macros\\plugins\\snowflake\\snowpipe\\get_copy_sql.sql", "unique_id": "macro.dbt_external_tables.snowflake_get_copy_sql", "macro_sql": "{% macro snowflake_get_copy_sql(source_node, explicit_transaction=false) %}\n{# This assumes you have already created an external stage #}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set is_csv = dbt_external_tables.is_csv(external.file_format) %}\n    {%- set copy_options = external.snowpipe.get('copy_options', none) -%}\n   \n    {%- if explicit_transaction -%} begin; {%- endif %}\n    \n    copy into {{source(source_node.source_name, source_node.name)}}\n    from ( \n        select\n        {% if columns|length == 0 %}\n            $1::variant as value,\n        {% else -%}\n        {%- for column in columns -%}\n            {%- set col_expression -%}\n                {%- if is_csv -%}nullif(${{loop.index}},''){# special case: get columns by ordinal position #}\n                {%- else -%}nullif($1:{{column.name}},''){# standard behavior: get columns by name #}\n                {%- endif -%}\n            {%- endset -%}\n            {{col_expression}}::{{column.data_type}} as {{column.name}},\n        {% endfor -%}\n        {% endif %}\n            metadata$filename::varchar as metadata_filename,\n            metadata$file_row_number::bigint as metadata_file_row_number,\n            current_timestamp::timestamp as _dbt_copied_at\n        from {{external.location}} {# stage #}\n    )\n    file_format = {{external.file_format}}\n    {% if external.pattern -%} pattern = '{{external.pattern}}' {%- endif %}\n    {% if copy_options %} {{copy_options}} {% endif %};\n    \n    {% if explicit_transaction -%} commit; {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.is_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3156457, "supported_languages": null}, "macro.dbt_external_tables.snowflake_refresh_snowpipe": {"name": "snowflake_refresh_snowpipe", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\snowflake\\snowpipe\\refresh_snowpipe.sql", "original_file_path": "macros\\plugins\\snowflake\\snowpipe\\refresh_snowpipe.sql", "unique_id": "macro.dbt_external_tables.snowflake_refresh_snowpipe", "macro_sql": "{% macro snowflake_refresh_snowpipe(source_node) %}\n\n    {% set snowpipe = source_node.external.snowpipe %}\n    {% set auto_ingest = snowpipe.get('auto_ingest', false) if snowpipe is mapping %}\n    \n    {% if auto_ingest is true %}\n    \n        {% do return([]) %}\n    \n    {% else %}\n    \n        {% set ddl %}\n        alter pipe {{source(source_node.source_name, source_node.name)}} refresh\n        {% endset %}\n        \n        {{ return([ddl]) }}\n    \n    {% endif %}\n    \n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3166459, "supported_languages": null}, "macro.dbt_external_tables.spark__create_external_table": {"name": "spark__create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\create_external_table.sql", "original_file_path": "macros\\plugins\\spark\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.spark__create_external_table", "macro_sql": "{% macro spark__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n    {%- set options = external.options -%}\n\n    {%- set columns_and_partitions = columns | list -%}\n    {%- if partitions -%}\n        {%- for i in partitions -%}\n            {%- if i.name not in columns_and_partitions | list | map(attribute='name') -%}\n                {%- do columns_and_partitions.append(i) -%}\n            {%- endif -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n{# https://spark.apache.org/docs/latest/sql-data-sources-hive-tables.html #}\n    create table {{source(source_node.source_name, source_node.name)}} \n    {%- if columns | length > 0 %} (\n        {% for column in columns_and_partitions %}\n            {{column.name}} {{column.data_type}}\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    ) {% endif -%}\n    {% if external.using %} using {{external.using}} {%- endif %}\n    {% if options -%} options (\n        {%- for key, value in options.items() -%}\n            '{{ key }}' = '{{value}}' {{- ', \\n' if not loop.last -}}\n        {%- endfor -%}\n    ) {%- endif %}\n    {% if partitions -%} partitioned by (\n        {%- for partition in partitions -%}\n            {{partition.name}}{{', ' if not loop.last}}\n        {%- endfor -%}\n    ) {%- endif %}\n    {% if external.row_format -%} row format {{external.row_format}} {%- endif %}\n    {% if external.file_format -%} stored as {{external.file_format}} {%- endif %}\n    {% if external.location -%} location '{{external.location}}' {%- endif %}\n    {% if external.table_properties -%} tblproperties {{ external.table_properties }} {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3201523, "supported_languages": null}, "macro.dbt_external_tables.spark__get_external_build_plan": {"name": "spark__get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\get_external_build_plan.sql", "original_file_path": "macros\\plugins\\spark\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.spark__get_external_build_plan", "macro_sql": "{% macro spark__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n\n    {% set old_relation = adapter.get_relation(\n        database = none,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n\n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if create_or_replace %}\n        {% set build_plan = build_plan + [\n            dbt_external_tables.create_external_schema(source_node),\n            dbt_external_tables.dropif(source_node), \n            dbt_external_tables.create_external_table(source_node)\n        ] %}\n    {% else %}\n        {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n    {% endif %}\n\n    {% set recover_partitions = dbt_external_tables.recover_partitions(source_node) %}\n    {% if recover_partitions %}\n    {% set build_plan = build_plan + [\n        recover_partitions\n    ] %}\n    {% endif %}\n\n    {% do return(build_plan) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.create_external_schema", "macro.dbt_external_tables.dropif", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table", "macro.dbt_external_tables.recover_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3214383, "supported_languages": null}, "macro.dbt_external_tables.spark__refresh_external_table": {"name": "spark__refresh_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\refresh_external_table.sql", "original_file_path": "macros\\plugins\\spark\\refresh_external_table.sql", "unique_id": "macro.dbt_external_tables.spark__refresh_external_table", "macro_sql": "{% macro spark__refresh_external_table(source_node) %}\n    \n    {% set refresh %}\n        refresh table {{source(source_node.source_name, source_node.name)}}\n    {% endset %}\n    \n    {% do return([refresh]) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3224487, "supported_languages": null}, "macro.dbt_external_tables.spark__dropif": {"name": "spark__dropif", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\helpers\\dropif.sql", "original_file_path": "macros\\plugins\\spark\\helpers\\dropif.sql", "unique_id": "macro.dbt_external_tables.spark__dropif", "macro_sql": "{% macro spark__dropif(node) %}\n    \n    {% set ddl %}\n        drop table if exists {{source(node.source_name, node.name)}}\n    {% endset %}\n    \n    {{return(ddl)}}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3224487, "supported_languages": null}, "macro.dbt_external_tables.spark__recover_partitions": {"name": "spark__recover_partitions", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\helpers\\recover_partitions.sql", "original_file_path": "macros\\plugins\\spark\\helpers\\recover_partitions.sql", "unique_id": "macro.dbt_external_tables.spark__recover_partitions", "macro_sql": "{% macro spark__recover_partitions(source_node) %}\n    {# https://docs.databricks.com/sql/language-manual/sql-ref-syntax-ddl-alter-table.html #}\n\n    {%- if source_node.external.partitions and source_node.external.using and source_node.external.using|lower != 'delta' -%}\n        {% set ddl %}\n            ALTER TABLE {{ source(source_node.source_name, source_node.name) }} RECOVER PARTITIONS\n        {% endset %}\n    {%- else -%}\n        {% set ddl = none %}\n    {%- endif -%}\n\n    {{return(ddl)}}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.323459, "supported_languages": null}, "macro.dbt_external_tables.recover_partitions": {"name": "recover_partitions", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\helpers\\recover_partitions.sql", "original_file_path": "macros\\plugins\\spark\\helpers\\recover_partitions.sql", "unique_id": "macro.dbt_external_tables.recover_partitions", "macro_sql": "{% macro recover_partitions(source_node) %}\n    {{ return(adapter.dispatch('recover_partitions', 'dbt_external_tables')(source_node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.default__recover_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.323459, "supported_languages": null}, "macro.dbt_external_tables.default__recover_partitions": {"name": "default__recover_partitions", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\spark\\helpers\\recover_partitions.sql", "original_file_path": "macros\\plugins\\spark\\helpers\\recover_partitions.sql", "unique_id": "macro.dbt_external_tables.default__recover_partitions", "macro_sql": "{% macro default__recover_partitions(source_node) %}\n    /*{# \n        We're dispatching this macro so that users can override it if required on other adapters\n        but this will work for spark/databricks. \n    #}*/\n\n    {{ exceptions.raise_not_implemented('recover_partitions macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3244662, "supported_languages": null}, "macro.dbt_external_tables.sqlserver__create_external_schema": {"name": "sqlserver__create_external_schema", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\sqlserver\\create_external_schema.sql", "original_file_path": "macros\\plugins\\sqlserver\\create_external_schema.sql", "unique_id": "macro.dbt_external_tables.sqlserver__create_external_schema", "macro_sql": "{% macro sqlserver__create_external_schema(source_node) %}\n    {# https://learn.microsoft.com/en-us/sql/t-sql/statements/create-schema-transact-sql?view=sql-server-ver16 #}\n\n    {% set ddl %}\n        IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = '{{ source_node.schema }}')\n        BEGIN\n        EXEC('CREATE SCHEMA [{{ source_node.schema }}]')\n        END \n    {% endset %}\n\n    {{return(ddl)}}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3244662, "supported_languages": null}, "macro.dbt_external_tables.sqlserver__create_external_table": {"name": "sqlserver__create_external_table", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\sqlserver\\create_external_table.sql", "original_file_path": "macros\\plugins\\sqlserver\\create_external_table.sql", "unique_id": "macro.dbt_external_tables.sqlserver__create_external_table", "macro_sql": "{% macro sqlserver__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n\n    {% if external.ansi_nulls is true -%} SET ANSI_NULLS ON; {%- endif %}\n    {% if external.quoted_identifier is true -%} SET QUOTED_IDENTIFIER ON; {%- endif %}\n\n    create external table {{source(source_node.source_name, source_node.name)}} (\n        {% for column in columns %}\n            {# TODO set nullity based on schema tests?? #}\n            {%- set nullity = 'NOT NULL' if 'not_null' in columns.tests else 'NULL'-%}\n            {{adapter.quote(column.name)}} {{column.data_type}} {{nullity}}\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    )\n    WITH (\n        {# remove keys that are None (i.e. not defined for a given source) #}\n        {%- for key, value in external.items() if value is not none and key not in ['ansi_nulls', 'quoted_identifier'] -%}\n            {{key}} = \n                {%- if key in [\"location\", \"schema_name\", \"object_name\"] -%}\n                    '{{value}}'\n                {% elif key in [\"data_source\",\"file_format\"] -%}\n                    [{{value}}]\n                {% else -%}\n                    {{value}}\n                {%- endif -%}\n            {{- ',' if not loop.last -}}\n            {%- endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3264601, "supported_languages": null}, "macro.dbt_external_tables.sqlserver__get_external_build_plan": {"name": "sqlserver__get_external_build_plan", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\sqlserver\\get_external_build_plan.sql", "original_file_path": "macros\\plugins\\sqlserver\\get_external_build_plan.sql", "unique_id": "macro.dbt_external_tables.sqlserver__get_external_build_plan", "macro_sql": "{% macro sqlserver__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n\n    {% set old_relation = adapter.get_relation(\n        database = source_node.database,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n\n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if create_or_replace %}\n        {% set build_plan = build_plan + [ \n            dbt_external_tables.create_external_schema(source_node),\n            dbt_external_tables.dropif(source_node), \n            dbt_external_tables.create_external_table(source_node)\n        ] %}\n    {% else %}\n        {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n    {% endif %}\n    {% do return(build_plan) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_external_tables.create_external_schema", "macro.dbt_external_tables.dropif", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3274593, "supported_languages": null}, "macro.dbt_external_tables.sqlserver__dropif": {"name": "sqlserver__dropif", "resource_type": "macro", "package_name": "dbt_external_tables", "path": "macros\\plugins\\sqlserver\\helpers\\dropif.sql", "original_file_path": "macros\\plugins\\sqlserver\\helpers\\dropif.sql", "unique_id": "macro.dbt_external_tables.sqlserver__dropif", "macro_sql": "{% macro sqlserver__dropif(node) %}\n    \n    {% set ddl %}\n      if object_id ('{{source(node.source_name, node.name)}}') is not null\n        begin\n        drop external table {{source(node.source_name, node.name)}}\n        end\n    {% endset %}\n    \n    {{return(ddl)}}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3274593, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\accepted_range.sql", "original_file_path": "macros\\generic_tests\\accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3284597, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\accepted_range.sql", "original_file_path": "macros\\generic_tests\\accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3284597, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\at_least_one.sql", "original_file_path": "macros\\generic_tests\\at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3294582, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\at_least_one.sql", "original_file_path": "macros\\generic_tests\\at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      where {{ column_name }} is not null\n      limit 1\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3294582, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\cardinality_equality.sql", "original_file_path": "macros\\generic_tests\\cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3304582, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\cardinality_equality.sql", "original_file_path": "macros\\generic_tests\\cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3304582, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\equality.sql", "original_file_path": "macros\\generic_tests\\equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.331458, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\equality.sql", "original_file_path": "macros\\generic_tests\\equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3324583, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\equal_rowcount.sql", "original_file_path": "macros\\generic_tests\\equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3324583, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\equal_rowcount.sql", "original_file_path": "macros\\generic_tests\\equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3344586, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\expression_is_true.sql", "original_file_path": "macros\\generic_tests\\expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3344586, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\expression_is_true.sql", "original_file_path": "macros\\generic_tests\\expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3344586, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\fewer_rows_than.sql", "original_file_path": "macros\\generic_tests\\fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3354588, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\fewer_rows_than.sql", "original_file_path": "macros\\generic_tests\\fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3374648, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\mutually_exclusive_ranges.sql", "original_file_path": "macros\\generic_tests\\mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3394585, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\mutually_exclusive_ranges.sql", "original_file_path": "macros\\generic_tests\\mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3414588, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_accepted_values.sql", "original_file_path": "macros\\generic_tests\\not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3414588, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_accepted_values.sql", "original_file_path": "macros\\generic_tests\\not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3424592, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_constant.sql", "original_file_path": "macros\\generic_tests\\not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3424592, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_constant.sql", "original_file_path": "macros\\generic_tests\\not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3434591, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_empty_string.sql", "original_file_path": "macros\\generic_tests\\not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3434591, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_empty_string.sql", "original_file_path": "macros\\generic_tests\\not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3434591, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_null_proportion.sql", "original_file_path": "macros\\generic_tests\\not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3444586, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\not_null_proportion.sql", "original_file_path": "macros\\generic_tests\\not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.345459, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\recency.sql", "original_file_path": "macros\\generic_tests\\recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3464584, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\recency.sql", "original_file_path": "macros\\generic_tests\\recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3474584, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\relationships_where.sql", "original_file_path": "macros\\generic_tests\\relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3474584, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\relationships_where.sql", "original_file_path": "macros\\generic_tests\\relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3484585, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\sequential_values.sql", "original_file_path": "macros\\generic_tests\\sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3494587, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\sequential_values.sql", "original_file_path": "macros\\generic_tests\\sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3504581, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\unique_combination_of_columns.sql", "original_file_path": "macros\\generic_tests\\unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3504581, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\generic_tests\\unique_combination_of_columns.sql", "original_file_path": "macros\\generic_tests\\unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3514583, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\log_info.sql", "original_file_path": "macros\\jinja_helpers\\log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3524582, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\log_info.sql", "original_file_path": "macros\\jinja_helpers\\log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3524582, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\pretty_log_format.sql", "original_file_path": "macros\\jinja_helpers\\pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3524582, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\pretty_log_format.sql", "original_file_path": "macros\\jinja_helpers\\pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3534656, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\pretty_time.sql", "original_file_path": "macros\\jinja_helpers\\pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3534656, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\pretty_time.sql", "original_file_path": "macros\\jinja_helpers\\pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3534656, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\slugify.sql", "original_file_path": "macros\\jinja_helpers\\slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3544567, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\_is_ephemeral.sql", "original_file_path": "macros\\jinja_helpers\\_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3554597, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\jinja_helpers\\_is_relation.sql", "original_file_path": "macros\\jinja_helpers\\_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3554597, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3564587, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3564587, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3574586, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\date_spine.sql", "original_file_path": "macros\\sql\\date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3574586, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\deduplicate.sql", "original_file_path": "macros\\sql\\deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.snowflake__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.358459, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\deduplicate.sql", "original_file_path": "macros\\sql\\deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.358459, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\deduplicate.sql", "original_file_path": "macros\\sql\\deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.358459, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\deduplicate.sql", "original_file_path": "macros\\sql\\deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.358459, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\deduplicate.sql", "original_file_path": "macros\\sql\\deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3594592, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\deduplicate.sql", "original_file_path": "macros\\sql\\deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3594592, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3594592, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.360459, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.360459, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\generate_series.sql", "original_file_path": "macros\\sql\\generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3614585, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\generate_surrogate_key.sql", "original_file_path": "macros\\sql\\generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3614585, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\generate_surrogate_key.sql", "original_file_path": "macros\\sql\\generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.362459, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_column_values.sql", "original_file_path": "macros\\sql\\get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3634584, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_column_values.sql", "original_file_path": "macros\\sql\\get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.365459, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_filtered_columns_in_relation.sql", "original_file_path": "macros\\sql\\get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.365459, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_filtered_columns_in_relation.sql", "original_file_path": "macros\\sql\\get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3664584, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_query_results_as_dict.sql", "original_file_path": "macros\\sql\\get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3674583, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_query_results_as_dict.sql", "original_file_path": "macros\\sql\\get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3684583, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_relations_by_pattern.sql", "original_file_path": "macros\\sql\\get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3684583, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_relations_by_pattern.sql", "original_file_path": "macros\\sql\\get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3704581, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_relations_by_prefix.sql", "original_file_path": "macros\\sql\\get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3704581, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_relations_by_prefix.sql", "original_file_path": "macros\\sql\\get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3714592, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_single_value.sql", "original_file_path": "macros\\sql\\get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.372457, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_single_value.sql", "original_file_path": "macros\\sql\\get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.372457, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.374459, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.374459, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3754597, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_tables_by_pattern_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3754597, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_tables_by_prefix_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3754597, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_tables_by_prefix_sql.sql", "original_file_path": "macros\\sql\\get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3764627, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_table_types_sql.sql", "original_file_path": "macros\\sql\\get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3764627, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_table_types_sql.sql", "original_file_path": "macros\\sql\\get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3764627, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_table_types_sql.sql", "original_file_path": "macros\\sql\\get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3764627, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\get_table_types_sql.sql", "original_file_path": "macros\\sql\\get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3774629, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\groupby.sql", "original_file_path": "macros\\sql\\groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3774629, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\groupby.sql", "original_file_path": "macros\\sql\\groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3774629, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3784595, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3784595, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3794582, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\haversine_distance.sql", "original_file_path": "macros\\sql\\haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3804595, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\nullcheck.sql", "original_file_path": "macros\\sql\\nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3804595, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\nullcheck.sql", "original_file_path": "macros\\sql\\nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3814588, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\nullcheck_table.sql", "original_file_path": "macros\\sql\\nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3814588, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\nullcheck_table.sql", "original_file_path": "macros\\sql\\nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3824553, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\pivot.sql", "original_file_path": "macros\\sql\\pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3834558, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\pivot.sql", "original_file_path": "macros\\sql\\pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3846226, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\safe_add.sql", "original_file_path": "macros\\sql\\safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3846226, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\safe_add.sql", "original_file_path": "macros\\sql\\safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3856356, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\safe_divide.sql", "original_file_path": "macros\\sql\\safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3856356, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\safe_divide.sql", "original_file_path": "macros\\sql\\safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3856356, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\safe_subtract.sql", "original_file_path": "macros\\sql\\safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3866348, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\safe_subtract.sql", "original_file_path": "macros\\sql\\safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3866348, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\star.sql", "original_file_path": "macros\\sql\\star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3876343, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\star.sql", "original_file_path": "macros\\sql\\star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3896344, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\surrogate_key.sql", "original_file_path": "macros\\sql\\surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3896344, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\surrogate_key.sql", "original_file_path": "macros\\sql\\surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3906338, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\union.sql", "original_file_path": "macros\\sql\\union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3926308, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\union.sql", "original_file_path": "macros\\sql\\union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3966353, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\unpivot.sql", "original_file_path": "macros\\sql\\unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.397635, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\unpivot.sql", "original_file_path": "macros\\sql\\unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3996415, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\width_bucket.sql", "original_file_path": "macros\\sql\\width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.snowflake__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.3996415, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\width_bucket.sql", "original_file_path": "macros\\sql\\width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4006364, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\sql\\width_bucket.sql", "original_file_path": "macros\\sql\\width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4006364, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\web\\get_url_host.sql", "original_file_path": "macros\\web\\get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4006364, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\web\\get_url_host.sql", "original_file_path": "macros\\web\\get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4016345, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\web\\get_url_parameter.sql", "original_file_path": "macros\\web\\get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4016345, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\web\\get_url_parameter.sql", "original_file_path": "macros\\web\\get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4016345, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\web\\get_url_path.sql", "original_file_path": "macros\\web\\get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4026344, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros\\web\\get_url_path.sql", "original_file_path": "macros\\web\\get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1718885160.4026344, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs\\overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {"test.bdh_dbt_models.not_null_lt_churned_resideltial_daily_sub_billing_id_.59e5d68e8b": [{"test_metadata": {"name": "not_null", "kwargs": {"column_name": "sub_billing_id,", "model": "{{ get_where_subquery(ref('lt_churned_resideltial_daily')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "not_null_lt_churned_resideltial_daily_sub_billing_id_", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "not_null_lt_churned_resideltial_daily_sub_billing_id_.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_churned_residential\\_lt_churned_residential.yml", "unique_id": "test.bdh_dbt_models.not_null_lt_churned_resideltial_daily_sub_billing_id_.59e5d68e8b", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_churned_residential", "not_null_lt_churned_resideltial_daily_sub_billing_id_"], "alias": "not_null_lt_churned_resideltial_daily_sub_billing_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = ''", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = ''"}, "created_at": 1718885161.873248, "config_call_dict": {"where": "dt = ''"}, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = ''\") }}", "language": "sql", "refs": [{"name": "lt_churned_resideltial_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id,", "file_key_name": "models.lt_churned_resideltial_daily", "attached_node": null}], "test.bdh_dbt_models.unique_lt_churned_resideltial_daily_sub_billing_id_.5ae9ecea73": [{"test_metadata": {"name": "unique", "kwargs": {"column_name": "sub_billing_id,", "model": "{{ get_where_subquery(ref('lt_churned_resideltial_daily')) }}"}, "namespace": null}, "database": "SANDBOX", "schema": "dbt_test__audit", "name": "unique_lt_churned_resideltial_daily_sub_billing_id_", "resource_type": "test", "package_name": "bdh_dbt_models", "path": "unique_lt_churned_resideltial_daily_sub_billing_id_.sql", "original_file_path": "models\\bdh_lt\\lt_customer_360_profile\\marts\\lt_residential\\lt_churned_residential\\_lt_churned_residential.yml", "unique_id": "test.bdh_dbt_models.unique_lt_churned_resideltial_daily_sub_billing_id_.5ae9ecea73", "fqn": ["bdh_dbt_models", "bdh_lt", "lt_customer_360_profile", "marts", "lt_residential", "lt_churned_residential", "unique_lt_churned_resideltial_daily_sub_billing_id_"], "alias": "unique_lt_churned_resideltial_daily_sub_billing_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": "dt = ''", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "dt = ''"}, "created_at": 1718885161.875247, "config_call_dict": {"where": "dt = ''"}, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(where=\"dt = ''\") }}", "language": "sql", "refs": [{"name": "lt_churned_resideltial_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sub_billing_id,", "file_key_name": "models.lt_churned_resideltial_daily", "attached_node": null}]}, "parent_map": {"model.bdh_dbt_models.int_ee_accounts": ["model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x"], "model.bdh_dbt_models.int_ee_assets": ["model.bdh_dbt_models.stg_ee_assets"], "model.bdh_dbt_models.int_ee_assets_fiber": ["model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_product"], "model.bdh_dbt_models.int_ee_assets_today": ["model.bdh_dbt_models.int_ee_assets", "model.bdh_dbt_models.int_ee_assets_fiber"], "model.bdh_dbt_models.int_ee_churn_snapshot_base": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_doc_status_description", "model.bdh_dbt_models.stg_ee_s12_msisdn", "model.bdh_dbt_models.stg_ee_s12_priedai"], "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base": ["model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_assets_xa", "model.bdh_dbt_models.stg_ee_mokejimo_planai", "model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all", "model.bdh_dbt_models.stg_ee_pp_prices", "model.bdh_dbt_models.stg_ee_product", "source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate"], "model.bdh_dbt_models.int_ee_payment_fact_base": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_payments_history"], "model.bdh_dbt_models.int_ee_price_plans": ["model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_pp_prices", "model.bdh_dbt_models.stg_ee_product"], "model.bdh_dbt_models.int_ee_sales_fact_base": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_contact"], "model.bdh_dbt_models.int_ee_sales_point_visits_base": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_darbuotojai", "model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese", "model.bdh_dbt_models.stg_ee_logs", "model.bdh_dbt_models.stg_ee_subgrupes"], "model.bdh_dbt_models.int_ee_subscriber_snapshot_base": ["model.bdh_dbt_models.int_ee_accounts", "model.bdh_dbt_models.int_ee_assets_today", "model.bdh_dbt_models.int_ee_price_plans", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_blacklist", "model.bdh_dbt_models.stg_ee_contact", "model.bdh_dbt_models.stg_ee_port_in_out", "model.bdh_dbt_models.stg_ee_product"], "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base": ["model.bdh_dbt_models.ee_subscriber_snapshot", "model.bdh_dbt_models.stg_ee_accounts", "model.bdh_dbt_models.stg_ee_accounts_x", "model.bdh_dbt_models.stg_ee_address", "model.bdh_dbt_models.stg_ee_assets", "model.bdh_dbt_models.stg_ee_assets_x", "model.bdh_dbt_models.stg_ee_business_sectors", "model.bdh_dbt_models.stg_ee_contact", "model.bdh_dbt_models.stg_ee_order_items_xa", "model.bdh_dbt_models.stg_ee_order_line_items", "model.bdh_dbt_models.stg_ee_orders", "model.bdh_dbt_models.stg_ee_po_emta_data", "model.bdh_dbt_models.stg_ee_product"], "model.bdh_dbt_models.ee_churn_snapshot": ["model.bdh_dbt_models.int_ee_churn_snapshot_base"], "model.bdh_dbt_models.ee_custom_metrics_current_offers": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base"], "model.bdh_dbt_models.ee_payment_fact": ["model.bdh_dbt_models.int_ee_payment_fact_base"], "model.bdh_dbt_models.ee_sales_point_visits": ["model.bdh_dbt_models.int_ee_sales_point_visits_base"], "model.bdh_dbt_models.ee_subscriber_snapshot": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"], "model.bdh_dbt_models.ee_subscriber_snapshot_x": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_business_sectors": ["source.bdh_dbt_models.bdh_ee_analysts_tables.business_sectors"], "model.bdh_dbt_models.stg_ee_po_emta_data": ["source.bdh_dbt_models.bdh_ee_analysts_tables.po_emta_data"], "model.bdh_dbt_models.stg_ee_pp_prices": ["source.bdh_dbt_models.bdh_ee_analysts_tables.aa_pp_prices"], "model.bdh_dbt_models.stg_ee_vat_rate": ["source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate"], "model.bdh_dbt_models.stg_ee_darbuotojai": ["source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai"], "model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese": ["source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai_subgrupese"], "model.bdh_dbt_models.stg_ee_doc_status_description": ["source.bdh_dbt_models.bdh_ee_sales_tool.doc_status_description"], "model.bdh_dbt_models.stg_ee_mokejimo_planai": ["source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai"], "model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all": ["source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff_all"], "model.bdh_dbt_models.stg_ee_s12_msisdn": ["source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn"], "model.bdh_dbt_models.stg_ee_s12_priedai": ["source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai"], "model.bdh_dbt_models.stg_ee_subgrupes": ["source.bdh_dbt_models.bdh_ee_sales_tool.subgrupes"], "model.bdh_dbt_models.stg_ee_accounts": ["source.bdh_dbt_models.bdh_ee_siebel.accounts"], "model.bdh_dbt_models.stg_ee_accounts_x": ["source.bdh_dbt_models.bdh_ee_siebel.accounts_x"], "model.bdh_dbt_models.stg_ee_address": ["source.bdh_dbt_models.bdh_ee_siebel.address"], "model.bdh_dbt_models.stg_ee_assets": ["source.bdh_dbt_models.bdh_ee_siebel.assets"], "model.bdh_dbt_models.stg_ee_assets_x": ["source.bdh_dbt_models.bdh_ee_siebel.assets_x"], "model.bdh_dbt_models.stg_ee_assets_xa": ["source.bdh_dbt_models.bdh_ee_siebel.assets_xa"], "model.bdh_dbt_models.stg_ee_blacklist": ["source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref"], "model.bdh_dbt_models.stg_ee_contact": ["source.bdh_dbt_models.bdh_ee_siebel.contact"], "model.bdh_dbt_models.stg_ee_logs": ["source.bdh_dbt_models.bdh_ee_siebel.logs"], "model.bdh_dbt_models.stg_ee_orders": ["source.bdh_dbt_models.bdh_ee_siebel.orders"], "model.bdh_dbt_models.stg_ee_order_items_xa": ["source.bdh_dbt_models.bdh_ee_siebel.order_items_xa"], "model.bdh_dbt_models.stg_ee_order_line_items": ["source.bdh_dbt_models.bdh_ee_siebel.order_line_items"], "model.bdh_dbt_models.stg_ee_port_in_out": ["source.bdh_dbt_models.bdh_ee_siebel.order_line_items"], "model.bdh_dbt_models.stg_ee_product": ["source.bdh_dbt_models.bdh_ee_siebel.product"], "model.bdh_dbt_models.stg_ee_payments_history": ["source.bdh_dbt_models.bdh_ee_singleview.payments_history"], "model.bdh_dbt_models.int_discounts": ["model.bdh_dbt_models.stg_v_assets_xa"], "model.bdh_dbt_models.products_in_siebel": ["model.bdh_dbt_models.int_discounts", "model.bdh_dbt_models.stg_v_accounts", "model.bdh_dbt_models.stg_v_assets", "model.bdh_dbt_models.stg_v_assets_x", "model.bdh_dbt_models.stg_v_product"], "model.bdh_dbt_models.stg_v_accounts": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts"], "model.bdh_dbt_models.stg_v_assets": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets"], "model.bdh_dbt_models.stg_v_assets_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_x"], "model.bdh_dbt_models.stg_v_assets_xa": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa"], "model.bdh_dbt_models.stg_v_product": ["source.bdh_dbt_models.bdh_lt_siebel.v_product"], "model.bdh_dbt_models.int_asset_ids_bus": ["model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_outbound_bar_bus": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_billing_profile"], "model.bdh_dbt_models.int_lt_product_price_bus": ["model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_bus": ["model.bdh_dbt_models.int_lt_sub_type_bus", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus": ["model.bdh_dbt_models.int_asset_ids_bus", "model.bdh_dbt_models.int_lt_outbound_bar_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_tmp_contact", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus": ["model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus": ["model.bdh_dbt_models.int_lt_product_price_bus", "model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_sub_type_bus": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_this_day_subscribers_bus": ["model.bdh_dbt_models.int_asset_ids_bus", "model.bdh_dbt_models.int_lt_product_price_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_churned_daily_res": [], "model.bdh_dbt_models.int_lt_account_today_res": ["model.bdh_dbt_models.int_lt_all_todays_accounts_res"], "model.bdh_dbt_models.int_lt_all_todays_accounts_res": ["model.bdh_dbt_models.stg_tmp_accounts"], "model.bdh_dbt_models.int_lt_outbound_bar_res": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_billing_profile"], "model.bdh_dbt_models.int_lt_product_price_res": ["model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_res": ["model.bdh_dbt_models.int_lt_sub_type_res", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "model.bdh_dbt_models.int_lt_wsc_admin_res"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res": ["model.bdh_dbt_models.int_lt_account_today_res", "model.bdh_dbt_models.int_lt_outbound_bar_res", "model.bdh_dbt_models.int_lt_sub_consent_res", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.int_lt_this_day_subscribers_res", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_tmp_contact", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_sub_consent_res": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res": ["model.bdh_dbt_models.int_lt_product_price_res", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_x"], "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res": ["model.bdh_dbt_models.int_lt_all_todays_accounts_res", "model.bdh_dbt_models.int_lt_product_price_res", "model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_sub_type_res": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_this_day_subscribers_res": ["model.bdh_dbt_models.int_lt_all_todays_accounts_res", "model.bdh_dbt_models.int_lt_product_price_res", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets"], "model.bdh_dbt_models.int_lt_wsc_admin_res": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.int_lt_subscriptions_data_joined": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_tmp_accounts_x", "model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_tmp_product"], "model.bdh_dbt_models.lt_subscriber_snapshot_business": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_bus"], "model.bdh_dbt_models.lt_churned_daily_residential": ["model.bdh_dbt_models.int_lt_churned_daily_res"], "model.bdh_dbt_models.lt_subscriber_snapshot_residential": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_res"], "model.bdh_dbt_models.lt_subscriptions_data_residential_mbb": ["model.bdh_dbt_models.int_lt_subscriptions_data_joined"], "model.bdh_dbt_models.lt_subscriptions_data_residential_voice": ["model.bdh_dbt_models.int_lt_subscriptions_data_joined"], "model.bdh_dbt_models.stg_lt_darbuotojai": ["source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai"], "model.bdh_dbt_models.stg_lt_mokejimo_planai": ["source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai"], "model.bdh_dbt_models.stg_lt_mokejimo_planai_services": ["source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_services"], "model.bdh_dbt_models.stg_lt_package_codes": ["source.bdh_dbt_models.bdh_lt_sales_tool.package_codes"], "model.bdh_dbt_models.stg_tmp_accounts": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts"], "model.bdh_dbt_models.stg_tmp_accounts_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x"], "model.bdh_dbt_models.stg_tmp_assets": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets"], "model.bdh_dbt_models.stg_tmp_assets_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_x"], "model.bdh_dbt_models.stg_tmp_assets_xa": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa"], "model.bdh_dbt_models.stg_tmp_billing_profile": ["source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile"], "model.bdh_dbt_models.stg_tmp_contact": ["source.bdh_dbt_models.bdh_lt_siebel.v_contact"], "model.bdh_dbt_models.stg_tmp_orders": ["source.bdh_dbt_models.bdh_lt_siebel.v_orders"], "model.bdh_dbt_models.stg_tmp_order_line_items": ["source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items"], "model.bdh_dbt_models.stg_tmp_product": ["source.bdh_dbt_models.bdh_lt_siebel.v_product"], "model.bdh_dbt_models.lv_subscribers_snapshot": [], "model.bdh_dbt_models.stg_raw_lv_assets": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets"], "model.bdh_dbt_models.stg_raw_lv_assets_xa": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa"], "model.bdh_dbt_models.stg_raw_lv_order_line_items": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items"], "model.bdh_dbt_models.stg_raw_lv_products": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products"], "model.bdh_dbt_models.v_address_x": ["source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_intersection_s_con_addr"], "model.bdh_dbt_models.v_raw_demo_csv_file": ["source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_csv_file"], "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot": ["source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext_x", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_s_addr_per", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_billing_profile_s_inv_prof", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact", "source.bdh_dbt_models.bdh_test_lv_one_time_load.baltcom_fbb_addresses", "source.bdh_dbt_models.bdh_test_lv_one_time_load.t2lv_monthly_b2b_mng_hist"], "snapshot.bdh_dbt_models.ee_accounts": ["source.bdh_dbt_models.bdh_ee_siebel.accounts", "source.bdh_dbt_models.bdh_ee_siebel.accounts_cdl"], "snapshot.bdh_dbt_models.ee_accounts_x": ["source.bdh_dbt_models.bdh_ee_siebel.accounts_x", "source.bdh_dbt_models.bdh_ee_siebel.accounts_x_cdl"], "snapshot.bdh_dbt_models.ee_activities": ["source.bdh_dbt_models.bdh_ee_siebel.activities", "source.bdh_dbt_models.bdh_ee_siebel.activities_cdl"], "snapshot.bdh_dbt_models.ee_activities_x": ["source.bdh_dbt_models.bdh_ee_siebel.activities_x", "source.bdh_dbt_models.bdh_ee_siebel.activities_x_cdl"], "snapshot.bdh_dbt_models.ee_address": ["source.bdh_dbt_models.bdh_ee_siebel.address", "source.bdh_dbt_models.bdh_ee_siebel.address_cdl"], "snapshot.bdh_dbt_models.ee_address_x": ["source.bdh_dbt_models.bdh_ee_siebel.address_x", "source.bdh_dbt_models.bdh_ee_siebel.address_x_cdl"], "snapshot.bdh_dbt_models.ee_assets": ["source.bdh_dbt_models.bdh_ee_siebel.assets", "source.bdh_dbt_models.bdh_ee_siebel.assets_cdl"], "snapshot.bdh_dbt_models.ee_assets_xa": ["source.bdh_dbt_models.bdh_ee_siebel.assets_xa", "source.bdh_dbt_models.bdh_ee_siebel.assets_xa_cdl"], "snapshot.bdh_dbt_models.ee_assets_x": ["source.bdh_dbt_models.bdh_ee_siebel.assets_x", "source.bdh_dbt_models.bdh_ee_siebel.assets_x_cdl"], "snapshot.bdh_dbt_models.ee_audit_item": ["source.bdh_dbt_models.bdh_ee_siebel.audit_item", "source.bdh_dbt_models.bdh_ee_siebel.audit_item_cdl"], "snapshot.bdh_dbt_models.ee_billing_profile": ["source.bdh_dbt_models.bdh_ee_siebel.billing_profile", "source.bdh_dbt_models.bdh_ee_siebel.billing_profile_cdl"], "snapshot.bdh_dbt_models.ee_campaigns": ["source.bdh_dbt_models.bdh_ee_siebel.campaigns", "source.bdh_dbt_models.bdh_ee_siebel.campaigns_cdl"], "snapshot.bdh_dbt_models.ee_consent": ["source.bdh_dbt_models.bdh_ee_siebel.consent", "source.bdh_dbt_models.bdh_ee_siebel.consent_cdl"], "snapshot.bdh_dbt_models.ee_contact": ["source.bdh_dbt_models.bdh_ee_siebel.contact", "source.bdh_dbt_models.bdh_ee_siebel.contact_cdl"], "snapshot.bdh_dbt_models.ee_contact_x": ["source.bdh_dbt_models.bdh_ee_siebel.contact_x", "source.bdh_dbt_models.bdh_ee_siebel.contact_x_cdl"], "snapshot.bdh_dbt_models.ee_cx_nt_acc_pref": ["source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref", "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref_cdl"], "snapshot.bdh_dbt_models.ee_cx_pay_schedule": ["source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule", "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule_cdl"], "snapshot.bdh_dbt_models.ee_cx_vas_provider": ["source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider", "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider_cdl"], "snapshot.bdh_dbt_models.ee_dd_contract": ["source.bdh_dbt_models.bdh_ee_siebel.dd_contract", "source.bdh_dbt_models.bdh_ee_siebel.dd_contract_cdl"], "snapshot.bdh_dbt_models.ee_invc_adj_item": ["source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item", "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item_cdl"], "snapshot.bdh_dbt_models.ee_invoice_adj": ["source.bdh_dbt_models.bdh_ee_siebel.invoice_adj", "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj_cdl"], "snapshot.bdh_dbt_models.ee_list_of_values": ["source.bdh_dbt_models.bdh_ee_siebel.list_of_values", "source.bdh_dbt_models.bdh_ee_siebel.list_of_values_cdl"], "snapshot.bdh_dbt_models.ee_logs": ["source.bdh_dbt_models.bdh_ee_siebel.logs", "source.bdh_dbt_models.bdh_ee_siebel.logs_cdl"], "snapshot.bdh_dbt_models.ee_notification_settings": ["source.bdh_dbt_models.bdh_ee_siebel.notification_settings", "source.bdh_dbt_models.bdh_ee_siebel.notification_settings_cdl"], "snapshot.bdh_dbt_models.ee_orders": ["source.bdh_dbt_models.bdh_ee_siebel.orders", "source.bdh_dbt_models.bdh_ee_siebel.orders_cdl"], "snapshot.bdh_dbt_models.ee_order_line_items": ["source.bdh_dbt_models.bdh_ee_siebel.order_line_items", "source.bdh_dbt_models.bdh_ee_siebel.order_line_items_cdl"], "snapshot.bdh_dbt_models.ee_order_items_xa": ["source.bdh_dbt_models.bdh_ee_siebel.order_items_xa", "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa_cdl"], "snapshot.bdh_dbt_models.ee_payment_claim": ["source.bdh_dbt_models.bdh_ee_siebel.payment_claim", "source.bdh_dbt_models.bdh_ee_siebel.payment_claim_cdl"], "snapshot.bdh_dbt_models.ee_postn": ["source.bdh_dbt_models.bdh_ee_siebel.postn", "source.bdh_dbt_models.bdh_ee_siebel.postn_cdl"], "snapshot.bdh_dbt_models.ee_product": ["source.bdh_dbt_models.bdh_ee_siebel.product", "source.bdh_dbt_models.bdh_ee_siebel.product_cdl"], "snapshot.bdh_dbt_models.ee_service_request": ["source.bdh_dbt_models.bdh_ee_siebel.service_request", "source.bdh_dbt_models.bdh_ee_siebel.service_request_cdl"], "snapshot.bdh_dbt_models.ee_service_request_x": ["source.bdh_dbt_models.bdh_ee_siebel.service_request_x", "source.bdh_dbt_models.bdh_ee_siebel.service_request_x_cdl"], "snapshot.bdh_dbt_models.ee_user": ["source.bdh_dbt_models.bdh_ee_siebel.user", "source.bdh_dbt_models.bdh_ee_siebel.user_cdl"], "snapshot.bdh_dbt_models.v_accounts": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts", "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_cdl"], "snapshot.bdh_dbt_models.v_accounts_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x", "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x_cdl"], "snapshot.bdh_dbt_models.v_address": ["source.bdh_dbt_models.bdh_lt_siebel.v_address", "source.bdh_dbt_models.bdh_lt_siebel.v_address_cdl"], "snapshot.bdh_dbt_models.v_address_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_address_x", "source.bdh_dbt_models.bdh_lt_siebel.v_address_x_cdl"], "snapshot.bdh_dbt_models.v_assets": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets", "source.bdh_dbt_models.bdh_lt_siebel.v_assets_cdl"], "snapshot.bdh_dbt_models.v_assets_xa": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa", "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa_cdl"], "snapshot.bdh_dbt_models.v_assets_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_assets_x", "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x_cdl"], "snapshot.bdh_dbt_models.v_billing_profile": ["source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile", "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile_cdl"], "snapshot.bdh_dbt_models.v_contact": ["source.bdh_dbt_models.bdh_lt_siebel.v_contact", "source.bdh_dbt_models.bdh_lt_siebel.v_contact_cdl"], "snapshot.bdh_dbt_models.v_contact_x": ["source.bdh_dbt_models.bdh_lt_siebel.v_contact_x", "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x_cdl"], "snapshot.bdh_dbt_models.v_list_of_values": ["source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values", "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values_cdl"], "snapshot.bdh_dbt_models.v_logs": ["source.bdh_dbt_models.bdh_lt_siebel.v_logs", "source.bdh_dbt_models.bdh_lt_siebel.v_logs_cdl"], "snapshot.bdh_dbt_models.v_notification_settings": ["source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings", "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings_cdl"], "snapshot.bdh_dbt_models.v_orders": ["source.bdh_dbt_models.bdh_lt_siebel.v_orders", "source.bdh_dbt_models.bdh_lt_siebel.v_orders_cdl"], "snapshot.bdh_dbt_models.v_order_line_items": ["source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items", "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items_cdl"], "snapshot.bdh_dbt_models.v_product": ["source.bdh_dbt_models.bdh_lt_siebel.v_product", "source.bdh_dbt_models.bdh_lt_siebel.v_product_cdl"], "snapshot.bdh_dbt_models.v_user": ["source.bdh_dbt_models.bdh_lt_siebel.v_user", "source.bdh_dbt_models.bdh_lt_siebel.v_user_cdl"], "snapshot.bdh_dbt_models.lv_v_accounts": ["source.bdh_dbt_models.bdh_lv_siebel.v_accounts", "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_cdl"], "snapshot.bdh_dbt_models.lv_v_accounts_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x", "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x_cdl"], "snapshot.bdh_dbt_models.lv_v_activities": ["source.bdh_dbt_models.bdh_lv_siebel.v_activities", "source.bdh_dbt_models.bdh_lv_siebel.v_activities_cdl"], "snapshot.bdh_dbt_models.lv_v_activities_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_activities_x", "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x_cdl"], "snapshot.bdh_dbt_models.lv_v_address": ["source.bdh_dbt_models.bdh_lv_siebel.v_address", "source.bdh_dbt_models.bdh_lv_siebel.v_address_cdl"], "snapshot.bdh_dbt_models.lv_v_address_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_address_x", "source.bdh_dbt_models.bdh_lv_siebel.v_address_x_cdl"], "snapshot.bdh_dbt_models.lv_v_assets": ["source.bdh_dbt_models.bdh_lv_siebel.v_assets", "source.bdh_dbt_models.bdh_lv_siebel.v_assets_cdl"], "snapshot.bdh_dbt_models.lv_v_assets_xa": ["source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa", "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa_cdl"], "snapshot.bdh_dbt_models.lv_v_assets_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_assets_x", "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x_cdl"], "snapshot.bdh_dbt_models.lv_v_audit_item": ["source.bdh_dbt_models.bdh_lv_siebel.v_audit_item", "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item_cdl"], "snapshot.bdh_dbt_models.lv_v_billing_profile": ["source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile", "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile_cdl"], "snapshot.bdh_dbt_models.lv_v_contact": ["source.bdh_dbt_models.bdh_lv_siebel.v_contact", "source.bdh_dbt_models.bdh_lv_siebel.v_contact_cdl"], "snapshot.bdh_dbt_models.lv_v_contact_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_contact_x", "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x_cdl"], "snapshot.bdh_dbt_models.lv_v_list_of_values": ["source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values", "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values_cdl"], "snapshot.bdh_dbt_models.lv_v_logs": ["source.bdh_dbt_models.bdh_lt_siebel.v_logs", "source.bdh_dbt_models.bdh_lv_siebel.v_logs_cdl"], "snapshot.bdh_dbt_models.lv_v_notification_settings": ["source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings", "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings_cdl"], "snapshot.bdh_dbt_models.lv_v_notification": ["source.bdh_dbt_models.bdh_lv_siebel.v_notification", "source.bdh_dbt_models.bdh_lv_siebel.v_notification_cdl"], "snapshot.bdh_dbt_models.lv_v_orders": ["source.bdh_dbt_models.bdh_lv_siebel.v_orders", "source.bdh_dbt_models.bdh_lv_siebel.v_orders_cdl"], "snapshot.bdh_dbt_models.lv_v_order_line_items": ["source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items", "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_cdl"], "snapshot.bdh_dbt_models.lv_v_order_line_items_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x", "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x_cdl"], "snapshot.bdh_dbt_models.lv_v_order_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_order_x", "source.bdh_dbt_models.bdh_lv_siebel.v_order_x_cdl"], "snapshot.bdh_dbt_models.lv_v_positions": ["source.bdh_dbt_models.bdh_lv_siebel.v_positions", "source.bdh_dbt_models.bdh_lv_siebel.v_positions_cdl"], "snapshot.bdh_dbt_models.lv_v_products": ["source.bdh_dbt_models.bdh_lv_siebel.v_products", "source.bdh_dbt_models.bdh_lv_siebel.v_products_cdl"], "snapshot.bdh_dbt_models.lv_v_service_request": ["source.bdh_dbt_models.bdh_lv_siebel.v_service_request", "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_cdl"], "snapshot.bdh_dbt_models.lv_v_service_request_x": ["source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x", "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x_cdl"], "snapshot.bdh_dbt_models.lv_v_user": ["source.bdh_dbt_models.bdh_lv_siebel.v_user", "source.bdh_dbt_models.bdh_lv_siebel.v_user_cdl"], "snapshot.bdh_dbt_models.stg_lv_v_assets": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset"], "snapshot.bdh_dbt_models.stg_lv_v_assets_xa": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_asset_attributes_s_asset_xa"], "snapshot.bdh_dbt_models.stg_lv_v_order_line_items": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item"], "snapshot.bdh_dbt_models.stg_lv_v_products": ["source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products", "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_products_s_prod_int"], "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_billing_id.b8c58db7da": ["model.bdh_dbt_models.ee_subscriber_snapshot"], "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_msisdn.3701475473": ["model.bdh_dbt_models.ee_subscriber_snapshot"], "test.bdh_dbt_models.unique_ee_subscriber_snapshot_x_sub_msisdn.fc545541a0": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_siebel_id.c0489c9a75": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_contact_siebel_id.c534d3da0a": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_sub_segment.63f4e0ecdf": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_name.7fcddee1d0": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_soc_sec_num.50a24c6ae1": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7.7c5b43e16c": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_company_code.055a9f8b12": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_billing_address.c1ef9710b0": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode.6068dfb09b": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode_subdiv.7eff317695": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_county.38ceb59a37": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_name.ff1921c523": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_last_name.2e93b75fa8": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "test.bdh_dbt_models.not_null_products_in_siebel_ou_num.9a3b9e297c": ["model.bdh_dbt_models.products_in_siebel"], "test.bdh_dbt_models.not_null_products_in_siebel_bill_accnt_id.a0ee4b5c20": ["model.bdh_dbt_models.products_in_siebel"], "test.bdh_dbt_models.not_null_products_in_siebel_asset_id.648e2ffa49": ["model.bdh_dbt_models.products_in_siebel"], "test.bdh_dbt_models.unique_products_in_siebel_asset_id.a6b05c9318": ["model.bdh_dbt_models.products_in_siebel"], "test.bdh_dbt_models.not_null_products_in_siebel_root_asset_id.253605b0a1": ["model.bdh_dbt_models.products_in_siebel"], "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_business_sub_billing_id_.5f3fa50d99": ["model.bdh_dbt_models.lt_subscriber_snapshot_business"], "test.bdh_dbt_models.unique_lt_subscriber_snapshot_business_sub_billing_id_.1f1d5598d8": ["model.bdh_dbt_models.lt_subscriber_snapshot_business"], "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_residential_sub_billing_id_.0df3150fcf": ["model.bdh_dbt_models.lt_subscriber_snapshot_residential"], "test.bdh_dbt_models.unique_lt_subscriber_snapshot_residential_sub_billing_id_.16f99cb415": ["model.bdh_dbt_models.lt_subscriber_snapshot_residential"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.bb6e9355e0": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.db82c552f9": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_ssn.edbab4b2d2": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_status.36a3bbe2e8": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active.8f725c76ac": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date.0fb7468d92": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_account_type.17a0e4d910": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business.c5aa828139": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag.909c038eb7": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag.0b2cec7c69": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag.b28aab5b09": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id.a36db62fc0": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id.790a1a2b36": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_bdh_raw_record.39569d822b": ["model.bdh_dbt_models.v_raw_demo_csv_file"], "test.bdh_dbt_models.unique_v_raw_demo_csv_file_col_1.dd0f4a5864": ["model.bdh_dbt_models.v_raw_demo_csv_file"], "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_col_1.1ecf5e4fc4": ["model.bdh_dbt_models.v_raw_demo_csv_file"], "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_custom_column.049561379a": ["model.bdh_dbt_models.v_raw_demo_csv_file"], "model.bdh_dbt_models.int_dim_lv_binding_products": ["model.bdh_dbt_models.stg_raw_lv_assets", "model.bdh_dbt_models.stg_raw_lv_assets_xa", "model.bdh_dbt_models.stg_raw_lv_order_line_items", "model.bdh_dbt_models.stg_raw_lv_products"], "snapshot.bdh_dbt_models.dim_lv_binding_products_snapshot": ["model.bdh_dbt_models.int_dim_lv_binding_products", "source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot"], "model.bdh_dbt_models.int_lv_subscribers_snapshot": ["model.bdh_dbt_models.stg_raw_lv_assets"], "model.bdh_dbt_models.dim_lv_binding_products": ["source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot"], "source.bdh_dbt_models.bdh_ee_analysts_tables.aa_pp_prices": [], "source.bdh_dbt_models.bdh_ee_analysts_tables.business_sectors": [], "source.bdh_dbt_models.bdh_ee_analysts_tables.po_emta_data": [], "source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_sale_channel": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element_attribute": [], "source.bdh_dbt_models.bdh_ee_sales_tool.consent": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_message": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_attribute": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_product": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_phone": [], "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_business_logs": [], "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_person_logs": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent_batch": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_next_best_offer": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_property": [], "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai": [], "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai_subgrupese": [], "source.bdh_dbt_models.bdh_ee_sales_tool.doc_status_description": [], "source.bdh_dbt_models.bdh_ee_sales_tool.documents": [], "source.bdh_dbt_models.bdh_ee_sales_tool.macpoc_order_queue": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_invoices": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_donor": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tm": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp_returns": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff_all": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mw_xml_storage": [], "source.bdh_dbt_models.bdh_ee_sales_tool.order_service": [], "source.bdh_dbt_models.bdh_ee_sales_tool.order_service_attribute": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_donor": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_owner": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prekiu_pardavimas_be_sut": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_card_refill": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_item": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_sale": [], "source.bdh_dbt_models.bdh_ee_sales_tool.promotions": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_current_services": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn_mokestis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_paslaugos": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai_status_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sale_records": [], "source.bdh_dbt_models.bdh_ee_sales_tool.subgrupes": [], "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign": [], "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign_set": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_kliento_tipas": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis_tipas": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_order_promotion": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_preke": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_prekiu_pardavimas": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_fizinis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_juridinis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_mserv": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_mokestis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.warehouse": [], "source.bdh_dbt_models.bdh_ee_siebel.accounts_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.accounts_x_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.activities_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.activities_x_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.audit_item_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.address_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.address_x_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.assets_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.assets_x_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.assets_xa_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.billing_profile_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.campaigns_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.contact_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.contact_x_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.consent_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.dd_contract_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.list_of_values_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.logs_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.notification_settings_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.order_line_items_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.orders_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.product_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.postn_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.service_request_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.service_request_x_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.payment_claim_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.user_cdl": [], "source.bdh_dbt_models.bdh_ee_siebel.accounts": [], "source.bdh_dbt_models.bdh_ee_siebel.accounts_x": [], "source.bdh_dbt_models.bdh_ee_siebel.activities": [], "source.bdh_dbt_models.bdh_ee_siebel.activities_x": [], "source.bdh_dbt_models.bdh_ee_siebel.audit_item": [], "source.bdh_dbt_models.bdh_ee_siebel.address": [], "source.bdh_dbt_models.bdh_ee_siebel.address_x": [], "source.bdh_dbt_models.bdh_ee_siebel.assets": [], "source.bdh_dbt_models.bdh_ee_siebel.assets_x": [], "source.bdh_dbt_models.bdh_ee_siebel.assets_xa": [], "source.bdh_dbt_models.bdh_ee_siebel.billing_profile": [], "source.bdh_dbt_models.bdh_ee_siebel.campaigns": [], "source.bdh_dbt_models.bdh_ee_siebel.contact": [], "source.bdh_dbt_models.bdh_ee_siebel.contact_x": [], "source.bdh_dbt_models.bdh_ee_siebel.consent": [], "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref": [], "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule": [], "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider": [], "source.bdh_dbt_models.bdh_ee_siebel.dd_contract": [], "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item": [], "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj": [], "source.bdh_dbt_models.bdh_ee_siebel.list_of_values": [], "source.bdh_dbt_models.bdh_ee_siebel.logs": [], "source.bdh_dbt_models.bdh_ee_siebel.notification_settings": [], "source.bdh_dbt_models.bdh_ee_siebel.order_line_items": [], "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa": [], "source.bdh_dbt_models.bdh_ee_siebel.orders": [], "source.bdh_dbt_models.bdh_ee_siebel.product": [], "source.bdh_dbt_models.bdh_ee_siebel.postn": [], "source.bdh_dbt_models.bdh_ee_siebel.service_request": [], "source.bdh_dbt_models.bdh_ee_siebel.service_request_x": [], "source.bdh_dbt_models.bdh_ee_siebel.payment_claim": [], "source.bdh_dbt_models.bdh_ee_siebel.user": [], "source.bdh_dbt_models.bdh_ee_singleview.account": [], "source.bdh_dbt_models.bdh_ee_singleview.bill_run": [], "source.bdh_dbt_models.bdh_ee_singleview.current_account_balance": [], "source.bdh_dbt_models.bdh_ee_singleview.customer_node_type": [], "source.bdh_dbt_models.bdh_ee_singleview.customer_query": [], "source.bdh_dbt_models.bdh_ee_singleview.invoice_payments_history": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_balance": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_balance_cdl": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute_cdl": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_gl_details": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_recur": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_usage": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_product_serv": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_translate": [], "source.bdh_dbt_models.bdh_ee_singleview.payments_history": [], "source.bdh_dbt_models.bdh_ee_singleview.product_history": [], "source.bdh_dbt_models.bdh_ee_singleview.product_instance_history": [], "source.bdh_dbt_models.bdh_ee_singleview.reference_code": [], "source.bdh_dbt_models.bdh_ee_singleview.schedule": [], "source.bdh_dbt_models.bdh_ee_singleview.service_da_array": [], "source.bdh_dbt_models.bdh_ee_singleview.service_history": [], "source.bdh_dbt_models.bdh_ee_singleview.sv_invoice": [], "source.bdh_dbt_models.bdh_ee_singleview.tariff_history": [], "source.bdh_dbt_models.bdh_ee_singleview.treatment_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.bl_legal_check_exceptions": [], "source.bdh_dbt_models.bdh_lt_sales_tool.contract_general_params": [], "source.bdh_dbt_models.bdh_lt_sales_tool.contract_vat_reverse_charge": [], "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_business_log": [], "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_person_log": [], "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai_subgrupese": [], "source.bdh_dbt_models.bdh_lt_sales_tool.documents": [], "source.bdh_dbt_models.bdh_lt_sales_tool.document_type": [], "source.bdh_dbt_models.bdh_lt_sales_tool.imsi": [], "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_order_queue": [], "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_vasmap": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_barcodes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_deleted": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_pr_po": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_winback": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tm": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tp": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mob_interneto_sutartys": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_change": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_config": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_services": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff_all": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mp_promotion_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mw_vas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.package_codes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_1": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_2": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_3": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_4": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_5": [], "source.bdh_dbt_models.bdh_lt_sales_tool.promotions": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_current_services": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn_mokestis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai_status_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sale_channel": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sale_records": [], "source.bdh_dbt_models.bdh_lt_sales_tool.service_promotion_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.st_buckets": [], "source.bdh_dbt_models.bdh_lt_sales_tool.subgrupes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kliento_tipas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kl_tipai_mok_planai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mkl_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mokestis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mok_planai_kl_tipai_laikotarpiai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nesuderinamos_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nuolaida_kodas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_preke": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_prekiu_pardavimas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_fizinis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_juridinis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas_log": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_mokestis": [], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_address_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_address_x_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_contact_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_logs_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_orders_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_product_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_user_cdl": [], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts": [], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x": [], "source.bdh_dbt_models.bdh_lt_siebel.v_address": [], "source.bdh_dbt_models.bdh_lt_siebel.v_address_x": [], "source.bdh_dbt_models.bdh_lt_siebel.v_assets": [], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x": [], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa": [], "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile": [], "source.bdh_dbt_models.bdh_lt_siebel.v_contact": [], "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x": [], "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values": [], "source.bdh_dbt_models.bdh_lt_siebel.v_logs": [], "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings": [], "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items": [], "source.bdh_dbt_models.bdh_lt_siebel.v_orders": [], "source.bdh_dbt_models.bdh_lt_siebel.v_product": [], "source.bdh_dbt_models.bdh_lt_siebel.v_user": [], "source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot": [], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets": [], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa": [], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items": [], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products": [], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_activities_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_address_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_address_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_contact_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_logs_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_notification_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_orders_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_products_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_positions_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.v_user_cdl": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_xa": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_billing_profile": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_list_of_values": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_logs": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification_settings": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_orders": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_products": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_positions": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_user": [], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts": [], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_activities": [], "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item": [], "source.bdh_dbt_models.bdh_lv_siebel.v_address": [], "source.bdh_dbt_models.bdh_lv_siebel.v_address_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_assets": [], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa": [], "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile": [], "source.bdh_dbt_models.bdh_lv_siebel.v_contact": [], "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values": [], "source.bdh_dbt_models.bdh_lv_siebel.v_logs": [], "source.bdh_dbt_models.bdh_lv_siebel.v_notification": [], "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_orders": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_products": [], "source.bdh_dbt_models.bdh_lv_siebel.v_positions": [], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request": [], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x": [], "source.bdh_dbt_models.bdh_lv_siebel.v_user": [], "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_csv_file": [], "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_json_file": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_s_addr_per": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_intersection_s_con_addr": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_asset_attributes_s_asset_xa": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_audit_trail_s_audit_item": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_billing_profile_s_inv_prof": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_campaigns_s_src": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_ee_consent_exacaster": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_cx_nt_acc_pref": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_paymentschedule_cx_pay_schedule": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_vas_providers_cx_vas_provider": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_dd_cx_dd_contract": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustment_items_s_invc_adj_item": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustments_s_invoice_adj": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_list_of_values_s_lst_of_val": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_logs_cx_bus_log": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_settings_cx_add_info_xm": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item_xa": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_orders_s_order": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_payment_claim_cx_pay_claim": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_positions_s_postn": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_products_s_prod_int": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_users_s_user": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext_x": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_s_addr_per": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_intersection_s_con_addr": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_asset_attributes_s_asset_xa": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_billing_profile_s_inv_prof": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact_x": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_list_of_values_s_lst_of_val": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_logs_cx_bus_log": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_notification_settings_cx_add_info_xm": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_order_line_items_s_order_item": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_orders_s_order": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_products_s_prod_int": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_users_s_user": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_users_s_user": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_cbs_siebel_acc_map": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_consent_exacaster": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_notifications_exacaster": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_s_addr_per": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_intersection_s_con_addr": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_asset_attributes_s_asset_xa": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_audit_trail_s_audit_item": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_billing_profile_s_inv_prof": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_list_of_values_s_lst_of_val": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_notification_cx_nt_acc_pref": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_positions_s_postn": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_products_s_prod_int": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req_x": [], "source.bdh_dbt_models.bdh_test_lv_one_time_load.baltcom_fbb_addresses": [], "source.bdh_dbt_models.bdh_test_lv_one_time_load.t2lv_monthly_b2b_mng_hist": []}, "child_map": {"model.bdh_dbt_models.int_ee_accounts": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"], "model.bdh_dbt_models.int_ee_assets": ["model.bdh_dbt_models.int_ee_assets_today"], "model.bdh_dbt_models.int_ee_assets_fiber": ["model.bdh_dbt_models.int_ee_assets_today"], "model.bdh_dbt_models.int_ee_assets_today": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"], "model.bdh_dbt_models.int_ee_churn_snapshot_base": ["model.bdh_dbt_models.ee_churn_snapshot"], "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base": ["model.bdh_dbt_models.ee_custom_metrics_current_offers"], "model.bdh_dbt_models.int_ee_payment_fact_base": ["model.bdh_dbt_models.ee_payment_fact"], "model.bdh_dbt_models.int_ee_price_plans": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"], "model.bdh_dbt_models.int_ee_sales_fact_base": [], "model.bdh_dbt_models.int_ee_sales_point_visits_base": ["model.bdh_dbt_models.ee_sales_point_visits"], "model.bdh_dbt_models.int_ee_subscriber_snapshot_base": ["model.bdh_dbt_models.ee_subscriber_snapshot"], "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base": ["model.bdh_dbt_models.ee_subscriber_snapshot_x"], "model.bdh_dbt_models.ee_churn_snapshot": [], "model.bdh_dbt_models.ee_custom_metrics_current_offers": [], "model.bdh_dbt_models.ee_payment_fact": [], "model.bdh_dbt_models.ee_sales_point_visits": [], "model.bdh_dbt_models.ee_subscriber_snapshot": ["model.bdh_dbt_models.int_ee_churn_snapshot_base", "model.bdh_dbt_models.int_ee_payment_fact_base", "model.bdh_dbt_models.int_ee_sales_fact_base", "model.bdh_dbt_models.int_ee_sales_point_visits_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base", "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_billing_id.b8c58db7da", "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_msisdn.3701475473"], "model.bdh_dbt_models.ee_subscriber_snapshot_x": ["test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_name.7fcddee1d0", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_siebel_id.c0489c9a75", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_sub_segment.63f4e0ecdf", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_billing_address.c1ef9710b0", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_company_code.055a9f8b12", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_contact_siebel_id.c534d3da0a", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_county.38ceb59a37", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_last_name.2e93b75fa8", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_name.ff1921c523", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_soc_sec_num.50a24c6ae1", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7.7c5b43e16c", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode.6068dfb09b", "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode_subdiv.7eff317695", "test.bdh_dbt_models.unique_ee_subscriber_snapshot_x_sub_msisdn.fc545541a0"], "model.bdh_dbt_models.stg_ee_business_sectors": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_po_emta_data": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_pp_prices": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.int_ee_price_plans"], "model.bdh_dbt_models.stg_ee_vat_rate": [], "model.bdh_dbt_models.stg_ee_darbuotojai": ["model.bdh_dbt_models.int_ee_sales_point_visits_base"], "model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese": ["model.bdh_dbt_models.int_ee_sales_point_visits_base"], "model.bdh_dbt_models.stg_ee_doc_status_description": ["model.bdh_dbt_models.int_ee_churn_snapshot_base"], "model.bdh_dbt_models.stg_ee_mokejimo_planai": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base"], "model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base"], "model.bdh_dbt_models.stg_ee_s12_msisdn": ["model.bdh_dbt_models.int_ee_churn_snapshot_base"], "model.bdh_dbt_models.stg_ee_s12_priedai": ["model.bdh_dbt_models.int_ee_churn_snapshot_base"], "model.bdh_dbt_models.stg_ee_subgrupes": ["model.bdh_dbt_models.int_ee_sales_point_visits_base"], "model.bdh_dbt_models.stg_ee_accounts": ["model.bdh_dbt_models.int_ee_accounts", "model.bdh_dbt_models.int_ee_assets_fiber", "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.int_ee_sales_fact_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_accounts_x": ["model.bdh_dbt_models.int_ee_accounts", "model.bdh_dbt_models.int_ee_assets_fiber", "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_address": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_assets": ["model.bdh_dbt_models.int_ee_assets", "model.bdh_dbt_models.int_ee_assets_fiber", "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.int_ee_price_plans", "model.bdh_dbt_models.int_ee_sales_fact_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_assets_x": ["model.bdh_dbt_models.int_ee_churn_snapshot_base", "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_assets_xa": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base"], "model.bdh_dbt_models.stg_ee_blacklist": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"], "model.bdh_dbt_models.stg_ee_contact": ["model.bdh_dbt_models.int_ee_sales_fact_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_logs": ["model.bdh_dbt_models.int_ee_sales_point_visits_base"], "model.bdh_dbt_models.stg_ee_orders": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_order_items_xa": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_order_line_items": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_port_in_out": ["model.bdh_dbt_models.int_ee_subscriber_snapshot_base"], "model.bdh_dbt_models.stg_ee_product": ["model.bdh_dbt_models.int_ee_assets_fiber", "model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.int_ee_price_plans", "model.bdh_dbt_models.int_ee_subscriber_snapshot_base", "model.bdh_dbt_models.int_ee_subscriber_snapshot_x_base"], "model.bdh_dbt_models.stg_ee_payments_history": ["model.bdh_dbt_models.int_ee_payment_fact_base"], "model.bdh_dbt_models.int_discounts": ["model.bdh_dbt_models.products_in_siebel"], "model.bdh_dbt_models.products_in_siebel": ["test.bdh_dbt_models.not_null_products_in_siebel_asset_id.648e2ffa49", "test.bdh_dbt_models.not_null_products_in_siebel_bill_accnt_id.a0ee4b5c20", "test.bdh_dbt_models.not_null_products_in_siebel_ou_num.9a3b9e297c", "test.bdh_dbt_models.not_null_products_in_siebel_root_asset_id.253605b0a1", "test.bdh_dbt_models.unique_products_in_siebel_asset_id.a6b05c9318"], "model.bdh_dbt_models.stg_v_accounts": ["model.bdh_dbt_models.products_in_siebel"], "model.bdh_dbt_models.stg_v_assets": ["model.bdh_dbt_models.products_in_siebel"], "model.bdh_dbt_models.stg_v_assets_x": ["model.bdh_dbt_models.products_in_siebel"], "model.bdh_dbt_models.stg_v_assets_xa": ["model.bdh_dbt_models.int_discounts"], "model.bdh_dbt_models.stg_v_product": ["model.bdh_dbt_models.products_in_siebel"], "model.bdh_dbt_models.int_asset_ids_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus"], "model.bdh_dbt_models.int_lt_outbound_bar_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus"], "model.bdh_dbt_models.int_lt_product_price_bus": ["model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_bus": ["model.bdh_dbt_models.lt_subscriber_snapshot_business"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_bus"], "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus"], "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus"], "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus"], "model.bdh_dbt_models.int_lt_sub_type_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_bus"], "model.bdh_dbt_models.int_lt_this_day_subscribers_bus": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus"], "model.bdh_dbt_models.int_lt_churned_daily_res": ["model.bdh_dbt_models.lt_churned_daily_residential"], "model.bdh_dbt_models.int_lt_account_today_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.int_lt_all_todays_accounts_res": ["model.bdh_dbt_models.int_lt_account_today_res", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.int_lt_this_day_subscribers_res"], "model.bdh_dbt_models.int_lt_outbound_bar_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.int_lt_product_price_res": ["model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.int_lt_this_day_subscribers_res"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_res": ["model.bdh_dbt_models.lt_subscriber_snapshot_residential"], "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_res"], "model.bdh_dbt_models.int_lt_sub_consent_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "model.bdh_dbt_models.int_lt_this_day_subscribers_res"], "model.bdh_dbt_models.int_lt_sub_type_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_res"], "model.bdh_dbt_models.int_lt_this_day_subscribers_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.int_lt_wsc_admin_res": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_res"], "model.bdh_dbt_models.int_lt_subscriptions_data_joined": ["model.bdh_dbt_models.lt_subscriptions_data_residential_mbb", "model.bdh_dbt_models.lt_subscriptions_data_residential_voice"], "model.bdh_dbt_models.lt_subscriber_snapshot_business": ["test.bdh_dbt_models.not_null_lt_subscriber_snapshot_business_sub_billing_id_.5f3fa50d99", "test.bdh_dbt_models.unique_lt_subscriber_snapshot_business_sub_billing_id_.1f1d5598d8"], "model.bdh_dbt_models.lt_churned_daily_residential": [], "model.bdh_dbt_models.lt_subscriber_snapshot_residential": ["test.bdh_dbt_models.not_null_lt_subscriber_snapshot_residential_sub_billing_id_.0df3150fcf", "test.bdh_dbt_models.unique_lt_subscriber_snapshot_residential_sub_billing_id_.16f99cb415"], "model.bdh_dbt_models.lt_subscriptions_data_residential_mbb": [], "model.bdh_dbt_models.lt_subscriptions_data_residential_voice": [], "model.bdh_dbt_models.stg_lt_darbuotojai": [], "model.bdh_dbt_models.stg_lt_mokejimo_planai": [], "model.bdh_dbt_models.stg_lt_mokejimo_planai_services": [], "model.bdh_dbt_models.stg_lt_package_codes": [], "model.bdh_dbt_models.stg_tmp_accounts": ["model.bdh_dbt_models.int_lt_all_todays_accounts_res", "model.bdh_dbt_models.int_lt_outbound_bar_bus", "model.bdh_dbt_models.int_lt_outbound_bar_res", "model.bdh_dbt_models.int_lt_sub_consent_res", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "model.bdh_dbt_models.int_lt_sub_type_bus", "model.bdh_dbt_models.int_lt_sub_type_res", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_subscriptions_data_joined", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_res", "model.bdh_dbt_models.int_lt_wsc_admin_res"], "model.bdh_dbt_models.stg_tmp_accounts_x": ["model.bdh_dbt_models.int_lt_subscriptions_data_joined"], "model.bdh_dbt_models.stg_tmp_assets": ["model.bdh_dbt_models.int_asset_ids_bus", "model.bdh_dbt_models.int_lt_sub_consent_res", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_yesterday_res", "model.bdh_dbt_models.int_lt_sub_type_bus", "model.bdh_dbt_models.int_lt_sub_type_res", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "model.bdh_dbt_models.int_lt_subscriptions_data_joined", "model.bdh_dbt_models.int_lt_this_day_subscribers_bus", "model.bdh_dbt_models.int_lt_this_day_subscribers_res", "model.bdh_dbt_models.int_lt_wsc_admin_res"], "model.bdh_dbt_models.stg_tmp_assets_x": ["model.bdh_dbt_models.int_lt_sub_snapshot_plans_res", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "model.bdh_dbt_models.int_lt_subscriptions_data_joined"], "model.bdh_dbt_models.stg_tmp_assets_xa": ["model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "model.bdh_dbt_models.int_lt_subscriptions_data_joined"], "model.bdh_dbt_models.stg_tmp_billing_profile": ["model.bdh_dbt_models.int_lt_outbound_bar_bus", "model.bdh_dbt_models.int_lt_outbound_bar_res"], "model.bdh_dbt_models.stg_tmp_contact": ["model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res"], "model.bdh_dbt_models.stg_tmp_orders": [], "model.bdh_dbt_models.stg_tmp_order_line_items": [], "model.bdh_dbt_models.stg_tmp_product": ["model.bdh_dbt_models.int_lt_product_price_bus", "model.bdh_dbt_models.int_lt_product_price_res", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_bus", "model.bdh_dbt_models.int_lt_sub_snapshot_discounts_res", "model.bdh_dbt_models.int_lt_sub_type_bus", "model.bdh_dbt_models.int_lt_sub_type_res", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_bus", "model.bdh_dbt_models.int_lt_subscriber_snapshot_today_res", "model.bdh_dbt_models.int_lt_subscriptions_data_joined", "model.bdh_dbt_models.int_lt_wsc_admin_res"], "model.bdh_dbt_models.lv_subscribers_snapshot": [], "model.bdh_dbt_models.stg_raw_lv_assets": ["model.bdh_dbt_models.int_dim_lv_binding_products", "model.bdh_dbt_models.int_lv_subscribers_snapshot"], "model.bdh_dbt_models.stg_raw_lv_assets_xa": ["model.bdh_dbt_models.int_dim_lv_binding_products"], "model.bdh_dbt_models.stg_raw_lv_order_line_items": ["model.bdh_dbt_models.int_dim_lv_binding_products"], "model.bdh_dbt_models.stg_raw_lv_products": ["model.bdh_dbt_models.int_dim_lv_binding_products"], "model.bdh_dbt_models.v_address_x": [], "model.bdh_dbt_models.v_raw_demo_csv_file": ["test.bdh_dbt_models.not_null_v_raw_demo_csv_file_bdh_raw_record.39569d822b", "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_col_1.1ecf5e4fc4", "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_custom_column.049561379a", "test.bdh_dbt_models.unique_v_raw_demo_csv_file_col_1.dd0f4a5864"], "model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot": ["test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business.c5aa828139", "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active.8f725c76ac", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_account_type.17a0e4d910", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date.0fb7468d92", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id.a36db62fc0", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.bb6e9355e0", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag.909c038eb7", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag.0b2cec7c69", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_ssn.edbab4b2d2", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_status.36a3bbe2e8", "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag.b28aab5b09", "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id.790a1a2b36", "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.db82c552f9"], "snapshot.bdh_dbt_models.ee_accounts": [], "snapshot.bdh_dbt_models.ee_accounts_x": [], "snapshot.bdh_dbt_models.ee_activities": [], "snapshot.bdh_dbt_models.ee_activities_x": [], "snapshot.bdh_dbt_models.ee_address": [], "snapshot.bdh_dbt_models.ee_address_x": [], "snapshot.bdh_dbt_models.ee_assets": [], "snapshot.bdh_dbt_models.ee_assets_xa": [], "snapshot.bdh_dbt_models.ee_assets_x": [], "snapshot.bdh_dbt_models.ee_audit_item": [], "snapshot.bdh_dbt_models.ee_billing_profile": [], "snapshot.bdh_dbt_models.ee_campaigns": [], "snapshot.bdh_dbt_models.ee_consent": [], "snapshot.bdh_dbt_models.ee_contact": [], "snapshot.bdh_dbt_models.ee_contact_x": [], "snapshot.bdh_dbt_models.ee_cx_nt_acc_pref": [], "snapshot.bdh_dbt_models.ee_cx_pay_schedule": [], "snapshot.bdh_dbt_models.ee_cx_vas_provider": [], "snapshot.bdh_dbt_models.ee_dd_contract": [], "snapshot.bdh_dbt_models.ee_invc_adj_item": [], "snapshot.bdh_dbt_models.ee_invoice_adj": [], "snapshot.bdh_dbt_models.ee_list_of_values": [], "snapshot.bdh_dbt_models.ee_logs": [], "snapshot.bdh_dbt_models.ee_notification_settings": [], "snapshot.bdh_dbt_models.ee_orders": [], "snapshot.bdh_dbt_models.ee_order_line_items": [], "snapshot.bdh_dbt_models.ee_order_items_xa": [], "snapshot.bdh_dbt_models.ee_payment_claim": [], "snapshot.bdh_dbt_models.ee_postn": [], "snapshot.bdh_dbt_models.ee_product": [], "snapshot.bdh_dbt_models.ee_service_request": [], "snapshot.bdh_dbt_models.ee_service_request_x": [], "snapshot.bdh_dbt_models.ee_user": [], "snapshot.bdh_dbt_models.v_accounts": [], "snapshot.bdh_dbt_models.v_accounts_x": [], "snapshot.bdh_dbt_models.v_address": [], "snapshot.bdh_dbt_models.v_address_x": [], "snapshot.bdh_dbt_models.v_assets": [], "snapshot.bdh_dbt_models.v_assets_xa": [], "snapshot.bdh_dbt_models.v_assets_x": [], "snapshot.bdh_dbt_models.v_billing_profile": [], "snapshot.bdh_dbt_models.v_contact": [], "snapshot.bdh_dbt_models.v_contact_x": [], "snapshot.bdh_dbt_models.v_list_of_values": [], "snapshot.bdh_dbt_models.v_logs": [], "snapshot.bdh_dbt_models.v_notification_settings": [], "snapshot.bdh_dbt_models.v_orders": [], "snapshot.bdh_dbt_models.v_order_line_items": [], "snapshot.bdh_dbt_models.v_product": [], "snapshot.bdh_dbt_models.v_user": [], "snapshot.bdh_dbt_models.lv_v_accounts": [], "snapshot.bdh_dbt_models.lv_v_accounts_x": [], "snapshot.bdh_dbt_models.lv_v_activities": [], "snapshot.bdh_dbt_models.lv_v_activities_x": [], "snapshot.bdh_dbt_models.lv_v_address": [], "snapshot.bdh_dbt_models.lv_v_address_x": [], "snapshot.bdh_dbt_models.lv_v_assets": [], "snapshot.bdh_dbt_models.lv_v_assets_xa": [], "snapshot.bdh_dbt_models.lv_v_assets_x": [], "snapshot.bdh_dbt_models.lv_v_audit_item": [], "snapshot.bdh_dbt_models.lv_v_billing_profile": [], "snapshot.bdh_dbt_models.lv_v_contact": [], "snapshot.bdh_dbt_models.lv_v_contact_x": [], "snapshot.bdh_dbt_models.lv_v_list_of_values": [], "snapshot.bdh_dbt_models.lv_v_logs": [], "snapshot.bdh_dbt_models.lv_v_notification_settings": [], "snapshot.bdh_dbt_models.lv_v_notification": [], "snapshot.bdh_dbt_models.lv_v_orders": [], "snapshot.bdh_dbt_models.lv_v_order_line_items": [], "snapshot.bdh_dbt_models.lv_v_order_line_items_x": [], "snapshot.bdh_dbt_models.lv_v_order_x": [], "snapshot.bdh_dbt_models.lv_v_positions": [], "snapshot.bdh_dbt_models.lv_v_products": [], "snapshot.bdh_dbt_models.lv_v_service_request": [], "snapshot.bdh_dbt_models.lv_v_service_request_x": [], "snapshot.bdh_dbt_models.lv_v_user": [], "snapshot.bdh_dbt_models.stg_lv_v_assets": [], "snapshot.bdh_dbt_models.stg_lv_v_assets_xa": [], "snapshot.bdh_dbt_models.stg_lv_v_order_line_items": [], "snapshot.bdh_dbt_models.stg_lv_v_products": [], "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_billing_id.b8c58db7da": [], "test.bdh_dbt_models.unique_ee_subscriber_snapshot_sub_msisdn.3701475473": [], "test.bdh_dbt_models.unique_ee_subscriber_snapshot_x_sub_msisdn.fc545541a0": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_siebel_id.c0489c9a75": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_contact_siebel_id.c534d3da0a": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_sub_segment.63f4e0ecdf": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_account_name.7fcddee1d0": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_soc_sec_num.50a24c6ae1": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_x_soc_sec_num_0_7.7c5b43e16c": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_company_code.055a9f8b12": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_billing_address.c1ef9710b0": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode.6068dfb09b": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_zipcode_subdiv.7eff317695": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_county.38ceb59a37": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_name.ff1921c523": [], "test.bdh_dbt_models.not_null_ee_subscriber_snapshot_x_manager_last_name.2e93b75fa8": [], "test.bdh_dbt_models.not_null_products_in_siebel_ou_num.9a3b9e297c": [], "test.bdh_dbt_models.not_null_products_in_siebel_bill_accnt_id.a0ee4b5c20": [], "test.bdh_dbt_models.not_null_products_in_siebel_asset_id.648e2ffa49": [], "test.bdh_dbt_models.unique_products_in_siebel_asset_id.a6b05c9318": [], "test.bdh_dbt_models.not_null_products_in_siebel_root_asset_id.253605b0a1": [], "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_business_sub_billing_id_.5f3fa50d99": [], "test.bdh_dbt_models.unique_lt_subscriber_snapshot_business_sub_billing_id_.1f1d5598d8": [], "test.bdh_dbt_models.not_null_lt_subscriber_snapshot_residential_sub_billing_id_.0df3150fcf": [], "test.bdh_dbt_models.unique_lt_subscriber_snapshot_residential_sub_billing_id_.16f99cb415": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.bb6e9355e0": [], "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_nr.db82c552f9": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_ssn.edbab4b2d2": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_status.36a3bbe2e8": [], "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_status__Active.8f725c76ac": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_acquisition_date.0fb7468d92": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_account_type.17a0e4d910": [], "test.bdh_dbt_models.accepted_values_t2lv_cbm_postp_accounts_snapshot_account_type__Residential__Business.c5aa828139": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_eligible_for_fbb_flag.909c038eb7": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_intercompany_flag.0b2cec7c69": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_sub_bad_debt_flag.b28aab5b09": [], "test.bdh_dbt_models.not_null_t2lv_cbm_postp_accounts_snapshot_billing_account_id.a36db62fc0": [], "test.bdh_dbt_models.unique_t2lv_cbm_postp_accounts_snapshot_billing_account_id.790a1a2b36": [], "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_bdh_raw_record.39569d822b": [], "test.bdh_dbt_models.unique_v_raw_demo_csv_file_col_1.dd0f4a5864": [], "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_col_1.1ecf5e4fc4": [], "test.bdh_dbt_models.not_null_v_raw_demo_csv_file_custom_column.049561379a": [], "model.bdh_dbt_models.int_dim_lv_binding_products": ["snapshot.bdh_dbt_models.dim_lv_binding_products_snapshot"], "snapshot.bdh_dbt_models.dim_lv_binding_products_snapshot": [], "model.bdh_dbt_models.int_lv_subscribers_snapshot": [], "model.bdh_dbt_models.dim_lv_binding_products": [], "source.bdh_dbt_models.bdh_ee_analysts_tables.aa_pp_prices": ["model.bdh_dbt_models.stg_ee_pp_prices"], "source.bdh_dbt_models.bdh_ee_analysts_tables.business_sectors": ["model.bdh_dbt_models.stg_ee_business_sectors"], "source.bdh_dbt_models.bdh_ee_analysts_tables.po_emta_data": ["model.bdh_dbt_models.stg_ee_po_emta_data"], "source.bdh_dbt_models.bdh_ee_analysts_tables.vat_rate": ["model.bdh_dbt_models.int_ee_custom_metrics_current_offers_base", "model.bdh_dbt_models.stg_ee_vat_rate"], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_sale_channel": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element": [], "source.bdh_dbt_models.bdh_ee_sales_tool.campaign_set_element_attribute": [], "source.bdh_dbt_models.bdh_ee_sales_tool.consent": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_message": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_attribute": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_offer_product": [], "source.bdh_dbt_models.bdh_ee_sales_tool.contract_phone": [], "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_business_logs": [], "source.bdh_dbt_models.bdh_ee_sales_tool.credit_check_person_logs": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_consent_batch": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_next_best_offer": [], "source.bdh_dbt_models.bdh_ee_sales_tool.customer_property": [], "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai": ["model.bdh_dbt_models.stg_ee_darbuotojai"], "source.bdh_dbt_models.bdh_ee_sales_tool.darbuotojai_subgrupese": ["model.bdh_dbt_models.stg_ee_darbuotojai_subgrupese"], "source.bdh_dbt_models.bdh_ee_sales_tool.doc_status_description": ["model.bdh_dbt_models.stg_ee_doc_status_description"], "source.bdh_dbt_models.bdh_ee_sales_tool.documents": [], "source.bdh_dbt_models.bdh_ee_sales_tool.macpoc_order_queue": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_invoices": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_donor": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_mnp_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tm": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mjs_tp_returns": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai": ["model.bdh_dbt_models.stg_ee_mokejimo_planai"], "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff": [], "source.bdh_dbt_models.bdh_ee_sales_tool.mokejimo_planai_tariff_all": ["model.bdh_dbt_models.stg_ee_mokejimo_planai_tariff_all"], "source.bdh_dbt_models.bdh_ee_sales_tool.mw_xml_storage": [], "source.bdh_dbt_models.bdh_ee_sales_tool.order_service": [], "source.bdh_dbt_models.bdh_ee_sales_tool.order_service_attribute": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_donor": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.portin_application_owner": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prekiu_pardavimas_be_sut": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_card_refill": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_item": [], "source.bdh_dbt_models.bdh_ee_sales_tool.prepaid_sale": [], "source.bdh_dbt_models.bdh_ee_sales_tool.promotions": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_current_services": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn": ["model.bdh_dbt_models.stg_ee_s12_msisdn"], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_msisdn_mokestis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_paslaugos": [], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai": ["model.bdh_dbt_models.stg_ee_s12_priedai"], "source.bdh_dbt_models.bdh_ee_sales_tool.s12_priedai_status_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sale_records": [], "source.bdh_dbt_models.bdh_ee_sales_tool.subgrupes": ["model.bdh_dbt_models.stg_ee_subgrupes"], "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign": [], "source.bdh_dbt_models.bdh_ee_sales_tool.subscription_campaign_set": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_kliento_tipas": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_mokestis_tipas": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_order_promotion": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_preke": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_prekiu_pardavimas": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_fizinis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_history": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_juridinis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_mserv": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_ee_sales_tool.sut_sutartis_sim_mokestis": [], "source.bdh_dbt_models.bdh_ee_sales_tool.warehouse": [], "source.bdh_dbt_models.bdh_ee_siebel.accounts_cdl": ["snapshot.bdh_dbt_models.ee_accounts"], "source.bdh_dbt_models.bdh_ee_siebel.accounts_x_cdl": ["snapshot.bdh_dbt_models.ee_accounts_x"], "source.bdh_dbt_models.bdh_ee_siebel.activities_cdl": ["snapshot.bdh_dbt_models.ee_activities"], "source.bdh_dbt_models.bdh_ee_siebel.activities_x_cdl": ["snapshot.bdh_dbt_models.ee_activities_x"], "source.bdh_dbt_models.bdh_ee_siebel.audit_item_cdl": ["snapshot.bdh_dbt_models.ee_audit_item"], "source.bdh_dbt_models.bdh_ee_siebel.address_cdl": ["snapshot.bdh_dbt_models.ee_address"], "source.bdh_dbt_models.bdh_ee_siebel.address_x_cdl": ["snapshot.bdh_dbt_models.ee_address_x"], "source.bdh_dbt_models.bdh_ee_siebel.assets_cdl": ["snapshot.bdh_dbt_models.ee_assets"], "source.bdh_dbt_models.bdh_ee_siebel.assets_x_cdl": ["snapshot.bdh_dbt_models.ee_assets_x"], "source.bdh_dbt_models.bdh_ee_siebel.assets_xa_cdl": ["snapshot.bdh_dbt_models.ee_assets_xa"], "source.bdh_dbt_models.bdh_ee_siebel.billing_profile_cdl": ["snapshot.bdh_dbt_models.ee_billing_profile"], "source.bdh_dbt_models.bdh_ee_siebel.campaigns_cdl": ["snapshot.bdh_dbt_models.ee_campaigns"], "source.bdh_dbt_models.bdh_ee_siebel.contact_cdl": ["snapshot.bdh_dbt_models.ee_contact"], "source.bdh_dbt_models.bdh_ee_siebel.contact_x_cdl": ["snapshot.bdh_dbt_models.ee_contact_x"], "source.bdh_dbt_models.bdh_ee_siebel.consent_cdl": ["snapshot.bdh_dbt_models.ee_consent"], "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref_cdl": ["snapshot.bdh_dbt_models.ee_cx_nt_acc_pref"], "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule_cdl": ["snapshot.bdh_dbt_models.ee_cx_pay_schedule"], "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider_cdl": ["snapshot.bdh_dbt_models.ee_cx_vas_provider"], "source.bdh_dbt_models.bdh_ee_siebel.dd_contract_cdl": ["snapshot.bdh_dbt_models.ee_dd_contract"], "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item_cdl": ["snapshot.bdh_dbt_models.ee_invc_adj_item"], "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj_cdl": ["snapshot.bdh_dbt_models.ee_invoice_adj"], "source.bdh_dbt_models.bdh_ee_siebel.list_of_values_cdl": ["snapshot.bdh_dbt_models.ee_list_of_values"], "source.bdh_dbt_models.bdh_ee_siebel.logs_cdl": ["snapshot.bdh_dbt_models.ee_logs"], "source.bdh_dbt_models.bdh_ee_siebel.notification_settings_cdl": ["snapshot.bdh_dbt_models.ee_notification_settings"], "source.bdh_dbt_models.bdh_ee_siebel.order_line_items_cdl": ["snapshot.bdh_dbt_models.ee_order_line_items"], "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa_cdl": ["snapshot.bdh_dbt_models.ee_order_items_xa"], "source.bdh_dbt_models.bdh_ee_siebel.orders_cdl": ["snapshot.bdh_dbt_models.ee_orders"], "source.bdh_dbt_models.bdh_ee_siebel.product_cdl": ["snapshot.bdh_dbt_models.ee_product"], "source.bdh_dbt_models.bdh_ee_siebel.postn_cdl": ["snapshot.bdh_dbt_models.ee_postn"], "source.bdh_dbt_models.bdh_ee_siebel.service_request_cdl": ["snapshot.bdh_dbt_models.ee_service_request"], "source.bdh_dbt_models.bdh_ee_siebel.service_request_x_cdl": ["snapshot.bdh_dbt_models.ee_service_request_x"], "source.bdh_dbt_models.bdh_ee_siebel.payment_claim_cdl": ["snapshot.bdh_dbt_models.ee_payment_claim"], "source.bdh_dbt_models.bdh_ee_siebel.user_cdl": ["snapshot.bdh_dbt_models.ee_user"], "source.bdh_dbt_models.bdh_ee_siebel.accounts": ["model.bdh_dbt_models.stg_ee_accounts", "snapshot.bdh_dbt_models.ee_accounts"], "source.bdh_dbt_models.bdh_ee_siebel.accounts_x": ["model.bdh_dbt_models.stg_ee_accounts_x", "snapshot.bdh_dbt_models.ee_accounts_x"], "source.bdh_dbt_models.bdh_ee_siebel.activities": ["snapshot.bdh_dbt_models.ee_activities"], "source.bdh_dbt_models.bdh_ee_siebel.activities_x": ["snapshot.bdh_dbt_models.ee_activities_x"], "source.bdh_dbt_models.bdh_ee_siebel.audit_item": ["snapshot.bdh_dbt_models.ee_audit_item"], "source.bdh_dbt_models.bdh_ee_siebel.address": ["model.bdh_dbt_models.stg_ee_address", "snapshot.bdh_dbt_models.ee_address"], "source.bdh_dbt_models.bdh_ee_siebel.address_x": ["snapshot.bdh_dbt_models.ee_address_x"], "source.bdh_dbt_models.bdh_ee_siebel.assets": ["model.bdh_dbt_models.stg_ee_assets", "snapshot.bdh_dbt_models.ee_assets"], "source.bdh_dbt_models.bdh_ee_siebel.assets_x": ["model.bdh_dbt_models.stg_ee_assets_x", "snapshot.bdh_dbt_models.ee_assets_x"], "source.bdh_dbt_models.bdh_ee_siebel.assets_xa": ["model.bdh_dbt_models.stg_ee_assets_xa", "snapshot.bdh_dbt_models.ee_assets_xa"], "source.bdh_dbt_models.bdh_ee_siebel.billing_profile": ["snapshot.bdh_dbt_models.ee_billing_profile"], "source.bdh_dbt_models.bdh_ee_siebel.campaigns": ["snapshot.bdh_dbt_models.ee_campaigns"], "source.bdh_dbt_models.bdh_ee_siebel.contact": ["model.bdh_dbt_models.stg_ee_contact", "snapshot.bdh_dbt_models.ee_contact"], "source.bdh_dbt_models.bdh_ee_siebel.contact_x": ["snapshot.bdh_dbt_models.ee_contact_x"], "source.bdh_dbt_models.bdh_ee_siebel.consent": ["snapshot.bdh_dbt_models.ee_consent"], "source.bdh_dbt_models.bdh_ee_siebel.cx_nt_acc_pref": ["model.bdh_dbt_models.stg_ee_blacklist", "snapshot.bdh_dbt_models.ee_cx_nt_acc_pref"], "source.bdh_dbt_models.bdh_ee_siebel.cx_pay_schedule": ["snapshot.bdh_dbt_models.ee_cx_pay_schedule"], "source.bdh_dbt_models.bdh_ee_siebel.cx_vas_provider": ["snapshot.bdh_dbt_models.ee_cx_vas_provider"], "source.bdh_dbt_models.bdh_ee_siebel.dd_contract": ["snapshot.bdh_dbt_models.ee_dd_contract"], "source.bdh_dbt_models.bdh_ee_siebel.invc_adj_item": ["snapshot.bdh_dbt_models.ee_invc_adj_item"], "source.bdh_dbt_models.bdh_ee_siebel.invoice_adj": ["snapshot.bdh_dbt_models.ee_invoice_adj"], "source.bdh_dbt_models.bdh_ee_siebel.list_of_values": ["snapshot.bdh_dbt_models.ee_list_of_values"], "source.bdh_dbt_models.bdh_ee_siebel.logs": ["model.bdh_dbt_models.stg_ee_logs", "snapshot.bdh_dbt_models.ee_logs"], "source.bdh_dbt_models.bdh_ee_siebel.notification_settings": ["snapshot.bdh_dbt_models.ee_notification_settings"], "source.bdh_dbt_models.bdh_ee_siebel.order_line_items": ["model.bdh_dbt_models.stg_ee_order_line_items", "model.bdh_dbt_models.stg_ee_port_in_out", "snapshot.bdh_dbt_models.ee_order_line_items"], "source.bdh_dbt_models.bdh_ee_siebel.order_items_xa": ["model.bdh_dbt_models.stg_ee_order_items_xa", "snapshot.bdh_dbt_models.ee_order_items_xa"], "source.bdh_dbt_models.bdh_ee_siebel.orders": ["model.bdh_dbt_models.stg_ee_orders", "snapshot.bdh_dbt_models.ee_orders"], "source.bdh_dbt_models.bdh_ee_siebel.product": ["model.bdh_dbt_models.stg_ee_product", "snapshot.bdh_dbt_models.ee_product"], "source.bdh_dbt_models.bdh_ee_siebel.postn": ["snapshot.bdh_dbt_models.ee_postn"], "source.bdh_dbt_models.bdh_ee_siebel.service_request": ["snapshot.bdh_dbt_models.ee_service_request"], "source.bdh_dbt_models.bdh_ee_siebel.service_request_x": ["snapshot.bdh_dbt_models.ee_service_request_x"], "source.bdh_dbt_models.bdh_ee_siebel.payment_claim": ["snapshot.bdh_dbt_models.ee_payment_claim"], "source.bdh_dbt_models.bdh_ee_siebel.user": ["snapshot.bdh_dbt_models.ee_user"], "source.bdh_dbt_models.bdh_ee_singleview.account": [], "source.bdh_dbt_models.bdh_ee_singleview.bill_run": [], "source.bdh_dbt_models.bdh_ee_singleview.current_account_balance": [], "source.bdh_dbt_models.bdh_ee_singleview.customer_node_type": [], "source.bdh_dbt_models.bdh_ee_singleview.customer_query": [], "source.bdh_dbt_models.bdh_ee_singleview.invoice_payments_history": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_balance": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_balance_cdl": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_dispute_cdl": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_gl_details": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_recur": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_part_usage": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_product_serv": [], "source.bdh_dbt_models.bdh_ee_singleview.ora_invoice_translate": [], "source.bdh_dbt_models.bdh_ee_singleview.payments_history": ["model.bdh_dbt_models.stg_ee_payments_history"], "source.bdh_dbt_models.bdh_ee_singleview.product_history": [], "source.bdh_dbt_models.bdh_ee_singleview.product_instance_history": [], "source.bdh_dbt_models.bdh_ee_singleview.reference_code": [], "source.bdh_dbt_models.bdh_ee_singleview.schedule": [], "source.bdh_dbt_models.bdh_ee_singleview.service_da_array": [], "source.bdh_dbt_models.bdh_ee_singleview.service_history": [], "source.bdh_dbt_models.bdh_ee_singleview.sv_invoice": [], "source.bdh_dbt_models.bdh_ee_singleview.tariff_history": [], "source.bdh_dbt_models.bdh_ee_singleview.treatment_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.bl_legal_check_exceptions": [], "source.bdh_dbt_models.bdh_lt_sales_tool.contract_general_params": [], "source.bdh_dbt_models.bdh_lt_sales_tool.contract_vat_reverse_charge": [], "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_business_log": [], "source.bdh_dbt_models.bdh_lt_sales_tool.credit_check_person_log": [], "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai": ["model.bdh_dbt_models.stg_lt_darbuotojai"], "source.bdh_dbt_models.bdh_lt_sales_tool.darbuotojai_subgrupese": [], "source.bdh_dbt_models.bdh_lt_sales_tool.documents": [], "source.bdh_dbt_models.bdh_lt_sales_tool.document_type": [], "source.bdh_dbt_models.bdh_lt_sales_tool.imsi": [], "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_order_queue": [], "source.bdh_dbt_models.bdh_lt_sales_tool.macpoc_vasmap": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_barcodes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_deleted": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_po_pr_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_pr_po": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_mnp_winback": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tm": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mjs_tp": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mob_interneto_sutartys": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai": ["model.bdh_dbt_models.stg_lt_mokejimo_planai"], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_change": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_config": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_package_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_services": ["model.bdh_dbt_models.stg_lt_mokejimo_planai_services"], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mokejimo_planai_tariff_all": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mp_promotion_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.mw_vas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.package_codes": ["model.bdh_dbt_models.stg_lt_package_codes"], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_1": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_2": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_3": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_4": [], "source.bdh_dbt_models.bdh_lt_sales_tool.priedai_5": [], "source.bdh_dbt_models.bdh_lt_sales_tool.promotions": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_current_services": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_msisdn_mokestis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.s12_priedai_status_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sale_channel": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sale_records": [], "source.bdh_dbt_models.bdh_lt_sales_tool.service_promotion_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.st_buckets": [], "source.bdh_dbt_models.bdh_lt_sales_tool.subgrupes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_akcijos_paslaugos_tariff_attributes_map": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kliento_tipas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_kl_tipai_mok_planai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mkl_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mokestis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_mok_planai_kl_tipai_laikotarpiai": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nesuderinamos_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_nuolaida_kodas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_preke": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_prekiu_pardavimas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_fizinis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_history": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_juridinis": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_akcijos_paslaugos": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_draudimas_log": [], "source.bdh_dbt_models.bdh_lt_sales_tool.sut_sutartis_sim_mokestis": [], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_cdl": ["snapshot.bdh_dbt_models.v_accounts"], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x_cdl": ["snapshot.bdh_dbt_models.v_accounts_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_address_cdl": ["snapshot.bdh_dbt_models.v_address"], "source.bdh_dbt_models.bdh_lt_siebel.v_address_x_cdl": ["snapshot.bdh_dbt_models.v_address_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_cdl": ["snapshot.bdh_dbt_models.v_assets"], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x_cdl": ["snapshot.bdh_dbt_models.v_assets_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa_cdl": ["snapshot.bdh_dbt_models.v_assets_xa"], "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile_cdl": ["snapshot.bdh_dbt_models.v_billing_profile"], "source.bdh_dbt_models.bdh_lt_siebel.v_contact_cdl": ["snapshot.bdh_dbt_models.v_contact"], "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x_cdl": ["snapshot.bdh_dbt_models.v_contact_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values_cdl": ["snapshot.bdh_dbt_models.v_list_of_values"], "source.bdh_dbt_models.bdh_lt_siebel.v_logs_cdl": ["snapshot.bdh_dbt_models.v_logs"], "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings_cdl": ["snapshot.bdh_dbt_models.v_notification_settings"], "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items_cdl": ["snapshot.bdh_dbt_models.v_order_line_items"], "source.bdh_dbt_models.bdh_lt_siebel.v_orders_cdl": ["snapshot.bdh_dbt_models.v_orders"], "source.bdh_dbt_models.bdh_lt_siebel.v_product_cdl": ["snapshot.bdh_dbt_models.v_product"], "source.bdh_dbt_models.bdh_lt_siebel.v_user_cdl": ["snapshot.bdh_dbt_models.v_user"], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts": ["model.bdh_dbt_models.stg_tmp_accounts", "model.bdh_dbt_models.stg_v_accounts", "snapshot.bdh_dbt_models.v_accounts"], "source.bdh_dbt_models.bdh_lt_siebel.v_accounts_x": ["model.bdh_dbt_models.stg_tmp_accounts_x", "snapshot.bdh_dbt_models.v_accounts_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_address": ["snapshot.bdh_dbt_models.v_address"], "source.bdh_dbt_models.bdh_lt_siebel.v_address_x": ["snapshot.bdh_dbt_models.v_address_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_assets": ["model.bdh_dbt_models.stg_tmp_assets", "model.bdh_dbt_models.stg_v_assets", "snapshot.bdh_dbt_models.v_assets"], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_x": ["model.bdh_dbt_models.stg_tmp_assets_x", "model.bdh_dbt_models.stg_v_assets_x", "snapshot.bdh_dbt_models.v_assets_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_assets_xa": ["model.bdh_dbt_models.stg_tmp_assets_xa", "model.bdh_dbt_models.stg_v_assets_xa", "snapshot.bdh_dbt_models.v_assets_xa"], "source.bdh_dbt_models.bdh_lt_siebel.v_billing_profile": ["model.bdh_dbt_models.stg_tmp_billing_profile", "snapshot.bdh_dbt_models.v_billing_profile"], "source.bdh_dbt_models.bdh_lt_siebel.v_contact": ["model.bdh_dbt_models.stg_tmp_contact", "snapshot.bdh_dbt_models.v_contact"], "source.bdh_dbt_models.bdh_lt_siebel.v_contact_x": ["snapshot.bdh_dbt_models.v_contact_x"], "source.bdh_dbt_models.bdh_lt_siebel.v_list_of_values": ["snapshot.bdh_dbt_models.v_list_of_values"], "source.bdh_dbt_models.bdh_lt_siebel.v_logs": ["snapshot.bdh_dbt_models.lv_v_logs", "snapshot.bdh_dbt_models.v_logs"], "source.bdh_dbt_models.bdh_lt_siebel.v_notification_settings": ["snapshot.bdh_dbt_models.lv_v_notification_settings", "snapshot.bdh_dbt_models.v_notification_settings"], "source.bdh_dbt_models.bdh_lt_siebel.v_order_line_items": ["model.bdh_dbt_models.stg_tmp_order_line_items", "snapshot.bdh_dbt_models.v_order_line_items"], "source.bdh_dbt_models.bdh_lt_siebel.v_orders": ["model.bdh_dbt_models.stg_tmp_orders", "snapshot.bdh_dbt_models.v_orders"], "source.bdh_dbt_models.bdh_lt_siebel.v_product": ["model.bdh_dbt_models.stg_tmp_product", "model.bdh_dbt_models.stg_v_product", "snapshot.bdh_dbt_models.v_product"], "source.bdh_dbt_models.bdh_lt_siebel.v_user": ["snapshot.bdh_dbt_models.v_user"], "source.bdh_dbt_models.bdh_lv_postp_dm.dim_lv_binding_products_snapshot": ["model.bdh_dbt_models.dim_lv_binding_products", "snapshot.bdh_dbt_models.dim_lv_binding_products_snapshot"], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets": ["model.bdh_dbt_models.stg_raw_lv_assets", "snapshot.bdh_dbt_models.stg_lv_v_assets"], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_assets_xa": ["model.bdh_dbt_models.stg_raw_lv_assets_xa", "snapshot.bdh_dbt_models.stg_lv_v_assets_xa"], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_order_line_items": ["model.bdh_dbt_models.stg_raw_lv_order_line_items", "snapshot.bdh_dbt_models.stg_lv_v_order_line_items"], "source.bdh_dbt_models.bdh_lv_postp_dm.stg_lv_v_products": ["model.bdh_dbt_models.stg_raw_lv_products", "snapshot.bdh_dbt_models.stg_lv_v_products"], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_cdl": ["snapshot.bdh_dbt_models.lv_v_accounts"], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x_cdl": ["snapshot.bdh_dbt_models.lv_v_accounts_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_activities_cdl": ["snapshot.bdh_dbt_models.lv_v_activities"], "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x_cdl": ["snapshot.bdh_dbt_models.lv_v_activities_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item_cdl": ["snapshot.bdh_dbt_models.lv_v_audit_item"], "source.bdh_dbt_models.bdh_lv_siebel.v_address_cdl": ["snapshot.bdh_dbt_models.lv_v_address"], "source.bdh_dbt_models.bdh_lv_siebel.v_address_x_cdl": ["snapshot.bdh_dbt_models.lv_v_address_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_cdl": ["snapshot.bdh_dbt_models.lv_v_assets"], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x_cdl": ["snapshot.bdh_dbt_models.lv_v_assets_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa_cdl": ["snapshot.bdh_dbt_models.lv_v_assets_xa"], "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile_cdl": ["snapshot.bdh_dbt_models.lv_v_billing_profile"], "source.bdh_dbt_models.bdh_lv_siebel.v_contact_cdl": ["snapshot.bdh_dbt_models.lv_v_contact"], "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x_cdl": ["snapshot.bdh_dbt_models.lv_v_contact_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values_cdl": ["snapshot.bdh_dbt_models.lv_v_list_of_values"], "source.bdh_dbt_models.bdh_lv_siebel.v_logs_cdl": ["snapshot.bdh_dbt_models.lv_v_logs"], "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings_cdl": ["snapshot.bdh_dbt_models.lv_v_notification_settings"], "source.bdh_dbt_models.bdh_lv_siebel.v_notification_cdl": ["snapshot.bdh_dbt_models.lv_v_notification"], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_cdl": ["snapshot.bdh_dbt_models.lv_v_order_line_items"], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x_cdl": ["snapshot.bdh_dbt_models.lv_v_order_line_items_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_orders_cdl": ["snapshot.bdh_dbt_models.lv_v_orders"], "source.bdh_dbt_models.bdh_lv_siebel.v_order_x_cdl": ["snapshot.bdh_dbt_models.lv_v_order_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_products_cdl": ["snapshot.bdh_dbt_models.lv_v_products"], "source.bdh_dbt_models.bdh_lv_siebel.v_positions_cdl": ["snapshot.bdh_dbt_models.lv_v_positions"], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_cdl": ["snapshot.bdh_dbt_models.lv_v_service_request"], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x_cdl": ["snapshot.bdh_dbt_models.lv_v_service_request_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_user_cdl": ["snapshot.bdh_dbt_models.lv_v_user"], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_accounts_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_address_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_assets_xa": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_billing_profile": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_contact_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_list_of_values": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_logs": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_notification_settings": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_line_items_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_orders": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_order_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_products": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_positions": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_service_request_x": [], "source.bdh_dbt_models.bdh_lv_siebel.lv_v_user": [], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts": ["snapshot.bdh_dbt_models.lv_v_accounts"], "source.bdh_dbt_models.bdh_lv_siebel.v_accounts_x": ["snapshot.bdh_dbt_models.lv_v_accounts_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_activities": ["snapshot.bdh_dbt_models.lv_v_activities"], "source.bdh_dbt_models.bdh_lv_siebel.v_activities_x": ["snapshot.bdh_dbt_models.lv_v_activities_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_audit_item": ["snapshot.bdh_dbt_models.lv_v_audit_item"], "source.bdh_dbt_models.bdh_lv_siebel.v_address": ["snapshot.bdh_dbt_models.lv_v_address"], "source.bdh_dbt_models.bdh_lv_siebel.v_address_x": ["snapshot.bdh_dbt_models.lv_v_address_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_assets": ["snapshot.bdh_dbt_models.lv_v_assets"], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_x": ["snapshot.bdh_dbt_models.lv_v_assets_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_assets_xa": ["snapshot.bdh_dbt_models.lv_v_assets_xa"], "source.bdh_dbt_models.bdh_lv_siebel.v_billing_profile": ["snapshot.bdh_dbt_models.lv_v_billing_profile"], "source.bdh_dbt_models.bdh_lv_siebel.v_contact": ["snapshot.bdh_dbt_models.lv_v_contact"], "source.bdh_dbt_models.bdh_lv_siebel.v_contact_x": ["snapshot.bdh_dbt_models.lv_v_contact_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_list_of_values": ["snapshot.bdh_dbt_models.lv_v_list_of_values"], "source.bdh_dbt_models.bdh_lv_siebel.v_logs": [], "source.bdh_dbt_models.bdh_lv_siebel.v_notification": ["snapshot.bdh_dbt_models.lv_v_notification"], "source.bdh_dbt_models.bdh_lv_siebel.v_notification_settings": [], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items": ["snapshot.bdh_dbt_models.lv_v_order_line_items"], "source.bdh_dbt_models.bdh_lv_siebel.v_order_line_items_x": ["snapshot.bdh_dbt_models.lv_v_order_line_items_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_orders": ["snapshot.bdh_dbt_models.lv_v_orders"], "source.bdh_dbt_models.bdh_lv_siebel.v_order_x": ["snapshot.bdh_dbt_models.lv_v_order_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_products": ["snapshot.bdh_dbt_models.lv_v_products"], "source.bdh_dbt_models.bdh_lv_siebel.v_positions": ["snapshot.bdh_dbt_models.lv_v_positions"], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request": ["snapshot.bdh_dbt_models.lv_v_service_request"], "source.bdh_dbt_models.bdh_lv_siebel.v_service_request_x": ["snapshot.bdh_dbt_models.lv_v_service_request_x"], "source.bdh_dbt_models.bdh_lv_siebel.v_user": ["snapshot.bdh_dbt_models.lv_v_user"], "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_csv_file": ["model.bdh_dbt_models.v_raw_demo_csv_file"], "source.bdh_dbt_models.bdh_raw_demo_source.raw_demo_json_file": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_accounts_s_org_ext_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_activities_s_evt_act_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_s_addr_per": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_addresses_intersection_s_con_addr": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_assets_s_asset_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_asset_attributes_s_asset_xa": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_audit_trail_s_audit_item": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_billing_profile_s_inv_prof": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_campaigns_s_src": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_ee_consent_exacaster": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_contacts_s_contact_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_cx_nt_acc_pref": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_paymentschedule_cx_pay_schedule": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_vas_providers_cx_vas_provider": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_dd_cx_dd_contract": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustment_items_s_invc_adj_item": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_adjustments_s_invoice_adj": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_list_of_values_s_lst_of_val": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_logs_cx_bus_log": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_notification_settings_cx_add_info_xm": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item_xa": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_order_line_items_s_order_item": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_orders_s_order": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_payment_claim_cx_pay_claim": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_positions_s_postn": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_products_s_prod_int": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_service_request_s_srv_req_x": [], "source.bdh_dbt_models.bdh_raw_ee_siebel.raw_sbl_users_s_user": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_accounts_s_org_ext_x": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_s_addr_per": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_addresses_intersection_s_con_addr": ["model.bdh_dbt_models.v_address_x"], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_asset_attributes_s_asset_xa": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_billing_profile_s_inv_prof": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_contacts_s_contact_x": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_list_of_values_s_lst_of_val": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_logs_cx_bus_log": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_notification_settings_cx_add_info_xm": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_order_line_items_s_order_item": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_orders_s_order": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_products_s_prod_int": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_users_s_user": [], "source.bdh_dbt_models.bdh_raw_lt_siebel.raw_sbl_assets_s_asset_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_users_s_user": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_cbs_siebel_acc_map": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_consent_exacaster": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_lv_notifications_exacaster": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_accounts_s_org_ext_x": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_activities_s_evt_act_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_s_addr_per": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_addresses_intersection_s_con_addr": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset": ["snapshot.bdh_dbt_models.stg_lv_v_assets"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_assets_s_asset_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_asset_attributes_s_asset_xa": ["snapshot.bdh_dbt_models.stg_lv_v_assets_xa"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_audit_trail_s_audit_item": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_billing_profile_s_inv_prof": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_contacts_s_contact_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_list_of_values_s_lst_of_val": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_notification_cx_nt_acc_pref": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item": ["snapshot.bdh_dbt_models.stg_lv_v_order_line_items"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_order_line_items_s_order_item_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order_x": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_orders_s_order": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_positions_s_postn": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_products_s_prod_int": ["snapshot.bdh_dbt_models.stg_lv_v_products"], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req": [], "source.bdh_dbt_models.bdh_raw_lv_siebel.raw_sbl_service_request_s_srv_req_x": [], "source.bdh_dbt_models.bdh_test_lv_one_time_load.baltcom_fbb_addresses": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"], "source.bdh_dbt_models.bdh_test_lv_one_time_load.t2lv_monthly_b2b_mng_hist": ["model.bdh_dbt_models.t2lv_cbm_postp_accounts_snapshot"]}, "group_map": {}, "saved_queries": {}, "semantic_models": {}}